{
    "orbit-orbit": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "com.ea.orbit.actors.mongodb.test.MongodbPersistenceTest#checkReads",
            "com.ea.orbit.actors.mongodb.test.MongodbPersistenceTest#checkClearState",
            "com.ea.orbit.actors.test.TimerTest#timerTest",
            "com.ea.orbit.actors.test.LifeCycleTest#deactivationTest",
            "com.ea.orbit.actors.test.DeactivationTest#statelessWorkerDeactivationTest",
            "com.ea.orbit.actors.test.StatelessActorTest#statelessTest",
            "com.ea.orbit.actors.test.ReminderTest#persistedTimerTest",
            "com.ea.orbit.actors.test.DeactivationTest#cleanupTest",
            "com.ea.orbit.actors.test.ObserverTest#observerGarbageCollection",
            "com.ea.orbit.actors.mongodb.test.MongodbPersistenceTest#checkWritesTest"
        ],
        "tests": [],
        "od_tests": []
    },
    "Alluxio-alluxio": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "tachyon.client.FileInStreamTest#readTest3",
            "tachyon.client.RemoteBlockInStreamTest#readTest4",
            "tachyon.JournalTest#AddBlockTest",
            "tachyon.MasterInfoTest#deleteFileTest",
            "tachyon.MasterInfoTest#lsTest",
            "tachyon.client.table.RawTableTest#getNameTest",
            "tachyon.client.TachyonFSTest#deleteFileTest",
            "tachyon.command.TFsShellTest#mkdirTest",
            "tachyon.MasterInfoTest#deleteEmptyDirectoryTest",
            "tachyon.client.TachyonFSTest#createFileWithCheckpointFileTest",
            "tachyon.client.TachyonFSTest#createFileTest2",
            "tachyon.MasterInfoTest#createFileTest",
            "tachyon.client.TachyonFSTest#unlockBlockTest2",
            "tachyon.MasterInfoTest#createFileInvalidPathTest",
            "tachyon.client.TachyonFSTest#createRawTableWithInvalidPathExceptionTest1",
            "tachyon.MasterInfoTest#clientFileInfoEmptyFileTest",
            "tachyon.JournalTest#FileFolderTest",
            "tachyon.MasterInfoTest#getCapacityBytesTest",
            "tachyon.command.TFsShellTest#copyToLocalTest",
            "tachyon.client.RemoteBlockInStreamTest#readTest3",
            "tachyon.JournalTest#EmptyImageTest",
            "tachyon.client.LocalBlockInStreamTest#readTest2",
            "tachyon.client.TachyonFSTest#renameFileTest1",
            "tachyon.client.TachyonFSTest#createRawTableTestWithMetadata",
            "tachyon.client.TachyonFSTest#createFileTest",
            "tachyon.WorkerServiceHandlerTest#returnSpaceTest",
            "tachyon.WorkerServiceHandlerTest#overReturnSpaceTest",
            "tachyon.MasterFaultToleranceTest#faultTest",
            "tachyon.command.TFsShellTest#renameToExistingFileTest",
            "tachyon.command.TFsShellTest#rmTest",
            "tachyon.client.TachyonFileTest#isInMemoryTest",
            "tachyon.client.TachyonFSTest#lockBlockTest4",
            "tachyon.command.TFsShellTest#fileinfoTest",
            "tachyon.client.table.RawTableTest#getMetadataTest",
            "tachyon.client.TachyonFileTest#isInMemoryTest3",
            "tachyon.MasterInfoTest#deleteDirectoryWithFilesTest2",
            "tachyon.client.FileInStreamTest#readTest2",
            "tachyon.client.FileOutStreamTest#writeTest1",
            "tachyon.command.TFsShellTest#mkdirShortPathTest",
            "tachyon.client.BlockInStreamTest#skipTest",
            "tachyon.JournalTest#ManyFileTest",
            "tachyon.client.TachyonFSTest#createRawTableTestEmptyMetadata",
            "tachyon.client.table.RawTableTest#rawtablePerfTest",
            "tachyon.command.TFsShellTest#mkdirInvalidPathTest",
            "tachyon.MasterInfoTest#deleteDirectoryWithDirectoriesTest2",
            "tachyon.client.TachyonFSTest#createRawTableWithTableColumnExceptionTest1",
            "tachyon.client.TachyonFileTest#writeEmptyFileTest",
            "tachyon.command.TFsShellTest#locationTest",
            "tachyon.MasterInfoTest#tooManyColumnsTest",
            "tachyon.WorkerServiceHandlerTest#totalOverCapacityRequestSpaceTest",
            "tachyon.MasterInfoTest#createDirectoryTest",
            "tachyon.command.TFsShellTest#copyToLocalLargeTest",
            "tachyon.client.TachyonFSTest#lockBlockTest2",
            "tachyon.JournalTest#TableTest",
            "tachyon.MasterInfoTest#createAlreadyExistFileTest",
            "tachyon.client.FileOutStreamTest#writeTest3",
            "tachyon.client.FileInStreamTest#readTest1",
            "tachyon.client.BlockInStreamTest#readTest3",
            "tachyon.client.TachyonFSTest#createRawTableWithTableColumnExceptionTest2",
            "tachyon.client.LocalBlockInStreamTest#readTest3",
            "tachyon.MasterInfoTest#deleteDirectoryWithDirectoriesTest",
            "tachyon.JournalTest#DeleteTest",
            "tachyon.client.TachyonFileTest#isInMemoryTest2",
            "tachyon.command.TFsShellTest#rmNotExistingFileTest",
            "tachyon.command.TFsShellTest#copyFromLocalLargeTest",
            "tachyon.MasterInfoTest#clientFileInfoDirectoryTest",
            "tachyon.JournalTest#FileTest",
            "tachyon.MasterInfoTest#createRawTableTest",
            "tachyon.JournalTest#AddCheckpointTest",
            "tachyon.MasterInfoTest#createFilePerfTest",
            "tachyon.client.table.RawTableTest#getColumnsTest",
            "tachyon.client.TachyonFSTest#renameFileTest3",
            "tachyon.JournalTest#RenameTest",
            "tachyon.client.TachyonFSTest#createRawTableWithFileAlreadyExistExceptionTest",
            "tachyon.client.TachyonFSTest#unlockBlockTest3",
            "tachyon.MasterInfoTest#negativeColumnTest",
            "tachyon.command.TFsShellTest#copyFromLocalTest",
            "tachyon.client.TachyonFSTest#createRawTableWithInvalidPathExceptionTest2",
            "tachyon.client.TachyonFSTest#createFileWithFileAlreadyExistExceptionTest",
            "tachyon.WorkerServiceHandlerTest#evictionTest",
            "tachyon.command.TFsShellTest#mkdirComplexPathTest",
            "tachyon.MasterInfoTest#addCheckpointTest",
            "tachyon.client.RemoteBlockInStreamTest#readTest5",
            "tachyon.WorkerServiceHandlerTest#overCapacityRequestSpaceTest",
            "tachyon.client.FileOutStreamTest#writeTest2",
            "tachyon.client.TachyonFSTest#createFileWithInvalidPathExceptionTest",
            "tachyon.client.TachyonFSTest#lockBlockTest3",
            "tachyon.client.TachyonFSTest#lockBlockTest1",
            "tachyon.MasterClientTest#openCloseTest",
            "tachyon.client.BlockInStreamTest#readTest2",
            "tachyon.DataServerTest#readPartialTest2",
            "tachyon.client.table.RawColumnTest#basicTest",
            "tachyon.client.table.RawTableTest#updateMetadataTest",
            "tachyon.client.table.RawTableTest#getIdTest",
            "tachyon.client.RemoteBlockInStreamTest#readTest2",
            "tachyon.client.table.RawTableTest#getPathTest",
            "tachyon.client.RemoteBlockInStreamTest#readTest7",
            "tachyon.MasterInfoTest#deleteDirectoryWithFilesTest",
            "tachyon.MasterFaultToleranceTest#getClientsTest",
            "tachyon.client.TachyonFSTest#renameFileTest2",
            "tachyon.DataServerTest#readTest",
            "tachyon.client.BlockInStreamTest#readTest1",
            "tachyon.MasterInfoTest#notFileCheckpointTest",
            "tachyon.client.LocalBlockInStreamTest#skipTest",
            "tachyon.client.TachyonFSTest#unlockBlockTest1",
            "tachyon.client.RemoteBlockInStreamTest#readTest1",
            "tachyon.client.TachyonFSTest#createRawTableWithTableColumnExceptionTest3",
            "tachyon.client.FileInStreamTest#skipTest",
            "tachyon.client.LocalBlockInStreamTest#readTest1",
            "tachyon.command.TFsShellTest#renameTest",
            "tachyon.command.TFsShellTest#mkdirExistingTest",
            "tachyon.command.TFsShellTest#renameParentDirectoryTest",
            "tachyon.DataServerTest#readPartialTest1",
            "tachyon.client.RemoteBlockInStreamTest#readTest6",
            "tachyon.client.RemoteBlockInStreamTest#skipTest",
            "tachyon.JournalTest#FolderTest"
        ],
        "tests": [],
        "od_tests": []
    },
    "apache-ambari": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentHostSimple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateActions",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServicesWithFilters",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServicesSimple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateHostMultiple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetClustersWithFilters",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetActions",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentMultiple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceComponentUpdateRecursive",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testConfigUpdates",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServiceComponentHostsWithFilters",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentHostMultiple",
            "org.apache.ambari.server.bootstrap.BootStrapTest#testRun",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateClusterWithInvalidStack",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceUpdateInvalidRequest",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testUpdateUsers",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetClusters",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testClientServiceSmokeTests",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateAndGetUsers",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceWithInvalidInfo",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentWithInvalidRequest",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceUpdateInvalidUpdates",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServicesMultiple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServicesWithInvalidRequest",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testStartClientComponent",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceUpdateRecursive",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServiceComponents",
            "org.apache.ambari.server.agent.TestHeartbeatMonitor#testHeartbeatStateCommandsEnqueueing",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServiceComponentsWithFilters",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testDeleteUsers",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetUsers",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testStartClientHostComponent",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServiceComponentHosts",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateClusterWithInvalidRequest",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testInstallAndStartService",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetRequestAndTaskStatus",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateClusterWithHostMapping",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateHostWithInvalidRequests",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testRcaOnJobtrackerHost",
            "org.apache.ambari.server.agent.TestActionQueue#testConcurrentOperations",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetHosts",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentWithConfigs",
            "org.apache.ambari.server.security.authorization.AmbariLdapAuthenticationProviderTest#testAuthenticate",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateClusterWithDesiredClusterConfigs",
            "org.apache.ambari.server.controller.ganglia.GangliaPropertyProviderTest#testGetManyResources",
            "org.apache.ambari.server.security.authorization.AmbariLdapAuthenticationProviderTest#testBadCredential",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceComponentHostUpdateRecursive",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateHostSimple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testGetServices",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testServiceUpdateBasic",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentSimple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateClusterSimple",
            "org.apache.ambari.server.controller.AmbariManagementControllerTest#testCreateServiceComponentHostWithInvalidRequest",
            "org.apache.ambari.server.api.services.serializers.JsonSerializerTest#testSerialize"
        ],
        "tests": [],
        "od_tests": []
    },
    "kevinsawicki-http-request": {
        "total_tests": [
            "com.github.kevinsawicki.http.HttpRequestTest#appendMappedQueryParamsWithExistingQueryStart",
            "com.github.kevinsawicki.http.HttpRequestTest#traceEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#getReader",
            "com.github.kevinsawicki.http.HttpRequestTest#getHeaders",
            "com.github.kevinsawicki.http.HttpRequestTest#uploadProgressSendByteArray",
            "com.github.kevinsawicki.http.HttpRequestTest#getToOutputBodyWithCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#appendEmptyMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#contentEncodingHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#receiveFile",
            "com.github.kevinsawicki.http.HttpRequestTest#getToOutputCode",
            "com.github.kevinsawicki.http.HttpRequestTest#appendNullMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getToOutputBody",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#appendVarargsQueryParamsWithPath",
            "com.github.kevinsawicki.http.HttpRequestTest#appendNullVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#sendDateHeaderWithoutCode",
            "com.github.kevinsawicki.http.HttpRequestTest#singleSslSocketFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#dateHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getMultipleParameters",
            "com.github.kevinsawicki.http.HttpRequestTest#getEmptyParameters",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.EncodeTest#encode",
            "com.github.kevinsawicki.http.HttpRequestTest#sendErrorCloseStream",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#bodyOfNonEmptyErrorResponse",
            "com.github.kevinsawicki.http.HttpRequestTest#appendWithNullVaragsQueryParamValues",
            "com.github.kevinsawicki.http.HttpRequestTest#acceptHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getMixQuotedParameters",
            "com.github.kevinsawicki.http.HttpRequestTest#sendHeadersWithoutCode",
            "com.github.kevinsawicki.http.HttpRequestTest#headUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#postMultipleFiles",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithNumericQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getEmptyHeaders",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#serverHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#badRequestCode",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#numberHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#postForm",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getParameters",
            "com.github.kevinsawicki.http.HttpRequestTest#appendEmptyVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getNonEmptyString",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getBufferedReader",
            "com.github.kevinsawicki.http.HttpRequestTest#acceptCharsetHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#appendMultipleMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#expiresHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#lastModifiedHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getSingleParameterQuoted",
            "com.github.kevinsawicki.http.HttpRequestTest#notModifiedCode",
            "com.github.kevinsawicki.http.HttpRequestTest#ifNoneMatchHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#malformedStringUrl",
            "com.github.kevinsawicki.http.HttpRequestTest#optionsEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#appendMappedQueryParamsWithNoPath",
            "com.github.kevinsawicki.http.HttpRequestTest#appendOddNumberOfParams",
            "com.github.kevinsawicki.http.HttpRequestTest#receiveWriter",
            "com.github.kevinsawicki.http.HttpRequestTest#postUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#eTagHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#appendListQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getAllHeaders",
            "com.github.kevinsawicki.http.HttpRequestTest#requestContentType",
            "com.github.kevinsawicki.http.HttpRequestTest#appendWithVarargsQueryParamsWithExistingParams",
            "com.github.kevinsawicki.http.HttpRequestTest#customConnectionFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#negativeBufferSize",
            "com.github.kevinsawicki.http.HttpRequestTest#httpTrust",
            "com.github.kevinsawicki.http.HttpRequestTest#postNonEmptyReader",
            "com.github.kevinsawicki.http.HttpRequestTest#getMultipleParametersQuoted",
            "com.github.kevinsawicki.http.HttpRequestTest#postFormEntryWithNullValue",
            "com.github.kevinsawicki.http.HttpRequestTest#getReaderWithCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#acceptEncodingHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getError",
            "com.github.kevinsawicki.http.HttpRequestTest#sendReceiveWithoutCode",
            "com.github.kevinsawicki.http.HttpRequestTest#chunkPost",
            "com.github.kevinsawicki.http.HttpRequestTest#postNonEmptyByteArray",
            "com.github.kevinsawicki.http.HttpRequestTest#locationHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#uploadProgressSend",
            "com.github.kevinsawicki.http.HttpRequestTest#headers",
            "com.github.kevinsawicki.http.HttpRequestTest#contentTypeHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getGzipped",
            "com.github.kevinsawicki.http.HttpRequestTest#postFormAsEntries",
            "com.github.kevinsawicki.http.HttpRequestTest#optionsUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#AcustomConnectionFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#malformedDateHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#httpsTrust",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#appendVarargsQueryParamsWithExistingQueryStart",
            "com.github.kevinsawicki.http.HttpRequestTest#postFormWithNoCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#getSingleParameter",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getParameterFromMissingHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#requestContentTypeEmptyCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#uploadProgressSendReader",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithResponseCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.EncodeTest#encodeMalformedUri",
            "com.github.kevinsawicki.http.HttpRequestTest#postEmptyForm",
            "com.github.kevinsawicki.http.HttpRequestTest#postMultipart",
            "com.github.kevinsawicki.http.HttpRequestTest#appendMultipleVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#basicAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#nullUploadProgress",
            "com.github.kevinsawicki.http.HttpRequestTest#userAgentHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#uploadProgressSendInputStream",
            "com.github.kevinsawicki.http.HttpRequestTest#missingDateHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#singleVerifier",
            "com.github.kevinsawicki.http.HttpRequestTest#bodyOfEmptyErrorResponse",
            "com.github.kevinsawicki.http.HttpRequestTest#postNonEmptyString",
            "com.github.kevinsawicki.http.HttpRequestTest#getQuotedParameters",
            "com.github.kevinsawicki.http.HttpRequestTest#postEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#appendMappedQueryParamsWithPath",
            "com.github.kevinsawicki.http.HttpRequestTest#sendWithWriter",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#streamOfEmptyOkResponse",
            "com.github.kevinsawicki.http.HttpRequestTest#postNonEmptyFile",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#refererHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#sendIntHeaderWithoutCode",
            "com.github.kevinsawicki.http.HttpRequestTest#getNonGzippedWithUncompressEnabled",
            "com.github.kevinsawicki.http.HttpRequestTest#receiveAppendable",
            "com.github.kevinsawicki.http.HttpRequestTest#headEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#requestContentTypeNullCharset",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#appendMappedQueryParamsWithExistingParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithLength",
            "com.github.kevinsawicki.http.HttpRequestTest#verifierAccepts",
            "com.github.kevinsawicki.http.HttpRequestTest#noError",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#sendErrorReadStream",
            "com.github.kevinsawicki.http.HttpRequestTest#malformedIntHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#getNoContent",
            "com.github.kevinsawicki.http.HttpRequestTest#malformedStringUrlCause",
            "com.github.kevinsawicki.http.HttpRequestTest#getMissingParameter",
            "com.github.kevinsawicki.http.HttpRequestTest#acceptJson",
            "com.github.kevinsawicki.http.HttpRequestTest#serverErrorCode",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithResponseCharsetAsSecondParam",
            "com.github.kevinsawicki.http.HttpRequestTest#putUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#putEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#appendWithNullMappedQueryParamValues",
            "com.github.kevinsawicki.http.HttpRequestTest#traceUrlEmpty",
            "com.github.kevinsawicki.http.HttpRequestTest#getBytes",
            "com.github.kevinsawicki.http.HttpRequestTest#appendArrayQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#nullConnectionFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#cacheControlHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#postMultipartWithContentType",
            "com.github.kevinsawicki.http.HttpRequestTest#getEmptyParameter",
            "com.github.kevinsawicki.http.HttpRequestTest#appendVarargsQueryParmasWithNoPath",
            "com.github.kevinsawicki.http.HttpRequestTest#receivePrintStream",
            "com.github.kevinsawicki.http.HttpRequestTest#ifModifiedSinceHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#missingIntHeader",
            "com.github.kevinsawicki.http.HttpRequestTest#emptyHeaders",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithNumericQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#singleVerifier",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#singleSslSocketFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#verifierAccepts",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "tests": [],
        "od_tests": [
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#verifierAccepts",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#singleSslSocketFactory",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithNumericQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#putWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#postWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#singleVerifier",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_sleep_decrease": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_random_max": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_sleep_increase": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_time_round": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_random_fix": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_locale_fix": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_date_relative": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_socket_0.1": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_clock_relative": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_time_increment": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_time_relative": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_random_min": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_sleep_random": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_zone_fix": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_time_speedup": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_time_slow": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_fix_date": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ],
        "config_only_date_bk": [
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#basicProxyAuthentication",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithSpace",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithVaragsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithUnicode",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#deleteWithVarargsQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#headWithEscapedMappedQueryParams",
            "com.github.kevinsawicki.http.HttpRequestTest#getUrlEncodedWithPercent",
            "com.github.kevinsawicki.http.HttpRequestTest#getWithMappedQueryParams"
        ]
    },
    "apache-hbase": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "org.apache.hadoop.hbase.client.TestGetRowVersions#testGetRowMultipleVersions",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testMultiCellGetPutPB",
            "org.apache.hadoop.hbase.stargate.TestSchemaResource#testTableCreateAndDeleteXML",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest867",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testRaceBetweenClientAndTimeout",
            "org.apache.hadoop.hbase.master.TestMinimumServerCount#testMinimumServerCount",
            "org.apache.hadoop.hbase.TestMergeMeta#testMergeMeta",
            "org.apache.hadoop.hbase.client.TestAdmin#testTableNotFoundExceptionWithATable",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testListTables",
            "org.apache.hadoop.hbase.regionserver.wal.TestLogRolling#testLogRolling",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStorageClusterVersionText",
            "org.apache.hadoop.hbase.regionserver.TestGetDeleteTracker#testIsDeleted_NotDeleted",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanEmptyToEmpty",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testRowsPutBufferedOneFlush",
            "org.apache.hadoop.hbase.client.TestAdmin#testCreateBadTables",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStargateVersionPB",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest1182",
            "org.apache.hadoop.hbase.stargate.TestScannerResource#testSimpleScannerPB",
            "org.apache.hadoop.hbase.master.TestMasterTransitions#testAddingServerBeforeOldIsDead2413",
            "org.apache.hadoop.hbase.TestInfoServers#testInfoServersAreUp",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testMultiCellGetPutXML",
            "org.apache.hadoop.hbase.regionserver.TestWideScanner#testWideScanBatching",
            "org.apache.hadoop.hbase.stargate.TestScannerResource#testSimpleScannerBinary",
            "org.apache.hadoop.hbase.regionserver.wal.TestHLog#testFindMemstoresWithEditsOlderThan",
            "org.apache.hadoop.hbase.regionserver.TestStoreFile#testBasicHalfMapFile",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanEmptyToOPP",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testGetClosestRowBefore",
            "org.apache.hadoop.hbase.TestEmptyMetaInfo#testEmptyMetaInfo",
            "org.apache.hadoop.hbase.stargate.Test00MiniCluster#testStargateServlet",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testGet_NonExistentRow",
            "org.apache.hadoop.hbase.regionserver.TestStore#testIncrementColumnValue_ICVDuringFlush",
            "org.apache.hadoop.hbase.stargate.Test00MiniCluster#testHBaseMiniCluster",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testPut",
            "org.apache.hadoop.hbase.regionserver.TestGetClosestAtOrBefore#testGetClosestRowBefore3",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStorageClusterVersionJSON",
            "org.apache.hadoop.hbase.client.TestAdmin#testReadOnlyTable",
            "org.apache.hadoop.hbase.client.TestScannerTimeout#test2481",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest52",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testDeletes",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testPageFilter",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testScanner",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testSimpleMissing",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteAdmin#testCreateTable",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testDelete",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteTable#testScanner",
            "org.apache.hadoop.hbase.regionserver.wal.TestLogRolling#testLogRollOnDatanodeDeath",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest1014",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanYYXToEmpty",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testVersionLimits",
            "org.apache.hadoop.hbase.stargate.auth.TestZooKeeperAuthenticator#testGetAdminUser",
            "org.apache.hadoop.hbase.TestMultiParallelPut#testMultiPut",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testFilters",
            "org.apache.hadoop.hbase.regionserver.TestHRegion#testFlushCacheWhileScanning",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testSingleCellGetPutPB",
            "org.apache.hadoop.hbase.regionserver.TestHRegion#testWritesWhileGetting",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testScanAndSyncFlush",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testStopRow",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testRowsPutBufferedManyManyFlushes",
            "org.apache.hadoop.hbase.stargate.TestSchemaResource#testTableCreateAndDeletePB",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanOBBToQPP",
            "org.apache.hadoop.hbase.client.TestTimestamp#testTimestamps",
            "org.apache.hadoop.hbase.stargate.auth.TestZooKeeperAuthenticator#testGetDisabledUser",
            "org.apache.hadoop.hbase.client.TestAdmin#testCreateTableWithRegions",
            "org.apache.hadoop.hbase.regionserver.TestHRegion#testWritesWhileScanning",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStargateVersionJSON",
            "org.apache.hadoop.hbase.regionserver.TestGetClosestAtOrBefore#testGetClosestRowBefore2",
            "org.apache.hadoop.hbase.regionserver.TestCompaction#testCompaction",
            "org.apache.hadoop.hbase.stargate.TestTableResource#testTableListJSON",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStargateVersionXML",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanOBBToOPP",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testVersions",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanEmptyToBBB",
            "org.apache.hadoop.hbase.regionserver.wal.TestHLog#testAppend",
            "org.apache.hadoop.hbase.stargate.Test00MiniCluster#testZooKeeperMiniCluster",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest33",
            "org.apache.hadoop.hbase.regionserver.TestStoreFile#testReference",
            "org.apache.hadoop.hbase.io.TestHeapSize#testNativeSizes",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testFirstKeyOnlyFilter",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testSingleCellGetPutXML",
            "org.apache.hadoop.hbase.stargate.util.TestHTableTokenBucket#testTokenBucket",
            "org.apache.hadoop.hbase.stargate.TestTableResource#testTableListText",
            "org.apache.hadoop.hbase.stargate.util.TestHTableTokenBucket#testTokenBucketConfig",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testSkipFilter",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testRowsPut",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanOPPToEmpty",
            "org.apache.hadoop.hbase.stargate.TestScannerResource#testFullTableScan",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testGet_EmptyTable",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStorageClusterVersionXML",
            "org.apache.hadoop.hbase.mapreduce.TestTimeRangeMapRed#testTimeRangeMapRed",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testFilterList",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteTable#testGet",
            "org.apache.hadoop.hbase.stargate.auth.TestHTableAuthenticator#testGetDisabledUser",
            "org.apache.hadoop.hbase.regionserver.TestCompaction#testMajorCompactingToNoOutput",
            "org.apache.hadoop.hbase.stargate.Test00MiniCluster#testDFSMiniCluster",
            "org.apache.hadoop.hbase.mapred.TestTableMapReduce#testMultiRegionTable",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testSingleRowMultipleFamily",
            "org.apache.hadoop.hbase.stargate.auth.TestHTableAuthenticator#testGetUserUnknown",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testSingleCellGetPutBinary",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testInclusiveStopFilter",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testSingleCellGetJSON",
            "org.apache.hadoop.hbase.thrift.TestThriftServer#testAll",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testFilters",
            "org.apache.hadoop.hbase.regionserver.wal.TestHLog#testEditAdd",
            "org.apache.hadoop.hbase.client.TestAdmin#testHundredsOfTable",
            "org.apache.hadoop.hbase.stargate.TestRowResource#testURLEncodedKey",
            "org.apache.hadoop.hbase.stargate.TestTableResource#testTableListPB",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testNull",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanYZYToEmpty",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testMiscHTableStuff",
            "org.apache.hadoop.hbase.io.hfile.TestLruBlockCache#testBackgroundEvictionThread",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteTable#testPut",
            "org.apache.hadoop.hbase.util.TestMergeTool#testMergeTool",
            "org.apache.hadoop.hbase.stargate.auth.TestZooKeeperAuthenticator#testGetPlainUser",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanEmptyToAPP",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testRowFilter",
            "org.apache.hadoop.hbase.regionserver.TestScanner#testScanAndRealConcurrentFlush",
            "org.apache.hadoop.hbase.TestZooKeeper#testRegionServerSessionExpired",
            "org.apache.hadoop.hbase.master.TestRegionManager#testGetFirstMetaRegionForRegionAfterMetaSplit",
            "org.apache.hadoop.hbase.client.TestAdmin#testTableNameClash",
            "org.apache.hadoop.hbase.client.TestAdmin#testEnableDisableAddColumnDeleteColumn",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testPrefixFilter",
            "org.apache.hadoop.hbase.regionserver.TestStoreReconstruction#runReconstructionLog",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteAdmin#testDeleteTable",
            "org.apache.hadoop.hbase.stargate.TestStatusResource#testGetClusterStatusPB",
            "org.apache.hadoop.hbase.regionserver.wal.TestHLog#testSplit",
            "org.apache.hadoop.hbase.master.TestMasterTransitions#testRegionCloseWhenNoMetaHBase2428",
            "org.apache.hadoop.hbase.io.TestHeapSize#testSizes",
            "org.apache.hadoop.hbase.TestMergeTable#testMergeTable",
            "org.apache.hadoop.hbase.master.TestMasterTransitions#testKillRSWithOpeningRegion2482",
            "org.apache.hadoop.hbase.mapreduce.TestTableMapReduce#testMultiRegionTable",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteTable#testGetTableDescriptor",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testNoFilter",
            "org.apache.hadoop.hbase.stargate.TestVersionResource#testGetStargateVersionText",
            "org.apache.hadoop.hbase.stargate.auth.TestHTableAuthenticator#testGetPlainUser",
            "org.apache.hadoop.hbase.stargate.auth.TestHTableAuthenticator#testGetAdminUser",
            "org.apache.hadoop.hbase.client.TestAdmin#testForceSplit",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testQualifierFilter",
            "org.apache.hadoop.hbase.stargate.TestScannerResource#testSimpleScannerXML",
            "org.apache.hadoop.hbase.client.TestAdmin#testCreateTable",
            "org.apache.hadoop.hbase.regionserver.TestGetClosestAtOrBefore#testUsingMetaAndBinary",
            "org.apache.hadoop.hbase.stargate.auth.TestZooKeeperAuthenticator#testGetUserUnknown",
            "org.apache.hadoop.hbase.stargate.TestStatusResource#testGetClusterStatusXML",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanYYYToEmpty",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testHBase737",
            "org.apache.hadoop.hbase.client.TestAdmin#testGetTableDescriptor",
            "org.apache.hadoop.hbase.stargate.client.TestRemoteTable#testDelete",
            "org.apache.hadoop.hbase.TestScanMultipleVersions#testScanMultipleVersions",
            "org.apache.hadoop.hbase.TestRegionRebalancing#testRebalancing",
            "org.apache.hadoop.hbase.mapreduce.TestTableInputFormatScan#testScanEmptyToBBA",
            "org.apache.hadoop.hbase.stargate.TestTableResource#testTableListXML",
            "org.apache.hadoop.hbase.stargate.TestScannersWithFilters#testValueFilter",
            "org.apache.hadoop.hbase.client.TestFromClientSide#testJiraTest861"
        ],
        "tests": [],
        "od_tests": []
    },
    "joel-costigliola-assertj-core": {
        "total_tests": [
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_throw_error_if_sequence_values_is_empty",
            "org.assertj.core.api.Assertions_tuple_Test#should_create_tuple",
            "org.assertj.core.api.map.MapAssert_containsValue_Test#should_return_this",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_not_between_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_throw_error_if_syntax_of_regular_expression_is_invalid_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_usingCustomComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_has_only_one_non_comparable_element",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_throw_NullPointerException_if_given_type_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_fail_when_a_field_differ",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_fail_since_actual_is_negative_in_hex_representation",
            "org.assertj.core.api.filter.Filter_create_Test#should_fail_if_constructor_iterable_parameter_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_fail_if_actual_matches_Pattern_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#use_custom_date_formats_set_from_Assertions_entry_point",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_true_if_both_Objects_are_null",
            "org.assertj.core.util.Dates_parse_Test#should_return_null_if_string_to_parse_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.DescriptionFormatter_format_Test#should_format_description_if_value_is_not_empty_or_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.util.ArrayWrapperList_get_Test#should_throw_error_if_index_is_greater_than_size",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_property_from_superclass",
            "org.assertj.core.api.intarray.IntArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.api.iterable.IterableAssert_areAtLeast_Test#should_have_internal_effects",
            "org.assertj.core.api.fail.Fail_fail_because_exception_was_not_thrown_Test#should_include_message_built_with_given_exception_name",
            "org.assertj.core.api.path.PathAssert_doesNotExist_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test#should_fail_if_actual_contains_keys",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_pass_if_longs_are_not_equal",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_pass_when_not_ignored_fields_are_equal",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_actual_contains_entry_key_with_different_value",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_longs_in_hexadecimal",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_fail_if_objects_are_not_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_canRead_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.Objects_hashCodeFor_Test#should_return_Arrays_deepHashCode_of_given_array",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_Test#should_throw_null_pointer_exception_when_extracting_from_null",
            "org.assertj.core.error.ShouldNotBeIn_create_Test#should_create_error_message",
            "org.assertj.core.api.chararray.CharArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.classes.Classes_assertIsAssignableFrom_Test#should_fail_if_actual_is_not_assignable_from",
            "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test#should_pass_if_inputstreams_have_equal_content",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Throwables_appendCurrentThreadStackTraceToThrowable_Test#should_add_stack_trace_of_current_thread",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertIsNotNaN_Test#should_fail_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.file.FileAssert_hasBinaryContent_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.error.ShouldBeInSameDay_create_Test#should_create_error_message",
            "org.assertj.core.internal.integers.Integers_assertIsZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Map_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_even_if_actual_type_is_not_comparable",
            "org.assertj.core.data.MapEntry_toString_Test#should_implement_toString",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCause_Test#should_return_this",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_fail_if_actual_is_not_within_given_hour_of_day",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_throw_error_if_expected_is_not_file",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_not_display_unexpected_elements_when_there_are_none_with_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_actual_contains_unexpected_entry",
            "org.assertj.core.internal.objects.Objects_assertNotEqual_Test#should_fail_if_objects_are_equal",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_fail_if_actual_is_not_within_given_minute",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Float_Test#should_create_Assert",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.api.character.CharacterAssert_isLessThanOrEqualTo_char_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.short_.ShortAssert_isPositive_Test#should_return_this",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_pass_if_actual_primitive_array_has_same_size_as_other_object_array",
            "org.assertj.core.util.Objects_namesOf_Test#should_return_class_names",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.api.date.DateAssert_isEqualTo_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Short",
            "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.util.Lists_newArrayList_withIterator_Test#should_return_empty_List_if_iterator_is_empty",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertEndsWithRaw_Test#should_succeed_if_actual_ends_with_other",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test#should_pass_if_actual_have_annotation",
            "org.assertj.core.api.longarray.LongArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.api.BDDAssertions_then_Test#should_delegate_to_assert_comparable",
            "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test#should_return_this",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableContains_Test#should_return_true_if_collections_contains_value_according_to_given_comparator",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.classes.ClassAssert_hasAnnotations_Test#should_return_this",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_some_fields_are_blank",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_fail_if_root_cause_is_not_instance_of_expected_type",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainAnyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_when_objects_to_compare_are_of_different_types",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_null_elements_for_null_field_value",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_Pattern_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.abstract_.AbstractAssert_isNull_Test#should_verify_that_actual_value_is_null",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.api.WritableAssertionInfo_descriptionText_Test#should_return_null_if_description_is_null",
            "org.assertj.core.util.Maps_format_Test#should_return_null_if_Map_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_even_if_duplicated",
            "org.assertj.core.api.shortarray.ShortArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_all_given_strings",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_null_elements_for_null_property_value",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_fail_if_actual_has_no_cause",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_throw_error_if_offset_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtMost_Test#should_pass_if_satisfies_at_most_times_condition",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_throw_exception_if_property_cannot_be_extracted_due_to_runtime_exception_during_property_access",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_short_version_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_throw_exception_when_given_name_is_null",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_extract_single_value_from_maps_by_key",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Iterables_nonNullElementsIn_Test#should_return_empty_List_if_given_Iterable_has_only_null_elements",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_some_fields_are_empty",
            "org.assertj.core.api.iterable.IterableAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_pass_if_actual_matches_Pattern",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreExactly_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.api.iterable.IterableAssert_contains_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_isSubsetOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_pass_if_floats_are_not_equal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.util.Arrays_isNullOrEmpty_Test#should_return_true_if_array_is_empty",
            "org.assertj.core.internal.paths.Paths_assertIsReadable_Test#should_succeed_if_actual_exist_and_is_readable",
            "org.assertj.core.internal.paths.Paths_assertIsRegularFile_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_pass_if_bytes_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_double_in_binary",
            "org.assertj.core.util.Arrays_format_Test#should_format_boolean_array",
            "org.assertj.core.internal.iterables.Iterables_assertHaveExactly_Test#should_fail_if_condition_is_met_much",
            "org.assertj.core.api.boolean_.BooleanAssert_isFalse_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_iterable_is_empty",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_with_offset_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_throw_PathsException_if_actual_cannot_be_resolved",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_pass_if_actual_is_in_not_array_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_not_strictly_after_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_arrayContains_Test#should_return_true_if_array_contains_value_according_to_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.api.date.DateAssert_isWithinMinute_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertNotEqual_Test#should_pass_if_objects_are_not_equal",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.internal.files.Files_assertIsFile_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_pass_if_root_cause_is_exactly_instance_of_expected_type",
            "org.assertj.core.error.ShouldNotBeEmpty_create_Test#should_create_error_message",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_CharSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_signed_long_in_hexadecimal",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_pass_if_big_decimals_are_equal",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Condition_as_Description_Test#should_throw_error_of_description_is_null",
            "org.assertj.core.api.byte_.ByteAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Character",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_fail_if_actual_is_not_today_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_hasFileName_Test#should_have_internal_effects",
            "org.assertj.core.util.Objects_castIfBelongsToType_Test#should_return_object_casted_to_given_type",
            "org.assertj.core.internal.failures.Failures_failure_with_AssertionErrorFactory_Test#should_create_own_AssertionError_when_overriding_error_message_is_specified",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.classes.ClassAssert_isNotInterface_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Condition_describedAs_String_Test#should_set_description",
            "org.assertj.core.api.integer_.IntegerAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_contains_full_sequence_even_if_partial_sequence_is_found_before",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.api.intarray.IntArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertNotSame_Test#should_pass_if_objects_are_not_same",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_equals_to_end_of_given_period_and_end_is_not_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_isGreaterThan_double_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainAtIndex_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleans.Booleans_assertEqual_Test#should_pass_if_booleans_are_equal",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_toString_Test#toString_with_anonymous_comparator",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.character.CharacterAssert_isLessThanOrEqualTo_char_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldHaveSameSizeAs_create_Test#should_create_error_message",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.api.double_.DoubleAssert_isStrictlyBetween_Doubles_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_Integer_Test#should_pass_actual",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsOtherDate_Test#should_verify_that_actual_has_time_equals_to_expected",
            "org.assertj.core.description.Description_toString_Test#should_return_value_in_toString",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_fail_if_objects_are_equal",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_properties_of_inner_class",
            "org.assertj.core.internal.classes.Classes_assertIsNotInterface_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_pass_if_actual_and_entries_are_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThanOrEqualTo_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_throw_error_if_Pattern_is_null",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.maps.Maps_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.failures.Failures_failure_with_ErrorMessage_Test#should_create_use_overriding_error_message_if_it_is_specified",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.filter.Filter_having_condition_Test#should_filter_iterable_elements_satisfying_condition",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.util.Lists_newArrayList_withIterator_Test#should_return_List_containing_all_elements_in_iterator",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.map.MapAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.boolean_.BooleanAssert_isNotEqualTo_boolean_Test#should_have_internal_effects",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_pass_if_actual_is_within_given_millisecond",
            "org.assertj.core.error.ElementsShouldBeExactly_create_Test#should_create_error_message",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.api.iterable.IterableAssert_isSubsetOf_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Lists_newArrayList_withIterable_Test#should_return_empty_List_if_iterable_is_empty",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.long_.LongAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_year_is_equals_to_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.object.ObjectAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.util.Dates_hourOfDayOf_Test#should_return_hour_of_day_of_date",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.long_.LongAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_pass_if_actual_is_in_not_array",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.short_.ShortAssert_isLessThan_short_Test#should_have_internal_effects",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_pass_if_characters_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.api.file.FileAssert_hasNoParent_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_short",
            "org.assertj.core.api.classes.ClassAssert_hasFields_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_pass_if_actual_contains_sequence_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_Test#should_throw_IllegalArgumentException_if_string_is_empty",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_fail_if_actual_is_not_instance_of_any_type",
            "org.assertj.core.internal.paths.Paths_assertStartsWithRaw_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.classes.ClassAssert_hasAnnotation_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertAreExactly_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isCloseTo_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.files.Files_assertHasExtension_Test#should_pass_if_actual_has_expected_extension",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_pass_if_bytes_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_allow_assertions_on_property_values_extracted_from_given_iterable_with_extracted_type_defined",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_bytes_in_hexadecimal",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#should_fail_if_given_date_string_representation_cant_be_parsed_with_default_date_formats",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertDoesNotHaveNotSameClassAs_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.api.intarray.IntArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_CharSequence_Test#should_create_Assert_with_StringBuffer",
            "org.assertj.core.api.Assertions_assertThat_with_CharArray_Test#should_create_Assert",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_fail_if_actual_is_not_a_readable_file",
            "org.assertj.core.util.Arrays_format_Test#should_format_short_array",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_by_comparison",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_fail_if_other_is_not_a_readable_file",
            "org.assertj.core.error.ShouldEndWith_create_Test#should_create_error_message",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThan_Test#should_have_internal_effects",
            "org.assertj.core.api.list.ListAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.doubles.Doubles_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_absolute_value_comparison_strategy",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_are_not_equal_if_second_Object_is_null_and_first_is_not",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_minuteOf_Test#should_return_minute_of_date",
            "org.assertj.core.internal.paths.Paths_assertHasNoParent_Test#should_succeed_if_actual_has_no_parent",
            "org.assertj.core.api.integer_.IntegerAssert_isBetween_Integers_Test#should_return_this",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_extract_property_values_when_no_public_field_match_given_name",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_fail_when_some_actual_field_is_null_but_not_other",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_are_not_equal_if_first_Object_is_null_and_second_is_not",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_short_in_binary",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_fail_if_actual_is_not_in_array_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_pass_if_actual_is_within_given_day_of_month_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_pass_if_actual_contains_given_entries",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_fail_if_actual_has_no_cause",
            "org.assertj.core.internal.files.Files_assertExists_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_throw_error_if_array_is_empty",
            "org.assertj.core.api.double_.DoubleAssert_isBetween_Doubles_Test#should_return_this",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualByComparingToWithStringParameter_Test#should_have_internal_effects",
            "org.assertj.core.api.filter.Filter_with_property_not_in_given_values_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.api.integer_.IntegerAssert_isGreaterThan_int_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThanOrEqualTo_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.map.MapAssert_containsOnlyKeys_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_fail_if_actual_is_not_within_given_year",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtLeast_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.objects.Objects_assertNotEqual_Test#should_fail_if_objects_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_description_Test#should_set_description",
            "org.assertj.core.error.ShouldBeNullOrEmpty_create_Test#should_create_error_message",
            "org.assertj.core.api.longarray.LongArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_fail_if_actual_is_not_in_Iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.classes.Classes_assertIsInterface_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.list.ListAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeBefore_create_Test#should_create_error_message",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldContainSequenceString_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_throw_error_if_syntax_of_regular_expression_is_invalid",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.error.ShouldContainAtIndex_create_Test#should_create_error_message",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotOfAnyClassIn_Test#should_have_internal_effects",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.Tuple_Test#convert_tuple_to_an_array",
            "org.assertj.core.api.integer_.IntegerAssert_isLessThanOrEqualTo_int_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.file.FileAssert_isRelative_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.api.file.FileAssert_hasParentWithStringParameter_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isNotBetween_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_even_if_actual_type_is_not_comparable",
            "org.assertj.core.api.double_.DoubleAssert_isStrictlyBetween_Doubles_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test#should_throw_exception_when_extracted_value_is_not_an_array_or_an_iterable",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThanOrEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_values_of_nested_property",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.abstract_.AbstractAssert_isOfAnyClassIn_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.PropertySupport_propertyValues_with_mocks_Test#should_throw_error_if_PropertyDescriptor_cannot_invoke_read_method",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_pass_if_actual_does_not_contain_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_with_offset_Test#should_return_this",
            "org.assertj.core.internal.classes.Classes_assertHasFields_Test#should_fail_if_fields_are_protected_or_private",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.date.DateAssert_isInThePast_Test#should_verify_that_actual_is_in_the_past",
            "org.assertj.core.api.boolean_.BooleanAssert_isTrue_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtMost_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_fail_if_longs_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtMost_Test#should_pass_if_never_satisfies_condition_",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotExactlyInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Dates_dayOfMonthOf_Test#should_return_day_of_month_of_date",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.BDDAssertions_then_Test#then_float_array",
            "org.assertj.core.internal.files.Diff_diff_File_Test#should_return_diffs_if_content_of_actual_is_longer_than_content_of_expected",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_cause_has_not_the_expected_message",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Lists_newArrayList_Test#should_return_new_List",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveExactly_Test#should_fail_if_condition_is_met_much",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_throw_error_if_end_date_is_null",
            "org.assertj.core.api.long_.LongAssert_isNotEqualTo_long_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.chararrays.CharArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_pass_if_actual_is_within_given_minute_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.api.intarray.IntArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#should_throw_error_when_xml_string_is_not_valid",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.classes.Classes_assertHasDeclaredFields_Test#should_pass_if_no_fields_are_expected",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_fail_if_actual_does_not_contain_null",
            "org.assertj.core.api.file.FileAssert_hasContent_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.condition.DoesNotHave_matches_Test#should_match_if_Condition_not_match",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_pass_if_actual_is_within_given_hour_of_day_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThan_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.api.byte_.ByteAssert_isLessThan_byte_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Double_Test#should_pass_actual",
            "org.assertj.core.error.ShouldBeInSameYear_create_Test#should_create_error_message",
            "org.assertj.core.util.Dates_parse_date_Test#should_parse_string_with_date_time_format",
            "org.assertj.core.api.ComparableAssertion_should_be_flexible_Test#comparable_api_should_be_flexible",
            "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.condition.AllOf_matches_Test#should_not_match_if_at_least_one_Condition_does_not_match",
            "org.assertj.core.api.SoftAssertionsTest#should_pass_when_using_extracting_with_iterator",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_fail_if_bytes_are_equal",
            "org.assertj.core.internal.doubles.Doubles_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfType_Test#should_fail_if_one_element_in_actual_does_not_belong_to_the_expected_type",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_mac_file_is_split_into_lines_using_charset",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_windows_file_is_split_into_lines_using_charset",
            "org.assertj.core.error.ShouldNotBeBetween_create_Test#should_create_error_message_with_period_upper_boundary_included",
            "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test#should_pass_if_expected_is_empty",
            "org.assertj.core.internal.paths.Paths_assertIsWritable_Test#should_succeed_if_actual_exist_and_is_writable",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_pass_if_actual_contains_all_given_entries",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOf_Test#should_pass_if_actual_is_instance_of_type",
            "org.assertj.core.api.integer_.IntegerAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_equals_to_start_of_given_period_and_start_is_included_in_given_period",
            "org.assertj.core.internal.paths.Paths_assertIsNormalized_Test#should_pass_if_actual_is_normalized",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtMost_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.short_.ShortAssert_isEqualTo_short_Test#should_have_internal_effects",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test#should_pass_if_actual_is_of_class_in_types",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.list.ListAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_String_in_hexadecimal",
            "org.assertj.core.description.EmptyTextDescription_emptyText_Test#should_return_singleton_instance",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_pass_if_actual_contains_exactly_given_values",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.api.boolean_.BooleanAssert_isNotEqualTo_boolean_Test#should_return_this",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_is_not_strictly_before_given_year",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_pass_if_integers_are_not_equal",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_even_if_duplicated",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_in_different_order",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsNull_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.error.ShouldContainsStringOnlyOnce_create_Test#should_create_error_message_when_string_to_search_appears_several_times",
            "org.assertj.core.util.Files_currentFolder_Test#should_return_current_folder",
            "org.assertj.core.api.long_.LongAssert_isBetween_Longs_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_joined_lists_when_extracting_children",
            "org.assertj.core.error.ShouldBeWritable_create_Test#should_create_error_message_for_File",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test#should_fail_when_checking_if_date_has_same_time_as_other_date",
            "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.error.ShouldBeGreater_create_Test#should_create_error_message",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_throw_npe_if_expected_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_fail_if_objects_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_fail_if_actual_is_not_uppercase_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Lists_newArrayList_Test#should_return_empty_mutable_List",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.float_.FloatAssert_isStrictlyBetween_Floats_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objects.Objects_assertIsExactlyInstanceOf_Test#should_fail_if_actual_is_not_exactly_instance_of_type",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.classes.Classes_assertIsInterface_Test#should_fail_if_actual_is_not_an_interface",
            "org.assertj.core.api.Assertions_assertThat_with_BooleanArray_Test#should_pass_actual",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.integers.Integers_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_equal_but_not_same",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.double_.DoubleAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.path.PathAssert_hasNoParentRaw_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_hasParent_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_pass_if_objects_are_equal",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_extract_tuples_from_fields_or_properties",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_fail_with_overridden_error_message_not_interpreted_with_string_format_feature_as_no_args_are_given",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_fail_if_big_decimals_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.longarray.LongArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.util.Files_linesOf_Test#should_throw_exception_if_file_not_found",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.api.date.DateAssert_isBetween_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_fail_if_expected_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_byte_Test#should_create_Assert",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_pass_if_actual_contains_given_entries_in_different_order",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_false_if_arrays_of_Objects_are_not_equal",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy_in_hex_representation",
            "org.assertj.core.api.abstract_.AbstractAssert_isSameAs_Test#should_return_this",
            "org.assertj.core.util.Lists_newArrayList_withIterator_Test#should_return_null_if_iterator_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_has_the_same_elements_as_set",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_extract_nested_field",
            "org.assertj.core.api.byte_.ByteAssert_isBetween_Bytes_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.StandardComparisonStrategy_iterableContains_Test#should_return_false_if_iterable_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_fail_if_both_Strings_are_not_XML_equals",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.longarray.LongArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessage_Test#should_fail_if_actual_has_not_expected_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.files.Files_assertCanWrite_Test#should_fail_if_can_not_write",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_pass_if_actual_contains_full_sequence_even_if_partial_sequence_is_found_before",
            "org.assertj.core.api.charsequence.CharSequenceAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtLeast_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.StandardComparisonStrategy_arrayContains_Test#should_return_true_if_array_contains_value",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy_in_hex_representation",
            "org.assertj.core.util.Strings_quoteString_Test#should_return_null_if_String_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.Assertions_assertThat_with_Class_Test#should_pass_actual",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_text_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_return_true_if_Objects_are_equal",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldNotBeBetween_create_Test#should_create_error_message_with_period_boundaries_included",
            "org.assertj.core.api.intarray.IntArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.floats.Floats_assertIsNotNaN_Test#should_succeed_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_fail_if_actual_if_dates_time_difference_is_exactly_one_second",
            "org.assertj.core.util.Dates_parse_date_Test#should_return_null_if_string_to_parse_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Maps_format_Test#should_format_Map_containing_itself",
            "org.assertj.core.error.ShouldContain_create_Test#should_create_error_message",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_prefix",
            "org.assertj.core.util.Lists_newArrayList_withVarArgs_Test#should_return_empty_List_if_array_is_empty",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test#should_return_this",
            "org.assertj.core.api.charsequence.CharSequenceAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_BigDecimal",
            "org.assertj.core.api.iterable.IterableAssert_containsNull_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.api.chararray.CharArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.api.integer_.IntegerAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_array",
            "org.assertj.core.internal.files.Files_assertDoesNotExist_Test#should_pass_if_actual_does_not_exist",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_equal_ignoring_case_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_FloatArray_Test#should_create_Assert",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_allow_assertions_on_extractor_assertions_extracted_from_given_array",
            "org.assertj.core.api.iterable.IterableAssert_have_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.paths.Paths_assertEndsWith_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_is_subset_of_values_according_to_custom_comparison_strategy",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_char_array",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_array_Test#should_have_internal_effects",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_pass_if_objects_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeastOne_Test#should_have_internal_effects",
            "org.assertj.core.api.bytearray.ByteArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeBetween_create_Test#should_create_error_message_with_period_boundaries_included",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_actual_has_same_size_as_other_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_fail_if_doubles_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKey_Test#should_fail_if_actual_does_not_contain_key",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageContaining_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isGreaterThanOrEqualTo_int_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_haveAtLeastOne_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_some_inherited_field_values_differ",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_pass_if_actual_contains_exactly_given_values",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_pass_if_actual_is_in_same_year_as_given_date",
            "org.assertj.core.api.short_.ShortAssert_isGreaterThanOrEqualTo_short_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test#should_success_if_key_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertContainsKey_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_integer_in_hexadecimal",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_throw_exception_when_canonical_form_representation_fail",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.error.ShouldBeExecutable_create_Test#should_create_error_message_for_Path",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_fail_since_actual_is_zero_in_hex_representation",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.boolean_.BooleanAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.util.Dates_minuteOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.condition.Join_constructor_with_array_Test#should_throw_error_if_array_contains_nulls",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_pass_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.condition.Not_toString_Test#should_implement_toString_showing_descriptions_of_inner_Conditions",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.api.character.CharacterAssert_isEqualTo_char_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.api.Assertions_assertThat_with_ShortArray_Test#should_pass_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_pass_if_longs_are_equal",
            "org.assertj.core.internal.files.Files_assertHasExtension_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_throw_error_if_offset_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_pass_if_actual_is_in_same_hour_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_not_be_equal_to_IsNotEqual_with_different_actual",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.api.date.DateAssert_isWithinSecond_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.api.file.FileAssert_usingCharset_null_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_have_Test#should_have_internal_effects",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_hasTheSameClassAs_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_pass_regardless_of_hour_minute_second_and_millisecond_fields_values",
            "org.assertj.core.internal.intarrays.IntArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.condition.AnyOf_matches_Test#should_not_match_if_none_of_the_Conditions_match",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBetween_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_more_than_once",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#failed_isIn_assertion_using_field_by_field_element_comparator",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isPositive_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContainNull_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_double",
            "org.assertj.core.api.byte_.ByteAssert_isLessThan_byte_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test#should_fail_when_actual_is_null",
            "org.assertj.core.internal.failures.Failures_failure_with_ErrorMessage_Test#should_use_ErrorMessage_when_overriding_error_message_is_not_specified",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsIgnoringCase_CharSequence_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isLessThanOrEqualTo_int_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_float_Test#should_create_Assert",
            "org.assertj.core.util.Objects_castIfBelongsToType_Test#should_return_null_if_object_does_not_belong_to_given_type",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Byte",
            "org.assertj.core.api.date.DateAssert_isWithinMillisecond_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.list.ListAssert_usingFieldByFieldElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_sequence_several_times_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNaN_Test#should_succeed_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_String_array",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_pass_if_actual_is_not_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCauseExactlyInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Arrays_format_Test#should_format_int_array",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.api.long_.LongAssert_isLessThanOrEqualTo_long_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_actual_contains_entry_key_with_different_value",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertIsRelative_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_with_offset_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_actual_does_not_contains_every_expected_entries",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_pass_if_big_decimals_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_values_has_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.api.Assertions_assertThat_with_Object_Test#should_pass_actual",
            "org.assertj.core.api.chararray.CharArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertIsFile_Test#should_fail_if_actual_is_not_file",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Array_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsNotNaN_Test#should_fail_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_canWrite_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_usingCharset_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_infinite_iterable_starts_with_given_sequence",
            "org.assertj.core.error.ShouldBeEqualWithTimePrecision_create_Test#should_create_error_message_ignoring_hours",
            "org.assertj.core.error.ShouldBeInstance_create_Test#should_create_error_message",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualToWithStringParameter_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertNotEqual_Test#should_pass_if_objects_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Maps_newHashMap_Test#should_return_new_HashMap",
            "org.assertj.core.internal.dates.Dates_assertHasTime_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_isLessThanOrEqualTo_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_null_more_than_once_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_with_null_elements",
            "org.assertj.core.error.ShouldContainKeys_create_Test#should_create_error_message_with_multiple_keys",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_pass_if_shorts_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThanOrEqualTo_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.api.iterable.IterableAssert_areAtLeastOne_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.inputstreams.Diff_diff_InputStream_Test#should_return_diffs_if_content_of_actual_is_shorter_than_content_of_expected",
            "org.assertj.core.internal.classes.Classes_assertHasDeclaredFields_Test#should_fail_if_fields_are_missing",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.map.MapAssert_doesNotContainEntry_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#sohuld_allow_extracting_multiple_values_using_extractor",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Iterables_isNullOrEmpty_Test#should_return_false_if_Iterable_has_elements",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_return_true_if_all_but_ignored_fields_are_equal",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_throw_exception_if_Objects_have_not_the_same_properties",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.error.ShouldContainSequence_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#should_format_xml_string_prettily",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test#should_pass_if_actual_contains_given_key",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_not_be_equal_to_MapEntry_with_different_value",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_long_in_hexadecimal",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_longArray",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveNot_Test#should_fail_if_condition_is_met",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_fail_if_root_cause_is_not_instance_of_expected_type",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_throw_NullPointerException_if_given_type_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_pass_if_floats_are_equal_within_offset",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_return_false_if_given_fields_are_not_equal",
            "org.assertj.core.api.iterable.IterableAssert_areNot_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_fail_if_actual_contains_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertHave_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_doNotHave_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_fail_if_integers_are_not_equal",
            "org.assertj.core.util.Dates_parse_date_Test#should_fail_if_string_does_not_respect_date_format",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.WritableAssertionInfo_descriptionText_Test#should_return_text_of_description",
            "org.assertj.core.api.abstract_.AbstractAssert_failWithMessage_Test#should_keep_description_set_by_user",
            "org.assertj.core.api.longarray.LongArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Iterable_Test#should_create_Assert",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeRegularFile_create_Test#should_create_error_message",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.util.Strings_join_Test#should_join_using_delimeter_and_escape",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.api.iterable.IterableAssert_doNotHave_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsOtherDate_Test#should_fail_when_actual_is_null",
            "org.assertj.core.api.integer_.IntegerAssert_isNotEqualTo_int_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_but_size_differ",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_fail_if_actual_is_not_in_same_second_as_given_date",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeSameGenericBetweenIterableAndCondition_create_Test#should_create_error_message",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_pass_if_path_has_expected_text_content",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOf_Test#should_fail_if_actual_is_not_instance_of_type",
            "org.assertj.core.error.ShouldBeGreater_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_fail_if_actual_contains_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.api.byte_.ByteAssert_isGreaterThan_byte_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.longarray.LongArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertHasSameClassAs_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_actual_cannot_be_canonicalized",
            "org.assertj.core.api.date.DateAssert_isBetween_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_is_subset_of_set",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_not_in_the_past_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_only_null_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.map.MapAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.floats.Floats_assertIsNaN_Test#should_fail_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.introspection.PropertySupport_publicGetterExistsFor_Test#should_return_false_if_public_getter_does_not_exist",
            "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.classes.ClassAssert_hasDeclaredFields_Test#should_return_this",
            "org.assertj.core.api.short_.ShortAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_fail_if_actual_is_not_in_same_hour_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_fail_if_actual_is_not_subset_of_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.groups.Properties_extractProperty_Test#should_create_a_new_Properties",
            "org.assertj.core.util.Collections_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_pass_if_actual_is_equals_to_given_date",
            "org.assertj.core.api.date.DateAssert_isBetween_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_pass_if_actual_satisfies_condition_at_index",
            "org.assertj.core.api.chararray.CharArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_second_fields_differ",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.api.object.ObjectAssert_isLenientEqualsToByIgnoringNullFields_Test#should_return_this",
            "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#should_format_xml_string_with_space_and_newline_prettily",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtLeast_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.api.date.DateAssert_isEqualTo_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.floats.Floats_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.internal.files.Files_assertIsAbsolute_Test#should_pass_if_actual_is_absolute_path",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.data.Offset_offset_with_Double_Test#should_create_Offset",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.api.integer_.IntegerAssert_isStrictlyBetween_Integers_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.api.chararray.CharArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_size_is_not_equal_to_other_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoNotHave_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableRemove_Test#should_not_remove_value_from_collections_since_it_does_not_match_any_collections_elements_according_to_given_comparator",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.StandardComparisonStrategy_arrayContains_Test#should_fail_if_first_parameter_is_not_an_array",
            "org.assertj.core.internal.integers.Integers_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.error.ShouldContainOnlyKeys_create_Test#should_create_error_message",
            "org.assertj.core.api.double_.DoubleAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.chararray.CharArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Diff_diff_File_String_Test#should_return_diffs_if_content_of_actual_is_longer_than_content_of_expected",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsNaN_Test#should_succeed_since_actual_is_equal_to_NaN",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_false_if_arrays_of_primitives_are_not_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.short_.ShortAssert_isNotEqualTo_short_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeSubsetOf_create_Test#should_create_error_message",
            "org.assertj.core.util.Strings_join_Test#should_join_using_delimeter",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_fail_if_actual_is_not_today",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_hasSameContentAs_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.api.double_.DoubleAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_throw_error_if_array_of_types_has_null_elements",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.map.MapAssert_containsKeys_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_negative_long_in_binary",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_values_of_simple_field",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Strings_append_Test#should_not_append_String_if_already_present",
            "org.assertj.core.api.character.CharacterAssert_isLowerCase_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_throw_error_if_start_date_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates",
            "org.assertj.core.internal.files.Files_assertIsDirectory_Test#should_fail_if_actual_is_not_directory",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.api.file.FileAssert_hasName_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_pass_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_values_has_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_pass_if_big_decimals_difference_is_less_than_given_offset",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.error.ShouldBeSortedAccordingToComparator_create_Test#should_create_error_message_with_private_static_comparator",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_pass_if_actual_and_entries_are_empty",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_values_of_simple_property_as_objects",
            "org.assertj.core.api.integer_.IntegerAssert_isCloseTo_integer_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.throwable.ThrowableAssert_hasNoCause_Test#should_return_this",
            "org.assertj.core.util.Dates_format_with_date_time_format_Test#should_return_null_if_calendar_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_pass_if_root_cause_is_instance_of_expected_type",
            "org.assertj.core.api.longarray.LongArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_quote_empty_String",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_vararg_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreNot_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotExactlyInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.short_.ShortAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_pass_if_actual_is_null",
            "org.assertj.core.internal.paths.Paths_assertNotExists_Test#should_fail_if_actual_exists",
            "org.assertj.core.api.long_.LongAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.error.ElementsShouldBeAtMost_create_Test#should_create_error_message",
            "org.assertj.core.error.ShouldBeEqualIgnoringGivenFields_create_Test#should_create_error_message_with_single_field_difference_without_ignored_fields",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.short_.ShortAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_fail_if_actual_is_not_within_given_millisecond",
            "org.assertj.core.internal.dates.Dates_assertHasTime_Test#should_pass_if_actual_has_same_time",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.util.Collections_format_Test#should_format_Collection",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_not_be_equal_to_TextDescription_with_different_value",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.error.ElementsShouldNotHave_create_Test#should_create_error_message",
            "org.assertj.core.api.float_.FloatAssert_isNaN_Test#should_return_this",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_create_error_message",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_pass_if_actual_is_strictly_after_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_handle_array_as_iterable",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_pass_if_actual_satisfies_condition_at_index",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasNoParent_Test#should_fail_if_actual_has_parent",
            "org.assertj.core.api.longarray.LongArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessage_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_throw_error_if_given_iterable_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_fail_since_actual_is_not_positive_in_hex_representation",
            "org.assertj.core.api.map.MapAssert_doesNotContainValue_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyDigits_Test#should_fail_if_actual_contains_any_non_digit_character",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageStartingWith_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.iterable.IterableAssert_endsWith_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveName_create_Test#should_create_error_message",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtLeast_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.error.ShouldBeWritable_create_Test#should_create_error_message_for_Path",
            "org.assertj.core.internal.longs.Longs_assertIsZero_Test#should_succeed_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.filter.Filter_create_Test#should_create_filter_from_iterable",
            "org.assertj.core.api.short_.ShortAssert_isCloseTo_short_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_fail_if_actual_is_not_in_same_minute_window_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future",
            "org.assertj.core.error.ShouldNotMatchPattern_create_Test#should_create_error_message",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.api.Assertions_assertThat_with_ObjectArray_Test#should_pass_actual",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test#should_throw_exception_when_date_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_iterableRemove_Test#should_pass",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_pass_if_actual_is_in_same_hour_window_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_throw_error_if_iterable_to_look_for_is_null",
            "org.assertj.core.api.path.PathAssert_isCanonical_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertIsFile_Test#should_pass_if_actual_is_file",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_method_name_is_empty",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.api.fail.Fail_fail_because_exception_should_have_thrown_Test#should_include_message_built_with_given_exception_name",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.intarray.IntArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isGreaterThanOrEqualTo_long_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactlyElementsOf_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_fail_if_actual_does_not_contain_sequence_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyDigits_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.api.longarray.LongArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_Float_Test#should_pass_actual",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageContainingWith_Test#should_fail_if_actual_has_message_not_containing_with_expected_description",
            "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_equals_to_end_of_given_period_and_end_is_included_in_given_period",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_actual_does_not_contain_whole_subsequence",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_text_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isBeforeYear_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Array_Test#should_return_this",
            "org.assertj.core.api.shortarray.ShortArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.util.Objects_hashCodeFor_Test#should_return_hashCode_of_intarray",
            "org.assertj.core.api.DescriptionValidator_notNull_Test#should_throw_error_if_text_description_is_null",
            "org.assertj.core.api.map.MapAssert_containsKeys_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_fail_if_file_does_not_have_expected_text_content",
            "org.assertj.core.util.Arrays_hasOnlyNullElements_Test#should_return_false_if_array_is_empty",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_Test#should_create_ComparisonFailure_if_JUnit4_is_present_and_trim_spaces_in_formatted_description[1]",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.character.CharacterAssert_isUpperCase_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_when_selected_field_does_not_exist",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_pass_if_actual_is_uppercase_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.intarrays.IntArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.object.ObjectAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.filter.Filter_with_property_not_equals_to_given_value_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.condition.AnyOf_anyOf_with_array_Test#should_create_new_AnyOf_with_passed_Conditions",
            "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.api.filter.Filter_create_Test#should_create_filter_from_array",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_char_Test#should_pass_actual",
            "org.assertj.core.api.filter.Filter_with_property_not_equals_to_given_value_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.internal.files.Files_assertIsRelative_Test#should_fail_if_actual_is_not_relative_path",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_pass_if_shorts_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.util.Sets_newHashSet_Iterable_Test#should_return_Set_containing_iterable_elements",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_does_not_contain_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.date.DateAssert_isToday_Test#should_verify_that_actual_is_today",
            "org.assertj.core.api.integer_.IntegerAssert_isLessThan_int_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_format_bytes_as_hex",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.file.FileAssert_hasNoParent_Test#should_have_internal_effects",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_String_Test#should_throw_illegalargumentexception_if_string_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_fail_if_actual_contains_sequence",
            "org.assertj.core.internal.doubles.Doubles_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtMost_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.bytearray.ByteArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_cause_has_no_message_and_the_expected_cause_has_one",
            "org.assertj.core.internal.iterables.Iterables_assertAre_Test#should_fail_if_condition_is_not_met",
            "org.assertj.core.internal.maps.Maps_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_int_array",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_equals_to_end_of_given_period_and_end_is_not_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_fail_if_actual_does_not_satisfy_condition_at_index",
            "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_actual_has_no_cause_and_expected_cause_is_not_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_String_Test#should_return_string_if_it_is_not_null_nor_empty",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_pass_if_actual_does_not_match_regular_expression",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.api.Assertions_assertThat_with_InputStream_Test#should_pass_actual",
            "org.assertj.core.api.intarray.IntArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_doesNotExist_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.presentation.NumberGrouping_Test#should_group_words_in_hex_value",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_fail_if_actual_is_not_in_same_second_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.error.ShouldBeExecutable_create_Test#should_create_error_message_for_File",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.api.file.FileAssert_usingCharset_default_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_fail_if_actual_does_not_contain_value",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_throw_error_if_property_not_found",
            "org.assertj.core.api.longarray.LongArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldNotContainKeys_create_Test#should_create_error_message",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.paths.Paths_assertIsRelative_Test#should_pass_if_actual_is_relative",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_given_entries_array_is_empty",
            "org.assertj.core.error.ShouldHaveAtLeastOneElementOfType_create_Test#should_create_error_message_for_iterable",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_fail_if_actual_does_not_have_the_expected_parent",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_String_Test#should_return_object_if_it_is_not_null_nor_empty",
            "org.assertj.core.api.file.FileAssert_hasName_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldHaveSize_create_Test#should_create_error_message",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_Test#should_throw_null_pointer_exception_when_extracting_from_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isNot_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldHaveToString_create_Test#should_create_error_message",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_long_in_binary",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.api.short_.ShortAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.data.Offset_offset_with_Integer_Test#should_throw_error_if_value_is_null",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_are_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Boolean_Test#should_create_Assert",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_pass_if_actual_is_strictly_before_given_date",
            "org.assertj.core.api.chararray.CharArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_exists_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test#should_succeed_since_actual_negative_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.objects.Objects_assertHasToString_Test#should_pass_if_actual_toString_is_the_expected_String",
            "org.assertj.core.internal.floats.Floats_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.api.object.ObjectAssert_isLenientEqualsToByAcceptingFields_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.api.path.PathAssert_usingCharset_String_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_pass_if_actual_is_strictly_after_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_isDirectory_Test#should_have_internal_effects",
            "org.assertj.core.internal.conditions.Conditions_assertIsNot_Test#should_fail_if_Condition_is_met",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_fail_if_actual_is_not_in_same_minute_window_as_given_date",
            "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseInstanceOf_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Class_Test#should_create_Assert",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_haveAtLeast_Test#should_have_internal_effects",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_pass_if_actual_is_lowercase_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_fail_if_actual_has_elements",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.intarray.IntArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertExists_Test#should_pass_if_actual_exists",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_only_null_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.api.intarray.IntArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtMost_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.api.map.MapAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_GenericArray_Test#should_throw_IllegalArgumentException_if_array_is_empty",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHave_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_does_not_contain_whole_subsequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseExactlyInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessage_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_strictly_between_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_fail_if_shorts_are_not_equal",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_signed_short_in_binary",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_throw_error_if_given_iterable_is_empty",
            "org.assertj.core.api.iterable.IterableAssert_containsOnlyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_true_if_Objects_are_equal",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_pass_if_actual_is_strictly_before_given_year",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_pass_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAre_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_inUnicode_Test#should_assert_Character_in_unicode",
            "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test#should_build_ThrowableAssert_with_runtime_exception_thrown",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_true_if_arrays_of_primitives_are_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_and_set_are_both_empty",
            "org.assertj.core.internal.paths.Paths_assertExistsNoFollowLinks_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_has_some_not_mutually_comparable_elements",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Boolean",
            "org.assertj.core.util.Arrays_format_Test#should_format_double_array",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_are_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_pass_if_longs_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Flushables_flush_Test#should_ignore_thrown_errors",
            "org.assertj.core.error.ShouldBeNormalized_create_Test#should_create_error_message",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessage_Test#should_pass_if_actual_has_expected_message",
            "org.assertj.core.api.chararray.CharArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_pass_if_floats_are_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_subsequence_is_bigger_than_actual",
            "org.assertj.core.api.path.PathAssert_existsNoFollowLinks_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_first_float_is_null_but_not_the_second_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_areNot_Test#should_return_this",
            "org.assertj.core.api.iterable.Iterable_generics_with_varargs_Test#testConcreteType",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_equals_to_end_of_given_period_and_end_is_included_in_given_period",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.shorts.Shorts_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.api.abstract_.AbstractAssert_isSameAs_Test#should_be_loosely_typed1",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_equal_hashCode_Test#should_fail_because_not_supported_operation",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_throw_error_if_set_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.api.short_.ShortAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_pass_if_actual_is_in_same_hour_as_given_date",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_and_subsequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtMost_Test#should_fail_if_condition_is_not_met_much",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyDigits_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_has_same_as_other_array",
            "org.assertj.core.api.iterable.Iterable_generics_with_varargs_Test#testListAssertWithGenerics",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContainAnyElementsOf_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_isNormalized_Test#should_return_this",
            "org.assertj.core.api.path.PathAssert_usingCharset_String_invalid_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCause_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertHasNoParentRaw_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test#should_return_this",
            "org.assertj.core.api.object.ObjectAssert_isEqualsToComparingFields_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.charsequence.CharSequenceAssert_contains_CharSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_quote_String",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_fail_if_actual_contains_values_but_not_in_given_order",
            "org.assertj.core.util.ArrayWrapperList_wrap_Test#should_create_ArrayWrapperList_if_array_is_not_null",
            "org.assertj.core.util.Arrays_format_Test#should_format_Object_array",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Charsequence",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_fail_if_doubles_are_not_equal_within_offset",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.util.Dates_formatTimeDifference_Test#should_throws_IllegalArgumentException_if_second_date_parameter_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainValue_Test#should_pass_if_actual_contains_given_value",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_pass_if_big_decimals_are_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test#should_fail_if_provided_parent_is_null",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_throw_error_if_offset_is_null",
            "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThan_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.error.ShouldHaveParent_create_Test#should_create_error_message_when_file_does_not_have_expected_parent",
            "org.assertj.core.internal.OnFieldsComparator_toString_Test#should_return_description_for_multiple_given_fields",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.Assertions_assertThat_with_ByteArray_Test#should_create_Assert",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_by_comparison",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeastOne_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.condition.AnyOf_toString_Test#should_implement_toString_showing_descriptions_of_inner_Conditions",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.api.SoftAssertionsTest#should_collect_all_errors_when_using_flat_extracting",
            "org.assertj.core.internal.classes.Classes_assertHasFields_Test#should_fail_if_fields_are_missing",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isWithinMonth_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_fail_with_overridden_error_message_interpreted_with_string_format_feature",
            "org.assertj.core.api.intarray.IntArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertHasExtension_Test#should_throw_error_if_actual_is_not_a_file",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_array_Test#should_return_this",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isBetween_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_float_Test#should_pass_actual",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_equals_to_start_of_given_period_and_start_is_not_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_Test#should_return_string_if_it_is_not_null_nor_empty",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_has_one_element_only_not_comparable_according_to_given_comparator",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_isNormalized_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_hour_fields_differ",
            "org.assertj.core.error.ShouldContainSubsequence_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_size_is_not_equal_to_other_size",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_today",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_is_subset_of_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.SoftAssertionsTest#should_pass_when_using_extracting_with_array",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.internal.StandardComparisonStrategy_stringContains_Test#should_pass",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_description_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.util.Dates_parse_date_time_Test#should_parse_string_with_date_time_format",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isWithinDayOfWeek_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.groups.Properties_from_with_array_Test#should_return_values_of_property",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_text_description_Test#should_return_this",
            "org.assertj.core.data.Offset_offset_with_Double_Test#should_throw_error_if_value_is_negative",
            "org.assertj.core.util.Arrays_format_Test#should_return_null_if_array_is_null",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.api.bytearray.ByteArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test#should_fail_if_actual_is_not_of_class_in_types",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.error.ShouldNotContainValue_create_Test#should_create_error_message",
            "org.assertj.core.api.Assertions_assertThat_with_CharArray_Test#should_pass_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_Collection_of_arrays",
            "org.assertj.core.api.iterable.IterableAssert_areAtMost_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldHaveSameClass_create_Test#should_create_error_message",
            "org.assertj.core.api.shortarray.ShortArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_doubles_in_hexadecimal",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_with_null_elements",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.error.ShouldContain_create_Test#should_create_error_message_differentiating_long_from_integer",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.api.iterable.IterableAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.api.boolean_.BooleanAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.object.ObjectAssert_isLenientEqualsToByIgnoringNullFields_Test#should_have_internal_effects",
            "org.assertj.core.api.double_.DoubleAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsZero_Test#should_succeed_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_inUnicode_Test#should_assert_String_in_unicode",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeastOne_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.error.ShouldContainString_create_Test#should_create_error_message_with_several_string_values",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_empty",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_int_array",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageStartingWith_Test#should_fail_if_actual_has_message_not_starting_with_expected_description",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isAfter_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtMost_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_are_Test#should_return_this",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_boolean_array",
            "org.assertj.core.api.map.MapAssert_containsValues_Test#should_return_this",
            "org.assertj.core.data.Index_atIndex_Test#should_create_new_Index",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_pass_if_characters_are_not_equal",
            "org.assertj.core.util.Collections_duplicatesFrom_Test#should_return_existing_duplicates",
            "org.assertj.core.api.shortarray.ShortArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_return_true_if_both_Objects_are_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.api.file.FileAssert_hasParentWithNullStringParameter_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainsStringOnlyOnce_create_Test#should_create_error_message_when_string_to_search_appears_several_times_with_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_given_entries_array_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.error.ShouldHaveExtension_create_Test#should_create_error_message",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.intarray.IntArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_pass_if_actual_is_strictly_before_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_Class_with_its_name",
            "org.assertj.core.extractor.ToStringExtractorTest#should_extract_toString",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doubles.Doubles_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_pass_if_doubles_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isStrictlyBetween_Test#should_return_this",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_extract_multiple_values_from_maps_by_keys",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertIsNormalized_Test#should_fail_if_actual_is_not_normalized",
            "org.assertj.core.internal.doubles.Doubles_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.abstract_.AbstractAssert_has_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_CharSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.api.path.PathAssert_hasSameContentAs_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_byte_array",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.files.Files_assertCanRead_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_pass_if_big_decimals_difference_is_equal_to_given_offset",
            "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.api.byte_.ByteAssert_isStrictlyBetween_Bytes_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.map.MapAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_fail_if_actual_is_exactly_one_minute_away_from_given_date",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_fail_if_actual_contains_values_but_not_in_given_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAre_Test#should_fail_if_Condition_is_not_met",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if_big_decimals_are_not_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.byte_.ByteAssert_isCloseTo_byte_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_File",
            "org.assertj.core.api.list.ListAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldContainValue_create_Test#should_create_error_message",
            "org.assertj.core.util.Objects_namesOf_Test#should_return_empty_array_if_type_array_is_null",
            "org.assertj.core.internal.classes.Classes_assertIsAnnotation_Test#should_fail_if_actual_is_not_an_annotation",
            "org.assertj.core.internal.doubles.Doubles_assertIsNaN_Test#should_fail_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.api.list.ListAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.WritableAssertionInfo_toString_Test#should_implement_toString",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.Strings_quoteObject_Test#should_not_quote_Object_that_is_not_String",
            "org.assertj.core.api.file.FileAssert_hasParentWithNullStringParameter_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.util.Collections_nonNullElementsIn_Test#should_return_empty_List_if_given_Collection_has_only_null_elements",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringWhitespace_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_contains_subsequence_with_elements_between",
            "org.assertj.core.internal.paths.Paths_assertIsCanonical_Test#should_throw_PathsException_on_io_error",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test#should_pass_if_actual_object_array_has_same_size_as_other_object_array",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotSameAs_Test#should_have_internal_effects",
            "org.assertj.core.internal.conditions.Conditions_assertIsNotNull_Test#should_pass_if_condition_is_not_null",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.StandardComparisonStrategy_iterableRemove_Test#should_do_nothing_if_iterable_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.util.Sets_newLinkedHashSet_GenericArray_Test#should_return_null_if_array_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtMost_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_throw_error_if_sequence_values_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test#should_pass_if_actual_does_not_contain_given_keys",
            "org.assertj.core.api.inputstream.InputStreamAssert_hasSameContentAs_Test#should_have_internal_effects",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isCloseTo_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.error.ShouldNotBeBetween_create_Test#should_create_error_message_with_period_boundaries_excluded",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertStartsWithRaw_Test#should_fail_if_actual_does_not_start_with_other",
            "org.assertj.core.groups.Properties_extractProperty_Test#should_throw_error_if_property_name_is_empty",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringContains_Test#should_pass",
            "org.assertj.core.api.filter.Filter_on_differents_properties_Test#should_filter_iterable_elements_on_different_properties",
            "org.assertj.core.error.ShouldBeSortedAccordingToComparator_create_Test#should_create_error_message_with_comparator",
            "org.assertj.core.api.BDDAssertions_then_Test#then_float",
            "org.assertj.core.util.Arrays_nonNullElementsIn_Test#should_return_a_Collection_without_null_elements",
            "org.assertj.core.api.short_.ShortAssert_isBetween_Shorts_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_pass_if_actual_and_given_entries_are_empty",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_char_Test#should_create_Assert",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.api.SoftAssertionsTest#should_collect_all_errors_when_using_extracting",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThan_Test#should_pass",
            "org.assertj.core.api.unevencomparable.AbstractUnevenComparableAssert_isNotEqualToByComparingTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.condition.AllOf_allOf_with_array_Test#should_create_new_AllOf_with_passed_Conditions",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_pass_regardless_of_millisecond_fields_values",
            "org.assertj.core.api.intarray.IntArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_pass_if_integers_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_pass_if_actual_does_not_match_Pattern_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_throw_error_if_offset_is_null",
            "org.assertj.core.api.long_.LongAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.intarray.IntArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.error.ShouldHaveAnnotations_create_Test#should_create_error_message",
            "org.assertj.core.api.DescriptionValidator_notNull_Test#should_return_description_with_given_text",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_isRegularFile_Test#should_return_this",
            "org.assertj.core.internal.StandardComparisonStrategy_isLessThanOrEqualTo_Test#should_pass",
            "org.assertj.core.util.Files_newFile_Test#should_throw_error_if_file_path_belongs_to_an_existing_file",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_fail_if_objects_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertIsWritable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_year_is_equals_to_given_year",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.error.ShouldBeUpperCase_create_Test#should_create_error_message",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_boolean_Test#should_create_Assert",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_pass_if_actual_is_in_same_day_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.description.TextDescription_value_Test#should_return_formatted_value",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_between_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.api.filter.Filter_create_Test#should_fail_if_constructor_array_parameter_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.objects.Objects_assertIsExactlyInstanceOf_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_pass_if_actual_primitive_array_has_same_size_as_other_primitive_array",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.maps.Maps_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_pass_if_actual_is_not_in_Iterable",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.api.short_.ShortAssert_isStrictlyBetween_Shorts_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_hasExtension_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_when_some_selected_field_values_differ",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsAll_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.double_.DoubleAssert_isNotEqualTo_double_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_throw_exception_when_given_name_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.api.integer_.IntegerAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_equal_but_not_same_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThan_Test#should_pass",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_given_entries_array_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_containsOnlyKeys_Test#should_have_internal_effects",
            "org.assertj.core.api.abstract_.AbstractAssert_doesNotHave_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_fail_if_doubles_are_equal",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.classes.Classes_assertHasFields_Test#should_pass_if_no_fields_are_expected",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#failed_isEqualTo_assertion_using_field_by_field_element_comparator",
            "org.assertj.core.api.longarray.LongArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.path.PathAssert_hasContent_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_hasFileName_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_fail_if_doubles_are_not_equal",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.path.PathAssert_isSymbolicLink_Test#should_return_this",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.float_.FloatAssert_isNaN_Test#should_have_internal_effects",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_contains_first_elements_of_subsequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.util.Strings_join_Test#should_throw_error_if_delimeter_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_hasSameContentAs_Test#should_have_internal_effects",
            "org.assertj.core.internal.OnFieldsComparator_toString_Test#should_return_description_for_a_single_given_field",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_array_of_arrays",
            "org.assertj.core.internal.iterables.Iterables_assertAreExactly_Test#should_pass_if_satisfies_exactly_times_condition",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_isAbsolute_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_objects_to_compare_are_of_different_types",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Double",
            "org.assertj.core.api.path.PathAssert_existsNoFollowLinks_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_some_field_values_differ",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_null_if_object_is_null",
            "org.assertj.core.api.iterable.IterableAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_floats_are_not_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeInSameMinuteWindow_create_Test#should_create_error_message",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_fail_if_actual_is_not_in_Iterable",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_containsNull_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_pass_if_actual_contains_all_given_strings",
            "org.assertj.core.internal.paths.Paths_assertIsDirectory_Test#should_fail_if_target_exists_but_is_not_a_directory",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.error.BasicErrorMessageFactory_unquotedString_Test#should_implement_toString",
            "org.assertj.core.api.file.FileAssert_isAbsolute_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_fail_if_actual_is_not_subset_of_values",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[4]",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_pass_if_doubles_are_not_equal",
            "org.assertj.core.error.ShouldContainSubsequence_create_Test#should_create_error_message",
            "org.assertj.core.api.iterable.IterableAssert_hasSameElementsAs_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_by_comparison",
            "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test#should_fail_if_actual_parent_is_not_expected_parent",
            "org.assertj.core.util.Strings_join_Test#should_return_empty_String_if_array_to_join_is_null",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_throw_exception_when_canonical_form_representation_fail_for_expected_parent",
            "org.assertj.core.internal.classes.Classes_assertIsAnnotation_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_int",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_text_description_Test#should_return_this",
            "org.assertj.core.api.shortarray.ShortArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.doubles.Doubles_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_subsequence_is_bigger_than_actual",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Iterables_toArray_Test#should_return_array_of_given_iterable_elements",
            "org.assertj.core.api.classes.ClassAssert_isAssignableFrom_Test#should_return_this",
            "org.assertj.core.util.Dates_format_with_date_time_with_ms_format_Test#should_format_date_with_date_time_with_ms_format",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeGreaterOrEqual_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.chararray.CharArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.api.chararray.CharArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.error.ElementsShouldHaveAtMost_create_Test#should_create_error_message",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_using_default_date_string_representation",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_pass_if_actual_is_uppercase",
            "org.assertj.core.api.BDDSoftAssertionsTest#all_assertions_should_pass",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.short_.ShortAssert_isLessThan_short_Test#should_return_this",
            "org.assertj.core.internal.files.Files_assertCanRead_Test#should_pass_if_actual_can_read",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.byte_.ByteAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_pass_with_error_message_overridden",
            "org.assertj.core.api.iterable.IterableAssert_startsWith_Test#should_return_this",
            "org.assertj.core.util.ArrayWrapperList_get_Test#should_return_value_at_index",
            "org.assertj.core.api.character.CharacterAssert_isNotEqualTo_char_Test#should_return_this",
            "org.assertj.core.util.Strings_isEmpty_Test#should_return_true_if_String_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKey_Test#should_success_if_key_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_null_more_than_once",
            "org.assertj.core.internal.iterables.Iterables_assertAreNot_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_pass_if_lines_count_of_actual_is_equal_to_expected_lines_count",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_fail_if_floats_are_not_equal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Throwables_getRootCause_Test#should_return_root_cause_when_throwable_has_cause_which_has_cause",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.util.Files_delete_Test#should_delete_folder",
            "org.assertj.core.api.float_.FloatAssert_isGreaterThanOrEqualTo_float_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_fail_if_actual_is_not_a_readable_file",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_pass_if_actual_object_array_has_same_size_as_other_primitive_array",
            "org.assertj.core.internal.intarrays.IntArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.charsequence.CharSequenceAssert_contains_several_String_Test#should_return_this",
            "org.assertj.core.internal.StandardComparisonStrategy_arrayContains_Test#should_return_false_if_array_is_empty",
            "org.assertj.core.api.integer_.IntegerAssert_isNotPostitive_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.date.DateAssert_isBefore_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_pass_if_actual_is_in_the_future",
            "org.assertj.core.internal.files.Files_assertHasName_Test#should_pass_if_actual_has_expected_extension",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_given_keys_array_is_empty",
            "org.assertj.core.internal.booleans.Booleans_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.charsequence.CharSequenceAssert_matches_String_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_pass_if_actual_is_in_same_day_as_given_date",
            "org.assertj.core.api.double_.DoubleAssert_isLessThanOrEqualTo_double_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertHasNoParent_Test#should_fail_if_actual_has_parent",
            "org.assertj.core.api.float_.FloatAssert_isCloseTo_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBefore_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainNull_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_hasSameElementsAs_Test#should_have_internal_effects",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_List_Test#should_pass_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_Byte_Test#should_create_Assert",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageEnding_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_CharSequence_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_assertions_on_null_property_values_extracted_from_given_iterable",
            "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertAreNot_Test#should_pass_if_each_element_not_satisfies_condition",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_return_are_not_equal_if_first_Object_is_null_and_second_is_not",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_has_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_throw_error_when_no_property_nor_public_field_match_one_of_given_names",
            "org.assertj.core.api.list.ListAssert_has_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_have_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThanOrEqualTo_Test#should_pass",
            "org.assertj.core.api.iterable.IterableAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isCloseTo_byte_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_Iterable_Test#should_return_this",
            "org.assertj.core.util.Files_newFolder_Test#should_create_new_folder",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_short_array",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.api.long_.LongAssert_isCloseTo_long_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertSame_Test#should_pass_if_objects_are_same",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_throw_error_if_subsequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.maps.Maps_assertContainsKey_Test#should_pass_if_actual_contains_given_key",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.fail.Fail_fail_withMessageAndCause_Test#shouldThrowErrorWithGivenMessageAndCause",
            "org.assertj.core.internal.maps.Maps_assertContainsValue_Test#should_fail_if_actual_does_not_contain_value",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_values_of_nested_field",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_joined_lists_when_extracting_children",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_contains_one_element_of_given_iterable",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_more_than_once",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.api.classes.ClassAssert_isAssignableFrom_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOf_Test#should_fail_if_actual_is_instance_of_type",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#toString_with_anonymous_comparator",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_actual_does_not_contains_every_expected_entries_and_contains_unexpected_one",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_with_offset_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.maps.Maps_assertContainsKey_Test#should_fail_if_actual_does_not_contain_key",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Iterables_toArray_Test#should_return_empty_array_when_given_iterable_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_pass_if_doubles_are_equal_within_offset",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.util.Strings_quoteString_Test#should_quote_String",
            "org.assertj.core.internal.paths.Paths_assertIsReadable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.long_.LongAssert_isStrictlyBetween_Longs_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.error.ShouldNotBeBetween_create_Test#should_create_error_message_with_period_lower_boundary_included",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThanOrEqualTo_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.files.Files_assertHasNoParent_Test#should_pass_if_actual_has_no_parent",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_pass_if_doubles_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.long_.LongAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.api.classes.ClassAssert_isInterface_Test#should_return_this",
            "org.assertj.core.util.Objects_castIfBelongsToType_Test#should_return_null_if_object_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isSameAs_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainsStringOnlyOnce_create_Test#should_create_error_message_when_string_to_search_does_not_appear",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isNot_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_fail_if_big_decimals_are_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_pass_if_floats_are_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.api.chararray.CharArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveParent_create_Test#should_create_error_message_when_path_has_no_parent",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.util.Iterables_sizeOf_Test#should_throws_exception_if_iterable_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageEnding_Test#should_fail_if_actual_has_message_not_ending_with_expected_description",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_pass_if_objects_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_pass_if_cause_has_expected_type_and_message",
            "org.assertj.core.internal.files.Files_assertIsDirectory_Test#should_pass_if_actual_is_directory",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_return_true_if_both_objects_are_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_actual_parent_is_not_expected_parent",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_but_size_differ",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_fail_if_actual_does_not_contain_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorOnFields_Test#should_have_internal_effects",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_equals_to_start_of_given_period_and_start_is_not_included_in_given_period",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_fail_if__expected_value_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.conditions.Conditions_assertIsNot_Test#should_pass_if_Condition_is_not_met",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.api.comparable.GenericComparableAssert_isLessThan_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtMost_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorIgnoringFields_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.api.double_.DoubleAssert_isNotNaN_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_yearOf_Test#should_return_year_of_date",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageStartingWith_Test#should_have_internal_effects",
            "org.assertj.core.api.byte_.ByteAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.util.Lists_emptyList_Test#should_return_empty_List",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_some_field_value_is_null_on_one_object_only",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_secondOf_Test#should_return_second_of_date",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_pass_if_actual_contains_sequence_in_different_case",
            "org.assertj.core.api.list.ListAssert_usingElementComparatorOnFields_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Object",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_int_Test#should_pass_actual",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Files_fileNamesIn_Test#should_return_names_of_files_in_given_directory_and_its_subdirectories",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_fail_if_path_does_not_have_expected_text_content",
            "org.assertj.core.util.ArrayWrapperList_size_Test#should_return_size_of_array[1]",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_throw_error_if_start_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.float_.FloatAssert_isNotNaN_Test#should_return_this",
            "org.assertj.core.error.ShouldBeInSameSecondWindow_create_Test#should_create_error_message",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_fail_if_actual_is_null_and_expected_is_not",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_contains_subsequence_without_elements_between",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_method_does_not_return_value",
            "org.assertj.core.util.Flushables_flush_Test#should_flush_Flushables",
            "org.assertj.core.internal.files.Files_assertHasExtension_Test#should_throw_npe_if_extension_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.Condition_as_String_Test#should_set_description",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_fail_if_floats_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_String_Test#should_create_Assert",
            "org.assertj.core.error.MessageFormatter_format_Test#should_throw_error_if_format_string_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_fail_since_actual_is_not_zero_in_hex_representation",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longs.Longs_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.api.double_.DoubleAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.util.Collections_format_Test#should_return_empty_brackets_if_Collection_is_empty",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_return_true_if_given_fields_are_equal",
            "org.assertj.core.api.fail.Fail_fail_because_exception_was_not_thrown_Test#should_include_message_built_with_given_throwable_name",
            "org.assertj.core.api.Assertions_assertThat_inUnicode_Test#should_assert_char_array_in_unicode_representation",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_true_if_both_Objects_are_null_with_verify",
            "org.assertj.core.api.float_.FloatAssert_isPositive_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_first_float_is_null_but_not_the_second",
            "org.assertj.core.error.ShouldContainOnly_create_Test#should_not_display_unexpected_elements_when_there_are_none_with_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_pass_if_big_decimals_are_not_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.float_.FloatAssert_isLessThanOrEqualTo_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_fail_if_expected_value_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_Object_array",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.file.FileAssert_usingCharset_String_Test#should_return_this",
            "org.assertj.core.api.integer_.IntegerAssert_isNegative_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_fail_if_actual_is_not_in_same_second_as_given_date",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.api.chararray.CharArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_dayOfMonthOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.api.integer_.IntegerAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[2]",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.error.ShouldContain_create_Test#should_create_error_message_differentiating_double_from_float",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.files.Diff_diff_File_Test#should_return_diffs_if_files_do_not_have_equal_content",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.api.boolean_.BooleanAssert_isFalse_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isNotEqualTo_float_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.maps.Maps_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_is_subset_of_set",
            "org.assertj.core.api.longarray.LongArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_contains_subsequence_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_format_Test#should_format_byte_array_in_hex_representation",
            "org.assertj.core.api.classes.ClassAssert_isInterface_Test#should_have_internal_effects",
            "org.assertj.core.presentation.NumberGrouping_Test#should_group_bytes_in_integer",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_by_comparison",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_hasBinaryContent_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_fail_if_floats_are_not_equal_within_offset",
            "org.assertj.core.api.integer_.IntegerAssert_isBetween_Integers_Test#should_have_internal_effects",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_method_is_not_public",
            "org.assertj.core.error.ShouldNotContainString_create_Test#should_create_error_message",
            "org.assertj.core.api.Assertions_assertThat_with_BooleanArray_Test#should_create_Assert",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.internal.throwables.Throwables_assertHasNoCause_Test#should_pass_if_actual_has_no_cause",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_long_Test#should_create_Assert",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_pass_when_not_ignored_inherited_fields_are_equal",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.classes.Classes_assertIsAnnotation_Test#should_pass_if_actual_is_an_annotation",
            "org.assertj.core.api.JUnitSoftAssertionsFailureTest#should_report_all_errors",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_both_actual_and_values_have_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_fail_if_actual_is_not_within_given_day_of_month",
            "org.assertj.core.api.intarray.IntArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.api.file.FileAssert_isFile_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_sequence_only_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.object.ObjectAssert_isLenientEqualsToByAcceptingFields_Test#should_return_this",
            "org.assertj.core.api.long_.LongAssert_isLessThanOrEqualTo_long_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.path.PathAssert_isCanonical_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorOnFields_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isWithinYear_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extractingResultOf_Test#should_throw_error_if_no_method_with_given_name_can_be_extracted",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.api.longarray.LongArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Character_Test#should_pass_actual",
            "org.assertj.core.internal.integers.Integers_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertHasTime_Test#should_fail_if_actual_has_not_same_time",
            "org.assertj.core.api.iterable.IterableAssert_containsOnlyElementsOf_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Objects_hashCodeFor_Test#should_return_zero_if_Object_is_null",
            "org.assertj.core.internal.paths.Paths_assertIsCanonical_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_doesNotHaveTheSameClassAs_Test#should_have_internal_effects",
            "org.assertj.core.condition.Not_matches_Test#should_not_match_if_condition_matches",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_throw_error_if_index_is_null",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_pass_if_actual_non_existent_path_has_the_given_file_name",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThanOrEqualTo_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsSymbolicLink_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contains_null_value",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isCloseTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_fail_if_actual_has_elements",
            "org.assertj.core.internal.integers.Integers_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.api.path.PathAssert_hasBinaryContent_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.api.double_.DoubleAssert_isPositive_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_equals_to_given_date",
            "org.assertj.core.internal.paths.Paths_assertIsDirectory_Test#should_succeed_if_actual_is_a_directory",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_not_strictly_before_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.map.MapAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldContainsStringOnlyOnce_create_Test#should_create_error_message_when_string_to_search_does_not_appear_with_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.double_.DoubleAssert_isNaN_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeEqual_assertj_elements_stack_trace_filtering_Test#fest_elements_should_be_removed_from_assertion_error_stack_trace",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsAbsolute_Test#should_fail_if_actual_is_not_absolute",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.error.ShouldHaveComparableElementsAccordingToComparator_create_Test#should_create_error_message",
            "org.assertj.core.description.TextDescription_constructor_Test#should_throw_error_if_value_is_null",
            "org.assertj.core.util.Strings_isEmpty_Test#should_return_true_if_String_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_contains_one_element_of_given_iterable",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_pass_if_actual_is_not_instance_of_any_type",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_pass_if_actual_is_within_given_month",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Map_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.conditions.Conditions_assertIs_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_isDirectory_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_fail_when_objects_to_compare_are_of_different_types",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_but_not_whole_sequence",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_pass_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.list.ListAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.util.Files_linesOf_Test#should_throw_exception_if_charset_name_does_not_exist",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_return_true_if_both_Objects_are_null",
            "org.assertj.core.util.Iterables_nonNullElementsIn_Test#should_return_a_list_without_null_elements",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longs.Longs_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeReadable_create_Test#should_create_error_message_for_Path",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_pass_if_actual_is_not_in_Iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_throw_error_if_array_of_entries_to_look_for_is_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#should_allow_null",
            "org.assertj.core.error.ShouldNotBeNull_create_Test#should_create_error_message",
            "org.assertj.core.internal.paths.Paths_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.float_.FloatAssert_isGreaterThanOrEqualTo_float_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreNot_Test#should_fail_if_condition_is_met",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_pass_if_bytes_are_not_equal",
            "org.assertj.core.internal.files.Files_assertHasNoParent_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_double_array",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_values_of_simple_property",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test#should_fail_if_actual_is_not_of_class_in_empty_types",
            "org.assertj.core.internal.paths.Paths_assertHasNoParentRaw_Test#should_succeed_if_actual_has_no_parent",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.api.short_.ShortAssert_isGreaterThan_short_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_doesNotContainValue_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_pass_if_doubles_are_equal",
            "org.assertj.core.api.file.FileAssert_isRelative_Test#should_return_this",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isStrictlyBetween_Floats_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_pass_if_both_Strings_are_XML_equals",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_all_iterable_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.Assertions_assertThat_with_LongArray_Test#should_create_Assert",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.util.Collections_duplicatesFrom_Test#should_not_return_any_duplicates",
            "org.assertj.core.error.ShouldNotContain_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_nonNullElementsIn_Test#should_return_empty_Collection_if_given_array_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringEndsWith_Test#should_pass",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_using_custom_date_string_representation_then_switching_back_to_defaults_date_formats",
            "org.assertj.core.internal.files.Files_assertExists_Test#should_fail_if_actual_does_not_exist",
            "org.assertj.core.internal.paths.Paths_assertExists_Test#should_pass_if_actual_exists",
            "org.assertj.core.api.JUnitBDDSoftAssertionsSuccessTest#all_assertions_should_pass",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOfAny_Test#should_return_this",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_arrayContains_Test#should_return_false_if_array_does_not_contain_value_according_to_comparison_strategy",
            "org.assertj.core.error.ShouldBeEqualWithTimePrecision_create_Test#should_create_error_message_ignoring_seconds",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_sequence_only_once_but_in_different_case",
            "org.assertj.core.api.file.FileAssert_exists_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.api.float_.FloatAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.map.MapAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageEndingWith_Test#should_return_this",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test#should_pass",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_does_not_contain_sequence",
            "org.assertj.core.error.ShouldNotHaveSameClass_create_Test#should_create_error_message",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test#should_fail_if_actual_is_of_class_in_types",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_contains_full_sequence_even_if_partial_sequence_is_found_before",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_byte_in_hexadecimal",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertDoNotHave_Test#should_pass_if_each_element_not_satisfies_condition",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_pass_if_actual_is_in_same_second_as_given_date",
            "org.assertj.core.api.long_.LongAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test#should_fail_if_other_is_not_an_array",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_pass_if_actual_is_in_same_year_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_invoke_methods_without_arguments",
            "org.assertj.core.api.AutoCloseableBDDSoftAssertionsTest#all_assertions_should_pass",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotSameAs_Test#should_be_loosely_typed1",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_extract_pure_property_values",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_null_value_Test#should_filter_iterable_elements_with_property_in_given_values",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Closeables_closeQuietly_Test#should_close_Closeables",
            "org.assertj.core.api.BDDAssertions_then_Test#then_double_array",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.error.ShouldBeDirectory_create_Test#should_create_error_message_for_File",
            "org.assertj.core.api.bytearray.ByteArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtLeast_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Integer",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsZero_Test#should_fail_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Dates_format_with_date_time_format_Test#should_format_calendar_with_date_time_format",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.path.PathAssert_isRelative_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_hasOnlyNullElements_Test#should_throw_error_if_array_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.error.ShouldHaveSameContent_create_Test#should_create_error_message_inputstream_even_if_content_contains_format_specifier",
            "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.shortarray.ShortArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_absolute_value_comparison_strategy2",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.api.short_.ShortAssert_isLessThanOrEqualTo_short_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_fail_if_actual_is_not_in_same_second_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_hasTheSameClassAs_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_pass_if_root_cause_is_exactly_instance_of_expected_type",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Condition_describedAs_String_Test#should_return_same_condition",
            "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Array_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertIsAbsolute_Test#should_fail_if_actual_is_not_absolute_path",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_some_not_mutually_comparable_elements_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_pass_if_actual_is_within_given_month_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_extractingResultOf_Test#should_allow_assertions_on_method_invocation_result_extracted_from_given_iterable",
            "org.assertj.core.api.floatarray.FloatArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.api.longarray.LongArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_unix_file_is_split_into_lines",
            "org.assertj.core.api.path.PathAssert_exists_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_isReadable_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_BigDecimal_Test#should_pass_actual",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.filter.Filter_with_property_in_given_values_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_allow_assertions_on_field_values_extracted_from_given_iterable",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areNot_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_not_between_given_period",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_fail_if_integers_are_equal",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_pass_if_file_has_text_content",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_using_custom_date_string_representation",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringWhitespace_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeEqualWithinOffset_create_Test#should_create_error_message",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_method_not_found",
            "org.assertj.core.internal.objects.Objects_assertIsNotExactlyInstanceOf_Test#should_fail_if_actual_is_exactly_instance_of_type",
            "org.assertj.core.api.long_.LongAssert_isGreaterThan_long_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.StandardComparisonStrategy_isLessThan_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualToWithStringParameter_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.util.Maps_newWeakHashMap_Test#should_return_empty_mutable_WeakHashMap",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy_in_hex_representation",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_pass_if_actual_is_close_to_given_date_by_less_than_given_delta_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Diff_diff_File_String_Test#should_return_diffs_if_file_and_string_do_not_have_equal_content",
            "org.assertj.core.api.Assertions_assertThat_with_List_Test#should_create_Assert_with_list_extended",
            "org.assertj.core.util.Strings_quoteObject_Test#should_quote_Object_that_is_String",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtLeast_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_nonNullElementsIn_Test#should_return_an_empty_Collection_if_given_array_is_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isCloseTo_long_Test#should_have_internal_effects",
            "org.assertj.core.error.DescriptionFormatter_format_expectingEmptyText_Test#should_return_empty_String[2]",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.util.Arrays_isArray_Test#should_return_true_if_object_is_an_array",
            "org.assertj.core.api.shortarray.ShortArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_equals_to_start_of_given_period_and_start_is_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.character.CharacterAssert_isNotEqualTo_char_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_has_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.api.double_.DoubleAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_throw_error_if_iterable_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.error.ShouldNotBeEqual_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_prefix_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_hasParent_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test#should_pass_if_actual_is__of_class_in_empty_types",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreExactly_Test#should_pass_if_satisfies_exactly_times_condition",
            "org.assertj.core.api.iterable.IterableAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_once",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_only_null_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_List_Test#should_create_Assert_with_extends",
            "org.assertj.core.api.floatarray.FloatArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOf_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_description_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test#should_fail_if_size_of_actual_has_same_as_other_array",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Dates_truncateTime_Test#should_return_null_if_date_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_actual_has_cause_and_expected_cause_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Collections_isNullOrEmpty_Test#should_return_true_if_Collection_is_null",
            "org.assertj.core.api.file.FileAssert_usingCharset_String_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_with_CharSequence_Test#should_create_Assert",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_description_Test#should_set_description",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.util.Strings_quoteString_Test#should_quote_empty_String",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_pass_if_actual_is_in_Iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_fail_if_actual_is_not_within_given_millisecond_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.longarray.LongArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_CharSequence_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.error.ShouldNotContainAtIndex_create_Test#should_create_error_message",
            "org.assertj.core.api.character.CharacterAssert_isLessThan_char_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isAfter_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.error.ShouldContainsOnlyOnce_create_Test#should_create_error_message",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_null_array_fields_is_given",
            "org.assertj.core.api.file.FileAssert_usingCharset_String_invalid_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveSameTime_create_Test#should_create_error_message",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.byte_.ByteAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_string_more_than_once",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_pass_if_floats_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_fail_if_actual_is_not_strictly_before_given_date",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_assertions_on_property_values_extracted_from_given_iterable",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameElementsAs_Test#should_have_internal_effects",
            "org.assertj.core.util.Arrays_format_Test#should_format_float_array",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThanOrEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.util.introspection.PropertySupport_publicGetterExistsFor_Test#should_return_true_if_public_getter_exists_for_field",
            "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_pass_if_big_decimals_are_equal_by_comparison",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtMost_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_pass_if_floats_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_usingCharset_String_invalid_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_fail_with_my_exception_if_compared_with_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveExactly_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.error.ShouldNotHave_create_Test#should_create_error_message",
            "org.assertj.core.internal.objects.Objects_assertIsNotExactlyInstanceOf_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.boolean_.BooleanAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThanOrEqualTo_Test#should_pass",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_fail_if_actual_is_not_within_given_second_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_size_is_not_equal_to_other_size",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_extract_property",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.groups.Properties_extractProperty_Test#should_throw_error_if_property_name_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.long_.LongAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.api.Condition_constructor_with_text_description_Test#should_set_description",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_with_offset_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_pass_if_actual_is_equals_to_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_equals_to_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_according_to_custom_comparison_strategy_even_if_duplicated_",
            "org.assertj.core.api.chararray.CharArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.util.Strings_concat_Test#should_return_null_if_array_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSubsetOf_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_fail_if_cause_is_not_exactly_instance_of_expected_type",
            "org.assertj.core.util.introspection.FieldSupport_isAllowedToReadField_Test#fieldSupport_should_be_allowed_to_read_public_field_only",
            "org.assertj.core.groups.Properties_from_with_Collection_Test#should_return_values_of_property",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.character.CharacterAssert_isLowerCase_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Condition_as_Description_Test#should_set_description",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.util.Closeables_closeQuietly_Test#should_ignore_thrown_errors",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[6]",
            "org.assertj.core.api.Assertions_assertThat_with_String_Test#should_pass_actual",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_short_Test#should_pass_actual",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_float_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_pass_if_actual_matches_Pattern",
            "org.assertj.core.util.Maps_newWeakHashMap_Test#should_return_new_WeakHashMap",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_fail_if_actual_does_not_contain_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.util.Strings_isEmpty_Test#should_return_false_if_String_is_not_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isLessThan_int_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.float_.FloatAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_pass_if_shorts_are_equal",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_double_Test#should_pass_actual",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldHaveOnlyElementsOfType_create_Test#should_create_error_message_for_iterable",
            "org.assertj.core.error.ShouldStartWith_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.error.ShouldContainsOnlyOnce_create_Test#should_create_error_message_without_not_found_elements",
            "org.assertj.core.error.ShouldNotContainString_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.float_.FloatAssert_isBetween_Floats_Test#should_have_internal_effects",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_not_be_equal_to_BasicErrorMessage_with_different_format",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertEndsWithRaw_Test#should_fail_if_actual_does_not_end_with_other",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHave_Test#should_fail_if_Condition_is_not_met",
            "org.assertj.core.api.iterable.IterableAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.error.ShouldContainSequence_create_Test#should_create_error_message",
            "org.assertj.core.internal.floats.Floats_NaN_Test#check_float_NaN_method",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.SoftAssertionsTest#should_be_able_to_catch_exceptions_thrown_by_map_assertions",
            "org.assertj.core.internal.classes.Classes_assertIsAssignableFrom_Test#should_pass_if_actual_is_assignable_from",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_floats_are_not_equal_within_offset",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_fail_if_characters_are_equal",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isInTheFuture_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_throw_error_if_array_is_null",
            "org.assertj.core.util.Throwables_getRootCause_Test#should_return_null_if_throwable_has_no_cause",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Test#should_fail_if_both_Strings_are_not_equal_regardless_of_case",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_format_tuples",
            "org.assertj.core.internal.intarrays.IntArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_pass_if_actual_is_in_same_second_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtLeast_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_fail_if_actual_contains_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsWritable_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[8]",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_mac_file_is_split_into_lines",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_create_error_message_when_only_elements_order_differs",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_throw_error_if_given_iterable_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_pass_if_actual_is_in_same_hour_window_as_given_date",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_assertions_on_multiple_extracted_values_from_given_iterable",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_arrayContains_Test#should_fail_if_first_parameter_is_not_an_array",
            "org.assertj.core.error.ShouldBeDirectory_create_Test#should_create_error_message_for_Path",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_Pattern_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_signed_short_in_hexadecimal",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_fail_if_actual_is_null_and_expected_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldHaveParent_create_Test#should_create_error_message_when_file_has_no_parent",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_fail_if_actual_path_does_not_exist",
            "org.assertj.core.api.abstract_.AbstractAssert_hasToString_Test#should_have_internal_effects",
            "org.assertj.core.util.Arrays_format_Test#should_return_empty_brackets_if_array_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.abstract_.AbstractAssert_get_writable_info_Test#should_keep_specific_error_message_and_description_set_by_user",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_to_given_date_by_less_than_given_delta_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_throw_error_if_suffix_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_does_not_contain_all_given_strings",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.float_.FloatAssert_isNegative_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_pass_if_floats_are_equal",
            "org.assertj.core.api.Assertions_assertThat_with_ByteArray_Test#should_pass_actual",
            "org.assertj.core.api.longarray.LongArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Map_Test#should_pass_actual",
            "org.assertj.core.error.ShouldBeEqualComparingOnlyGivenFields_create_Test#should_create_error_message_with_all_fields_differences",
            "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_empty_List_if_given_Iterable_is_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsZero_Test#should_fail_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.StandardComparisonStrategy_arrayContains_Test#should_return_false_if_array_does_not_contain_value",
            "org.assertj.core.api.Assertions_assertThat_with_FloatArray_Test#should_pass_actual",
            "org.assertj.core.internal.StandardComparisonStrategy_iterableContains_Test#should_pass",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_when_selected_field_is_private_and_private_field_use_is_allowed",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtMost_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.chararray.CharArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyDigits_Test#should_pass_if_actual_contains_only_digits",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test#should_return_this",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_Object_array_having_itself_as_element",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_pass_if_actual_matches_Pattern_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.iterables.Iterables_assertHave_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.error.MessageFormatter_format_Test#should_throw_error_if_args_array_is_null",
            "org.assertj.core.api.SoftAssertionErrorTest#should_format_a_single_error_correctly",
            "org.assertj.core.internal.doubles.Doubles_assertIsZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Map_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKey_Test#should_pass_if_actual_contains_given_key",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_year_is_equals_to_given_year",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualToContentOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_throw_error_if_array_of_types_is_empty",
            "org.assertj.core.api.SoftAssertionsTest#should_pass_when_using_extracting_with_iterable",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreExactly_Test#should_fail_if_condition_is_met_much",
            "org.assertj.core.internal.longs.Longs_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isBetween_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_containsExactlyElementsOf_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_isEqualTo_Test#should_return_this",
            "org.assertj.core.internal.classes.Classes_assertIsInterface_Test#should_pass_if_actual_is_an_interface",
            "org.assertj.core.api.character.CharacterAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_when_selected_field_is_not_accessible_and_private_field_use_is_forbidden",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldContainOnlyKeys_create_Test#should_not_display_unexpected_elements_when_there_are_none",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_fail_with_my_exception_if_compared_with_other_object",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.map.MapAssert_doesNotContainEntry_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_hasParent_Test#should_return_this",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isEqualByComparingToWithStringParameter_Test#should_return_this",
            "org.assertj.core.api.charsequence.CharSequenceAssert_matches_Pattern_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_only_null_values_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.intarray.IntArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_are_not_equal_if_second_Object_is_null_and_first_is_not",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageEnding_Test#should_pass_if_actual_has_message_ending_with_expected_description",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.data.Offset_offset_with_Integer_Test#should_throw_error_if_value_is_negative",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsNotZero_Test#should_fail_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_no_fields_are_given",
            "org.assertj.core.api.map.MapAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[9]",
            "org.assertj.core.internal.floats.Floats_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_absolute_value_comparison_strategy2",
            "org.assertj.core.api.Condition_describedAs_Description_Test#should_return_same_condition",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_pass_if_actual_is_in_same_minute_window_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.date.DateAssert_isCloseTo_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_empty_List_if_given_Iterable_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_matches_String_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#succesful_isEqualTo_assertion_using_field_by_field_element_comparator",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOf_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.inputstream.InputStreamAssert_hasSameContentAs_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_fail_if_actual_is_not_in_same_minute_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.SoftAssertionsTest#should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods",
            "org.assertj.core.api.byte_.ByteAssert_isEqualTo_byte_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_pass_when_private_fields_differ_but_are_not_compared",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.presentation.NumberGrouping_Test#should_group_words_in_byte_hex_value",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test#should_pass_if_actual_is_not_of_class_in_types",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_fail_if_actual_does_not_contain_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertHasExtension_Test#should_throw_error_if_actual_does_not_have_the_expected_extension",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Float",
            "org.assertj.core.api.floatarray.FloatArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.condition.DoesNotHave_toString_Test#should_implement_toString_showing_descriptions_of_inner_Conditions",
            "org.assertj.core.api.date.DateAssert_isWithinMonth_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_second_float_is_null_but_not_the_first_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_pass_regardless_of_minute_second_and_millisecond_fields_values",
            "org.assertj.core.api.AutoCloseableSoftAssertionsTest#all_assertions_should_pass",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_pass_if_actual_does_not_contain_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.classes.Classes_assertHasDeclaredFields_Test#should_pass_if_fields_are_public_protected_or_private",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.util.SystemsProperties_lineSeparator_Test#should_return_line_separator",
            "org.assertj.core.error.ShouldNotHaveDuplicates_create_Test#should_create_error_message",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_fail_if_actual_does_not_contain_null",
            "org.assertj.core.api.short_.ShortAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.api.byte_.ByteAssert_isLessThanOrEqualTo_long_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.api.date.DateAssert_isNotBetween_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_throw_error_if_other_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeEqualIgnoringGivenFields_create_Test#should_create_error_message_with_single_field_difference",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_fail_if_lines_count_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsNaN_Test#should_succeed_since_actual_is_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertHave_Test#should_fail_if_condition_is_not_met",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test#should_fail_if_expected_has_null_value",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.inputstreams.BinaryDiff_diff_InputStream_Test#should_return_diff_if_expected_is_shorter",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_only_one_element_with_non_comparable_component_type_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Condition_constructor_with_text_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldStartWith_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_pass_if_integers_are_equal",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_byte_array",
            "org.assertj.core.internal.files.Files_assertIsRelative_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_boolean_Test#should_pass_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.api.path.PathAssert_hasParent_Test#should_have_internal_effects",
            "org.assertj.core.api.shortarray.ShortArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_with_List_Test#should_create_Assert_generics",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_actual_contains_unexpected_entry",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.longarray.LongArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_pass_if_actual_is_strictly_after_given_date",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_Double_Test#should_create_Assert",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.condition.Join_constructor_with_array_Test#should_throw_error_if_array_is_null",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_throw_error_if_end_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_format_longs_and_integers",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.api.integer_.IntegerAssert_isNotPostitive_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.files.Files_assertCanWrite_Test#should_pass_if_actual_can_write",
            "org.assertj.core.internal.classes.Classes_assertHasFields_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.util.Files_temporaryFolderPath_Test#should_find_path_of_temporary_folder",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.paths.Paths_assertIsDirectory_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#should_initialise_actual",
            "org.assertj.core.api.double_.DoubleAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldContainOnly_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertNotNull_Test#should_fail_if_object_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.conditions.Conditions_assertHas_Test#should_pass_if_Condition_is_met",
            "org.assertj.core.api.short_.ShortAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.api.integer_.IntegerAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isWithinDayOfMonth_Test#should_return_this",
            "org.assertj.core.api.longarray.LongArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_byte_in_binary",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[7]",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringCase_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertEqual_Test#should_fail_if_shorts_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveNot_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.api.Assertions_assertThat_with_List_Test#should_create_Assert",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.byte_.ByteAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_extract_nested_property",
            "org.assertj.core.internal.inputstreams.BinaryDiff_diff_InputStream_Test#should_return_diff_if_actual_is_shorter",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.conditions.Conditions_assertDoesNotHave_Test#should_fail_if_Condition_is_met",
            "org.assertj.core.error.ShouldContainOnlyDigits_create_Test#should_create_error_message_for_empty_string",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.float_.FloatAssert_isGreaterThan_float_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_has_some_non_comparable_elements",
            "org.assertj.core.api.longarray.LongArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_true_if_both_Objects_are_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_pass_if_actual_is_instance_of_any_type",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeBetween_create_Test#should_create_error_message_with_period_boundaries_excluded",
            "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Map_Test#should_fail_if_size_of_actual_is_not_equal_to_size_of_other",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.error.DescriptionFormatter_format_expectingEmptyText_Test#should_return_empty_String[0]",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfType_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_pass_if_actual_starts_with_prefix",
            "org.assertj.core.api.intarray.IntArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeInSameHourWindow_create_Test#should_create_error_message",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_actual_does_not_contains_every_expected_entries",
            "org.assertj.core.api.longarray.LongArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.intarray.IntArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.util.Files_temporaryFolder_Test#should_find_temporary_folder",
            "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test#should_build_ThrowableAssert_with_throwable_thrown",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldNotHaveDuplicates_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_fail_if_actual_is_not_null_and_is_not_empty",
            "org.assertj.core.error.ShouldBeOfClassIn_Test#should_create_error_message",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotExactlyInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.data.Offset_offset_with_Float_Test#should_throw_error_if_value_is_negative",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_pass_if_floats_are_equal",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.integer_.IntegerAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.api.filter.Filter_being_condition_Test#should_fail_if_filter_condition_is_null",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_isFile_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsReadable_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.longs.Longs_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.BDDAssertions_then_Test#then_short_array",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy2",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.intarray.IntArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.api.long_.LongAssert_isPositive_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertDoesNotHaveNotSameClassAs_Test#should_pass_if_actual_does_not_have_not_same_class_as_other",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_throw_error_if_array_is_empty",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainValue_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_equals_to_end_of_given_period_and_end_is_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtMost_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_extract_field",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.map.MapAssert_containsEntry_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotEqualTo_Test#should_return_this",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_pass_if_cause_is_exactly_instance_of_expected_type",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test#should_throw_exception_when_extracted_value_is_not_an_array_or_an_iterable",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_pass_if_actual_does_not_match_Pattern",
            "org.assertj.core.api.iterable.IterableAssert_areExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCauseExactlyInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.api.path.PathAssert_hasBinaryContent_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_pass_if_doubles_are_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableContains_Test#should_return_false_if_collections_does_not_contain_value_according_to_given_comparator",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_cause_is_not_instance_of_expected_type",
            "org.assertj.core.internal.longarrays.LongArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.api.path.PathAssert_isRegularFile_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.api.chararray.CharArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.list.ListAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.chararray.CharArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.api.Tuple_Test#add_an_element_to_a_tuple",
            "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#should_return_empty_List_if_given_Iterable_is_empty",
            "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test#should_succeed_if_parent_is_expected_parent",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_fail_if_actual_is_not_in_array_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldHaveExtension_create_Test#should_create_error_message_when_actual_does_not_have_extension",
            "org.assertj.core.api.unevencomparable.AbstractUnevenComparableAssert_isNotEqualToByComparingTo_Test#should_return_this",
            "org.assertj.core.api.chararray.CharArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_integers_in_hexadecimal",
            "org.assertj.core.internal.floats.Floats_assertIsZero_Test#should_succeed_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isWithinMillisecond_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_pass_if_actual_is_within_given_day_of_week_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_pass_if_actual_is_close_to_given_date_by_less_than_given_delta",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_int_Test#should_create_Assert",
            "org.assertj.core.util.Arrays_isArray_Test#should_return_false_if_object_is_null",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_size_is_not_equal_to_other_size",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_hasSameContentAs_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_return_true_if_objects_are_equal_according_to_comparison_strategy",
            "org.assertj.core.util.Files_newTemporaryFolder_Test#should_create_new_temporary_folder",
            "org.assertj.core.error.ShouldHaveNoParent_create_Test#should_create_error_message_when_file_has_a_parent",
            "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageContainingWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.api.map.MapAssert_doesNotContainKeys_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertIsNaN_Test#should_fail_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_pass_if_actual_is_in_same_minute_as_given_date",
            "org.assertj.core.api.date.DateAssert_isNotBetween_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_throw_error_if_offset_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.files.Diff_diff_File_String_Test#should_return_diffs_if_content_of_actual_is_shorter_than_content_of_expected",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_extracting_single_values_using_extractor",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNaN_Test#should_fail_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_hasTime_Test#should_verify_that_actual_has_time_equals_to_expected",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_fail_if_actual_is_instance_of_any_type",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.api.double_.DoubleAssert_isLessThan_double_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_truncateTime_Test#should_return_millisecond_of_date",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeastOne_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doNothave_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_fail_if_actual_is_not_within_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseExactlyInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_pass_if_actual_does_not_contain_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.api.intarray.IntArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Dates_parse_date_time_Test#should_fail_if_string_does_not_respect_date_format",
            "org.assertj.core.util.Collections_nonNullElementsIn_Test#should_return_empty_List_if_given_Collection_is_empty",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_fail_if_actual_matches_regular_expression",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThanOrEqualTo_Test#should_fail_if_a_parameter_is_not_comparable",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_succeed_if_actual_starts_with_other",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.unevencomparable.AbstractUnevenComparableAssert_isEqualToByComparingTo_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#iterator_can_be_asserted_twice_even_though_it_can_be_iterated_only_once",
            "org.assertj.core.api.float_.FloatAssert_isCloseTo_float_Test#should_return_this",
            "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.data.Offset_offset_with_Double_Test#should_throw_error_if_value_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.Files_contentOf_Test#should_throw_exception_if_charset_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_sequence",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Files_newFile_Test#should_throw_error_if_file_path_belongs_to_directory_that_is_not_empty",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_isExactlyInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.internal.lists.Lists_assertHas_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_stringStartsWith_Test#should_pass",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.paths.Paths_assertEndsWithRaw_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isEqualTo_Test#should_return_this",
            "org.assertj.core.api.classes.ClassAssert_hasAnnotation_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_byte_array_in_hex_representation",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#should_fail_if_given_date_string_representation_cant_be_parsed_with_any_custom_date_formats",
            "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_suffix_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_null",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.error.ElementsShouldBeAtLeast_create_Test#should_create_error_message",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_toString_Test#toString_with_non_anonymous_comparator",
            "org.assertj.core.api.double_.DoubleAssert_isCloseTo_double_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_but_not_whole_sequence",
            "org.assertj.core.api.long_.LongAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extractingResultOf_Test#should_allow_assertions_on_method_invocation_result_extracted_from_given_iterable_with_enforcing_return_type",
            "org.assertj.core.api.double_.DoubleAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_fail_if_big_decimals_are_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasAtLeastOneElementOfType_Test#should_throw_exception_if_expected_type_is_null",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_fail_if_longs_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_pass_if_actual_is_in_array",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isWithinYear_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_throw_error_if_set_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Lists_newArrayList_withIterable_Test#should_return_List_containing_all_elements_in_iterable",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_sequence_only_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.doubles.Doubles_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableContains_Test#should_return_false_if_collections_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_pass_when_field_values_are_null",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_pass_if_bytes_are_equal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_is_Test#should_return_this",
            "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThan_Test#verify_that_isGreaterThan_delegates_to_compare_method",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.paths.Paths_assertEndsWithRaw_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtLeast_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.api.long_.LongAssert_isLessThan_long_Test#should_have_internal_effects",
            "org.assertj.core.api.float_.FloatAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_pass_if_actual_directory_has_the_given_file_name",
            "org.assertj.core.error.ElementsShouldHaveExactly_create_Test#should_create_error_message",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_fail_if_characters_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.description.TextDescription_value_Test#should_not_format_curly_brace",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_fail_if_actual_does_not_contains_every_expected_entries_and_contains_unexpected_one",
            "org.assertj.core.api.abstract_.AbstractAssert_equal_hashCode_Test#shouldReturnOneAsHashCode",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNaN_Test#should_fail_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.api.float_.FloatAssert_isNotNaN_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.inputstreams.InputStreams_assertSameContentAs_Test#should_fail_if_inputstreams_do_not_have_equal_content",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableRemove_Test#should_remove_value_from_collections_since_it_matches_one_collections_element_according_to_given_comparator",
            "org.assertj.core.api.Condition_constructor_with_description_Test#should_set_description",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_all_given_values_only_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isGreaterThanOrEqualTo_byte_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.api.character.CharacterAssert_isGreaterThanOrEqualTo_char_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_fail_if_actual_is_not_within_given_day_of_week_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_pass_if_actual_is_in_same_minute_window_as_given_date",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.classes.Classes_assertIsNotAnnotation_Test#should_pass_if_actual_is_not_an_annotation",
            "org.assertj.core.error.ShouldHaveOnlyElementsOfType_create_Test#should_create_error_message_for_array",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.paths.Paths_assertIsExecutable_Test#should_fail_with_should_exist_error_if_actual_does_not_exist",
            "org.assertj.core.internal.shorts.Shorts_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_return_false_if_first_object_is_null_and_second_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_in_different_order",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Files_contentOf_Test#should_throw_exception_if_charset_name_does_not_exist",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Dates_hourOfDayOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.error.ShouldBeAtIndex_create_Test#should_create_error_message",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertIsSymbolicLink_Test#should_succeed_if_actual_is_a_symbolic_link",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_not_be_equal_to_IsNotEqual_with_different_expected",
            "org.assertj.core.error.ShouldContainString_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_iterableRemove_Test#should_not_fail_if_collections_is_empty_or_null",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_Object_array_that_has_primitive_array_as_element",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_failWithMessage_Test#should_keep_specific_error_message_and_description_set_by_user",
            "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeast_Test#should_return_this",
            "org.assertj.core.error.DescriptionFormatter_format_expectingEmptyText_Test#should_return_empty_String[1]",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_pass_if_cause_is_exactly_instance_of_expected_type",
            "org.assertj.core.error.ShouldNotBeExactlyInstance_create_Test#should_create_error_message",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.map.MapAssert_containsValue_Test#should_have_internal_effects",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_array_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_the_same_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.files.BinaryDiff_diff_File_byteArray_Test#should_return_no_diff_if_file_and_array_have_equal_content",
            "org.assertj.core.api.classes.ClassAssert_hasDeclaredFields_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtMost_Test#should_return_this",
            "org.assertj.core.api.map.MapAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_short_in_hexadecimal",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_collections_in_hexadecimal",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_null_more_than_once",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_fail_if_objects_are_not_mutually_comparable",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areNot_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.api.longarray.LongArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.util.Dates_timeDifference_Test#should_throws_IllegalArgumentException_if_second_date_parameter_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.abstract_.AbstractAssert_isOfAnyClassIn_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasAtLeastOneElementOfType_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_is_positive_in_hex_representation",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.util.Dates_timeDifference_Test#should_return_dates_time_difference",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.double_.DoubleAssert_isNotEqualTo_double_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_arrayContains_Test#should_return_false_if_array_is_empty",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_hasAtLeastOneElementOfType_Test#should_pass_if_actual_has_one_element_of_the_expected_type",
            "org.assertj.core.internal.doubles.Doubles_NaN_Test#check_double_NaN_method",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.longarray.LongArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsAll_Test#should_have_internal_effects",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.filter.Filter_being_condition_Test#should_filter_iterable_elements_satisfying_condition",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_Test#should_allow_assertions_on_joined_lists_when_extracting_children",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_pass_if_actual_has_expected_parent_when_actual_form_is_canonical",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_but_not_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_throw_error_if_array_of_entries_to_look_for_is_null",
            "org.assertj.core.error.ShouldBeEqual_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_array_with_null_element",
            "org.assertj.core.api.date.DateAssert_isBefore_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.float_.FloatAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.inputstreams.BinaryDiff_diff_InputStream_Test#should_return_diff_if_inputstreams_differ_on_one_byte",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_the_same",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameElementsAs_Test#should_return_this",
            "org.assertj.core.util.Dates_monthOf_Test#should_return_month_of_date",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_Test#should_allow_assertions_on_joined_lists_when_extracting_children",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertHasToString_Test#should_fail_if_actual_toString_is_not_the_expected_String",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainNull_Test#should_pass_if_actual_does_not_contain_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.character.CharacterAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertEndsWith_Test#should_succeed_if_canonical_actual_ends_with_normalized_other",
            "org.assertj.core.internal.booleans.Booleans_assertEqual_Test#should_fail_if_booleans_are_not_equal",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_fail_if_actual_is_not_within_given_minute_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_Test#should_throw_NullPointerException_if_string_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveSize_create_Test#should_create_error_message_with_hexadecimal_representation",
            "org.assertj.core.internal.failures.Failures_failure_with_AssertionErrorFactory_Test#should_use_AssertionErrorFactory_when_overriding_error_message_is_not_specified",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_signed_byte_in_binary",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageStartingWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.paths.Paths_assertHasNoParent_Test#should_throw_PathsException_if_actual_cannot_be_canonicalized",
            "org.assertj.core.internal.maps.Maps_assertContainsValue_Test#should_success_if_value_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isCloseTo_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.paths.Paths_assertIsAbsolute_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.chararray.CharArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_format_float_array",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.error.ShouldBeIn_create_Test#should_create_error_message",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_pass_if_files_have_equal_content",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_fail_if_shorts_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.api.Condition_describedAs_String_Test#should_throw_error_of_description_is_null",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_fail_if_given_file_name_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_fail_if_actual_is_not_strictly_after_given_date",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.charsequence.CharSequenceAssert_contains_several_String_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertDoesNotExist_Test#should_fail_if_actual_exists",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.files.BinaryDiff_diff_File_byteArray_Test#should_return_diff_if_expected_is_shorter",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_differentiating_expected_and_actual_Test#should_create_AssertionError_with_message_differentiating_expected_double_and_actual_float",
            "org.assertj.core.internal.maps.Maps_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.condition.AllOf_toString_Test#should_implement_toString_showing_descriptions_of_inner_Conditions",
            "org.assertj.core.api.Assertions_assertThat_with_File_Test#should_pass_actual",
            "org.assertj.core.api.long_.LongAssert_isLessThan_long_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageEndingWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_with_non_comparable_component_type",
            "org.assertj.core.util.Iterables_nonNullElementsIn_Test#should_return_empty_List_if_given_Iterable_is_empty",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.util.Dates_formatTimeDifference_Test#should_throws_IllegalArgumentException_if_first_date_parameter_is_null",
            "org.assertj.core.internal.files.Files_assertHasName_Test#should_throw_error_if_actual_does_not_have_the_expected_name",
            "org.assertj.core.util.Dates_monthOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_equals_to_end_of_given_period_and_end_is_not_included_in_given_period",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.error.ShouldBe_create_Test#should_create_error_message",
            "org.assertj.core.internal.doubles.Doubles_assertIsZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.util.Dates_yearOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_exists_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_hasContent_Test#should_have_internal_effects",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_Collection_of_Collections",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_fail_if_integers_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Maps_isNullOrEmpty_Test#should_return_false_if_Map_has_elements",
            "org.assertj.core.internal.files.Files_assertHasName_Test#should_throw_npe_if_name_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_fail_if_actual_contains_null",
            "org.assertj.core.api.Assertions_assertThat_with_LongArray_Test#should_pass_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_fail_if_actual_is_not_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_fail_if_actual_is_not_in_same_day_as_given_date",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_return_false_if_objects_are_not_equal_according_to_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtLeast_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.api.long_.LongAssert_isGreaterThan_long_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_negative_integer_in_binary",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.util.Sets_newHashSet_Test#should_return_empty_mutable_Set",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_pass_if_characters_are_equal",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_Collection_of_String",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_fail_if_actual_is_null_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOfAny_Test#should_return_this",
            "org.assertj.core.api.integer_.IntegerAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_should_support_timestamp_string_representation",
            "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.api.SoftAssertionErrorTest#should_format_multiple_errors_correctly",
            "org.assertj.core.internal.longs.Longs_assertIsNegative_Test#should_fail_since_actual_can_not_be_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.util.Introspection_getProperty_Test#should_raise_an_error_because_of_non_public_getter",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test#should_throw_illegal_argument_exception_when_extracting_from_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isWithinDayOfWeek_Test#should_return_this",
            "org.assertj.core.api.path.PathAssert_isAbsolute_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isToday_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.api.chararray.CharArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_fail_if_actual_has_no_parent",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_pass_if_characters_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_even_if_duplicated",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_throw_error_if_Iterable_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.classes.Classes_assertIsNotAnnotation_Test#should_fail_if_actual_is_null",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_extract_tuples_with_consistent_iteration_order",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_windows_file_is_split_into_lines",
            "org.assertj.core.internal.paths.Paths_assertIsRegularFile_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_Long_Test#should_create_Assert",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_allow_assertions_on_property_values_extracted_from_given_iterable",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#should_not_consume_iterator_when_asserting_non_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_vararg_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[1]",
            "org.assertj.core.internal.paths.Paths_assertIsSymbolicLink_Test#should_fail_if_actual_exists_but_is_not_a_symbolic_link",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isEqualTo_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.shorts.Shorts_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.api.map.MapAssert_containsKey_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.map.MapAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_throw_error_if_Pattern_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.api.intarray.IntArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areAtLeast_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test#fail_with_good_message_when_assertion_is_failing",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_pass_when_private_fields_differ_but_are_not_compared_or_are_ignored",
            "org.assertj.core.api.abstract_.AbstractAssert_isNull_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.FieldByFieldComparator_toString_Test#should_return_description_of_FieldByFieldComparator",
            "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_Test#should_throw_nullpointerexception_if_object_is_null",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_integer_in_binary",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHave_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.api.byte_.ByteAssert_isGreaterThan_byte_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Array_Test#should_pass_if_actual_has_same_size_as_other",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_minute_fields_differ",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[10]",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeast_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreNot_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBeforeYear_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertHaveExactly_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_fail_if_actual_is_not_within_given_day_of_week",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_ms_fields_differ",
            "org.assertj.core.internal.conditions.Conditions_assertIs_Test#should_fail_if_Condition_is_not_met",
            "org.assertj.core.util.Iterables_sizeOf_Test#should_return_iterable_size",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.longarray.LongArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_fail_if_actual_is_not_within_given_day_of_month_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_floats_in_hexadecimal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.api.file.FileAssert_usingCharset_String_invalid_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldNotBeInstanceOfAny_create_Test#should_create_error_message",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Class",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_fail_if_actual_does_not_match_Pattern_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_array_Test#should_return_this",
            "org.assertj.core.api.floatarray.FloatArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.util.Dates_toCalendar_Test#should_convert_date_to_calendar",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_fail_if_second_double_is_null_but_not_the_first",
            "org.assertj.core.internal.classes.Classes_assertIsNotAnnotation_Test#should_fail_if_actual_is_an_annotation",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_values_of_private_field",
            "org.assertj.core.api.comparable.GenericComparableAssert_isLessThanOrEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeLess_create_Test#should_create_error_message",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.api.float_.FloatAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isAfterOrEqualsTo_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.doubles.Doubles_assertNotEqual_Test#should_pass_if_doubles_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtLeast_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_when_selected_fields_and_nested_fields_accessed_with_getters_are_equal",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_create_comparator_using_fields",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.api.object.ObjectAssert_isEqualsToComparingFields_Test#should_return_this",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.byte_.ByteAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageContainingWith_Test#should_pass_if_actual_has_message_containing_with_expected_description",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_when_selected_fields_and_nested_public_fields_are_equal",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldNotContainAtIndex_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNaN_Test#should_succeed_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test#should_fail_if_actual_does_not_contains_an_annotation",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_fail_if_path_does_not_have_expected_binary_content",
            "org.assertj.core.error.ShouldBeIn_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_pass_if_actual_is_within_given_second",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_fail_if_other_is_not_an_array",
            "org.assertj.core.error.ShouldStartWithPath_create_Test#should_create_error_message",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_fail_if_actual_is_not_in_same_hour_as_given_date",
            "org.assertj.core.api.path.PathAssert_hasParentRaw_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.internal.paths.Paths_assertIsDirectory_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Map_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Objects_hashCodeFor_Test#should_return_hashCode_of_given_Object",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_fail_if_actual_is_not_strictly_before_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.api.classes.ClassAssert_isNotAnnotation_Test#should_have_internal_effects",
            "org.assertj.core.api.longarray.LongArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.api.boolean_.BooleanAssert_isEqualTo_boolean_Test#should_return_this",
            "org.assertj.core.util.Files_fileNamesIn_Test#should_return_names_of_files_in_given_directory_but_not_subdirectories",
            "org.assertj.core.api.intarray.IntArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if_big_decimals_difference_is_greater_than_offset",
            "org.assertj.core.error.ShouldContainValues_create_Test#should_create_error_message_with_single_value",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_fail_if_bytes_are_not_equal",
            "org.assertj.core.error.ElementsShouldHaveAtLeast_create_Test#should_create_error_message",
            "org.assertj.core.error.ShouldContainsOnlyOnce_create_Test#should_create_error_message_without_elements_found_many_times",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasAtLeastOneElementOfType_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ElementsShouldHave_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test#can_capture_exception_and_then_assert_following_AAA_or_BDD_style",
            "org.assertj.core.api.intarray.IntArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.api.path.PathAssert_isDirectory_Test#should_have_internal_effects",
            "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThanOrEqualTo_Test#should_pass",
            "org.assertj.core.internal.longs.Longs_assertIsZero_Test#should_fail_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_IntArray_Test#should_pass_actual",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.intarray.IntArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.Assertions_assertThat_with_DoubleArray_Test#should_pass_actual",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldHaveParent_create_Test#should_create_error_message_when_path_does_not_have_expected_parent",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.date.DateAssert_isAfter_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_assertions_on_field_values_extracted_from_given_iterable",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Dates_formatTimeDifference_Test#should_return_dates_time_difference",
            "org.assertj.core.internal.conditions.Conditions_assertIs_Test#should_pass_if_Condition_is_met",
            "org.assertj.core.internal.doubles.Doubles_assertIsNaN_Test#should_succeed_since_actual_is_equal_to_NaN",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_pass_if_actual_is_in_same_month_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.filter.Filter_having_condition_Test#should_fail_if_filter_condition_is_null",
            "org.assertj.core.util.Arrays_format_Test#should_format_char_array",
            "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Files_contentOf_Test#should_load_file_using_charset_name",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_array",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_actual_has_same_size_as_other",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_return_are_not_equal_if_second_Object_is_null_and_first_is_not",
            "org.assertj.core.api.date.DateAssert_isAfterYear_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteWindowAs_Test#should_throw_error_if_given_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertIsNotNaN_Test#should_succeed_since_actual_is_not_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_pass_if_actual_has_expected_parent_when_actual_form_is_absolute",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_even_if_non_accepted_fields_differ",
            "org.assertj.core.internal.paths.Paths_assertHasParentRaw_Test#should_fail_if_actual_has_no_parent",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.api.date.DateAssert_isAfterYear_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.api.abstract_.AbstractAssert_isNull_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_not_in_the_past",
            "org.assertj.core.api.iterable.IterableAssert_areAtLeastOne_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertEmpty_Test#should_fail_if_actual_has_elements",
            "org.assertj.core.util.ArrayWrapperList_size_Test#should_return_size_of_array[0]",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_pass_if_actual_contains_only_expected_entries",
            "org.assertj.core.internal.integers.Integers_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeInstance_create_Test#should_create_shouldBeInstanceButWasNull_error_message",
            "org.assertj.core.internal.conditions.Conditions_assertDoesNotHave_Test#should_pass_if_Condition_is_not_met",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.error.ShouldBeCloseTo_create_Test#should_create_error_message_with_period_boundaries_included",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_throw_error_if_given_iterable_is_empty",
            "org.assertj.core.api.iterable.IterableAssert_containsAll_Test#should_return_this",
            "org.assertj.core.api.chararray.CharArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.Files_newFile_Test#should_create_new_file",
            "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_fail_if_big_decimals_are_not_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.data.Offset_offset_with_Float_Test#should_throw_error_if_value_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_fail_with_description_and_overridden_error_message_using_string_format_feature",
            "org.assertj.core.api.abstract_.AbstractAssert_doesNotHaveTheSameClassAs_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_false_if_arrays_of_Objects_are_not_equal",
            "org.assertj.core.util.Collections_nonNullElementsIn_Test#should_return_empty_List_if_given_Collection_is_null",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_fallback_to_field_if_exception_has_been_thrown_on_property_access",
            "org.assertj.core.internal.integers.Integers_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.util.Iterables_isNullOrEmpty_Test#should_return_false_if_Collection_has_elements",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.internal.longarrays.LongArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isNotEqualTo_long_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_fail_if_actual_is_not_in_same_hour_window_as_given_date",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_fail_if_actual_matches_Pattern",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_other_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.double_.DoubleAssert_isCloseTo_double_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.paths.Paths_assertEndsWith_Test#should_fail_if_canonical_actual_does_not_end_with_normalized_other",
            "org.assertj.core.api.short_.ShortAssert_isCloseTo_short_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsOfClassIn_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.long_.LongAssert_isEqualTo_long_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_Test#should_create_ComparisonFailure_if_JUnit4_is_present_and_trim_spaces_in_formatted_description[0]",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_fail_if_actual_is_not_strictly_before_given_date",
            "org.assertj.core.api.floatarray.FloatArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_Short_Test#should_pass_actual",
            "org.assertj.core.util.Introspection_getProperty_Test#should_raise_an_error_because_of_missing_getter",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_pass_regardless_of_second_and_millisecond_fields_values",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_fail_if_actual_is_not_file",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.api.float_.FloatAssert_isLessThanOrEqualTo_float_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDSoftAssertionsTest#should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Throwable_Test#should_fail_if_no_throwable_was_thrown",
            "org.assertj.core.error.ShouldBeEqualComparingOnlyGivenFields_create_Test#should_create_error_message_with_single_field_difference",
            "org.assertj.core.api.double_.DoubleAssert_isGreaterThanOrEqualTo_double_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test#should_throw_error_if_type_is_null",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_throw_error_if_Pattern_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_fail_if_offset_is_null",
            "org.assertj.core.api.path.PathAssert_usingCharset_default_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_fail_if_actual_path_does_not_exist",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_pass_if_lines_count_of_actual_is_equal_to_expected_lines_count_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_throw_error_if_regular_expression_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Throwables_getRootCause_Test#should_return_cause_when_throwable_has_cause",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_true_if_arrays_of_primitives_are_equal",
            "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test#should_return_this",
            "org.assertj.core.util.Maps_isNullOrEmpty_Test#should_return_true_if_Map_is_empty",
            "org.assertj.core.api.iterable.IterableAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_fail_if_other_is_null",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThanOrEqualTo_Test#should_have_internal_effects",
            "org.assertj.core.api.double_.DoubleAssert_isGreaterThan_double_Test#should_return_this",
            "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.api.longarray.LongArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_areEqual_Test#should_return_false_if_second_object_is_null_and_first_is_not",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.abstract_.AbstractAssert_doesNotHave_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Diff_diff_File_Test#should_return_diffs_if_content_of_actual_is_shorter_than_content_of_expected",
            "org.assertj.core.api.longarray.LongArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.util.Files_linesOf_Test#should_throw_exception_when_charset_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.BDDAssertions_then_Test#then_char_array",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_areExactly_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.maps.Maps_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.intarray.IntArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_CharSequence_Test#should_pass_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_prefer_properties_over_fields",
            "org.assertj.core.api.filter.Filter_with_property_not_in_given_values_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.api.path.PathAssert_hasParentRaw_Test#should_return_this",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_fail_if_actual_is_not_uppercase",
            "org.assertj.core.api.Assertions_assertThat_with_Short_Test#should_create_Assert",
            "org.assertj.core.api.Condition_as_String_Test#should_throw_error_of_description_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isNegative_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.paths.Paths_assertHasNoParent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.data.Index_atIndex_Test#should_throw_error_if_value_is_negative",
            "org.assertj.core.api.integer_.IntegerAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.api.byte_.ByteAssert_isNotEqualTo_byte_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_throw_error_if_no_property_nor_field_with_given_name_can_be_extracted",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_empty",
            "org.assertj.core.error.ShouldContainValues_create_Test#should_create_error_message_with_multiple_values",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_pass_if_actual_is_equals_to_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_fail_if_expected_value_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.CollectionAssert_usingComparator_Test#using_custom_comparator_test",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.integers.Integers_assertNotEqual_Test#should_fail_if_integers_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end_by_comparison",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_year_is_equals_to_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.integer_.IntegerAssert_isGreaterThanOrEqualTo_int_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_but_not_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_hasSize_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.util.Files_fileNamesIn_Test#should_throw_error_if_directory_does_not_exist",
            "org.assertj.core.error.ShouldNotExist_create_Test#should_create_error_message_for_File_object",
            "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasNoCause_Test#should_fail_if_actual_has_a_cause",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_pass_if_actual_is_strictly_between_given_period",
            "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#should_create_Assert",
            "org.assertj.core.api.filter.Filter_on_differents_properties_Test#should_fail_if_elements_to_filter_do_not_have_property_used_by_filter",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Iterable",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_pass_if_actual_is_strictly_after_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_false_if_arrays_of_primitives_are_not_equal",
            "org.assertj.core.api.Assertions_assertThat_with_AssertProvider_Test#should_use_assert_provider_directly",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_fail_if_actual_is_not_in_same_month_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.classes.Classes_assertHasDeclaredFields_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_startsWithRaw_Test#should_return_this",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.iterable.IterableAssert_are_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseExactlyInstanceOf_Test#should_fail_if_cause_is_not_instance_of_expected_type",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Maps_format_Test#should_format_Map",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_false_if_one_parameter_is_not_an_array",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_pass_if_actual_is_within_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_differentiating_expected_and_actual_Test#should_create_AssertionError_with_message_differentiating_expected_and_actual_persons_even_if_a_comparator_based_comparison_strategy_is_used",
            "org.assertj.core.internal.paths.Paths_assertIsCanonical_Test#should_fail_if_actual_real_path_differs_from_actual",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_fail_if_actual_is_not_in_array",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_are_not_equal_if_Objects_are_not_equal",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.classes.Classes_assertIsNotInterface_Test#should_fail_if_actual_is_an_interface",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.conditions.Conditions_assertHas_Test#should_fail_if_Condition_is_not_met",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_not_be_equal_to_BasicErrorMessage_with_different_arguments",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldNotBeOfClassIn_Test#should_create_error_message",
            "org.assertj.core.api.float_.FloatAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_long_array",
            "org.assertj.core.internal.longarrays.LongArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_sequence_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertIsNormalized_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertEndsWith_Test#should_fail_with_PathsException_if_actual_cannot_be_resolved",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.chararray.CharArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.strings.Strings_assertEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_end",
            "org.assertj.core.util.Hexadecimals_Test#should_return_hexadecimal_representation_of_byte",
            "org.assertj.core.api.float_.FloatAssert_isEqualTo_with_offset_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.longs.Longs_assertIsNotNegative_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.float_.FloatAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_usingCustomComparator_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertStartsWithRaw_Test#should_fail_if_other_is_null",
            "org.assertj.core.description.TextDescription_toString_Test#should_return_formatted_value",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.internal.classes.Classes_assertHasFields_Test#should_pass_if_fields_are_public",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_are_not_equal_if_first_Object_is_null_and_second_is_not",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.abstract_.AbstractAssert_describedAs_with_text_description_Test#should_set_description",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.error.ShouldBeEqualWithTimePrecision_create_Test#should_create_error_message_ignoring_millisseconds",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.api.date.DateAssert_usingComparator_Test#using_custom_comparator_test",
            "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_differentiating_expected_and_actual_Test#should_create_AssertionError_with_message_differentiating_expected_and_actual_persons",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_short_version_Test#should_filter_iterable_elements_with_property_equals_to_given_value",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_haveAtLeast_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_fail_if_actual_is_not_in_same_year_as_given_date",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_pass_if_actual_contains_sequence_in_different_case_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_pass_if_big_decimals_are_equal_by_comparison_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.double_.DoubleAssert_isNaN_Test#should_return_this",
            "org.assertj.core.error.ShouldEndWithPath_create_Test#should_create_error_message",
            "org.assertj.core.api.map.MapAssert_containsEntry_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_calendar",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNegative_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertDoesNotHaveNotSameClassAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertNull_Test#should_fail_if_object_is_not_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_char",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_fail_if_actual_is_not_in_same_year_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_not_be_equal_to_Index_with_different_value",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.api.double_.DoubleAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_and_set_are_both_empty",
            "org.assertj.core.internal.conditions.Conditions_assertHas_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.util.Maps_newConcurrentHashMap_Test#should_return_empty_mutable_ConcurrentHashMap",
            "org.assertj.core.internal.objects.Objects_assertEqual_Test#should_fail_if_objects_are_not_equal",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_pass_if_actual_is_in_same_second_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.bytearray.ByteArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Array_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldHave_create_Test#should_create_error_message",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.Assertions_assertThat_with_AssertProvider_Test#should_allow_assert_provider_within_assertThat",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessage_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertNotNull_Test#should_pass_if_object_is_not_null",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.shortarray.ShortArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.internal.classes.Classes_assertContainsAnnotation_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Iterables_sizeOf_Test#should_return_zero_if_iterable_is_empty",
            "org.assertj.core.util.Sets_newLinkedHashSet_GenericArray_Test#should_return_Set_containing_all_elements_in_array",
            "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_String_Test#should_throw_nullpointerexception_if_object_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_InputStream_Test#should_create_Assert",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_contains_sequence_but_in_different_case",
            "org.assertj.core.internal.paths.Paths_assertIsRelative_Test#should_fail_if_actual_is_not_relative",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_pass_if_day_not_equal",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_pass_if_actual_contains_only_one_comparable_element",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_fail_if_files_do_not_have_equal_content",
            "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.throwables.Throwables_assertHasNoCause_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.classes.Classes_assertIsAssignableFrom_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.condition.DoesNotHave_matches_Test#should_not_match_Conditions_match",
            "org.assertj.core.util.Files_fileNamesIn_Test#should_throw_error_if_path_does_not_belong_to_a_directory",
            "org.assertj.core.util.Dates_format_with_date_time_format_Test#should_format_date_with_date_time_format",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_create_error_message_when_only_elements_order_differs_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_fail_if_expected_value_is_null",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_fail_if_actual_is_not_within_given_second",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.throwable.ThrowableAssert_hasNoCause_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isWithinDayOfMonth_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_throw_exception_if_Objects_have_not_the_same_properties",
            "org.assertj.core.api.short_.ShortAssert_isEqualTo_short_Test#should_return_this",
            "org.assertj.core.api.longarray.LongArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.api.iterable.Iterable_generics_with_varargs_Test#testWithoutGenerics",
            "org.assertj.core.api.bytearray.ByteArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.error.ShouldBeSymbolicLink_create_Test#should_create_error_message",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_method_name_not_provided",
            "org.assertj.core.api.intarray.IntArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.inputstreams.Diff_diff_InputStream_Test#should_return_diffs_if_inputstreams_do_not_have_equal_content",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_pass_if_doubles_are_equal",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_pass_if_actual_contains_given_entries_in_order",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.data.Offset_offset_with_Float_Test#should_create_Offset",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_throw_error_if_array_of_types_has_null_elements",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsNull_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.character.CharacterAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Map",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.file.FileAssert_canWrite_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isInThePast_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_given_keys_array_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[5]",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.integer_.IntegerAssert_isCloseTo_integer_Test#should_return_this",
            "org.assertj.core.api.filter.Filter_with_property_not_in_given_values_Test#should_filter_iterable_elements_with_property_not_in_given_values",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_throw_error_if_one_property_or_field_can_not_be_extracted",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveExactly_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_fail_if_actual_is_not_file",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainNull_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_fail_if_actual_is_not_subset_of_values_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.error.ShouldNotContain_create_Test#should_create_error_message",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_only_one_element_with_non_comparable_component_type",
            "org.assertj.core.condition.AnyOf_anyOf_with_Collection_Test#should_create_new_AnyOf_with_passed_Conditions",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.shorts.Shorts_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThan_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Maps_isNullOrEmpty_Test#should_return_true_if_Map_is_null",
            "org.assertj.core.api.list.ListAssert_usingFieldByFieldElementComparator_Test#should_return_this",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isEqualTo_int_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_fail_if_doubles_are_not_equal_within_offset",
            "org.assertj.core.error.ShouldHaveNoParent_create_Test#should_create_error_message_when_path_has_a_parent",
            "org.assertj.core.internal.paths.Paths_assertIsExecutable_Test#should_fail_if_actual_exists_but_is_not_executable",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.maps.Maps_assertContainsValue_Test#should_pass_if_actual_contains_given_value",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.util.Strings_append_Test#should_append_String",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtMost_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_short_version_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Condition_default_constructor_Test#should_use_class_simple_name_as_description",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isAfter_Test#should_return_this",
            "org.assertj.core.util.Sets_newHashSet_Test#should_return_new_HashSet",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNegative_Test#should_fail_since_actual_can_not_be_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is_in_hex_representation",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_fail_if_objects_are_not_equal",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_contains_one_element_of_given_iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldHaveComparableElements_create_Test#should_create_error_message",
            "org.assertj.core.internal.doubles.Doubles_assertIsCloseTo_Test#should_fail_if_expected_value_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_pass_if_path_has_same_content_as_other",
            "org.assertj.core.api.iterable.IterableAssert_haveAtMost_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_succeed_if_canonical_actual_has_expected_parent",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start_by_comparison",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_GenericArray_Test#should_return_array_if_it_is_not_null_nor_empty",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOf_Test#should_pass_if_actual_is_not_instance_of_type",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if__expected_value_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameSecondWindowAs_Test#should_pass_if_actual_is_in_same_second_window_as_given_date",
            "org.assertj.core.internal.integers.Integers_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_pass_if_actual_is_lowercase",
            "org.assertj.core.internal.strings.Strings_assertDoesNotContain_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.data.Offset_offset_with_Integer_Test#should_create_Offset",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_pass_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is_in_hex_representation",
            "org.assertj.core.api.iterable.IterableAssert_areExactly_Test#should_return_this",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_fail_if_actual_is_not_file",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_pass_if_actual_ends_with_suffix_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_fail_if_floats_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_equals_to_end_of_given_period_and_end_is_not_included_in_given_period",
            "org.assertj.core.api.Condition_describedAs_Description_Test#should_throw_error_of_description_is_null",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasAtLeastOneElementOfType_Test#should_pass_if_actual_has_one_element_of_the_expected_type",
            "org.assertj.core.util.Strings_concat_Test#should_concatenate_given_Strings",
            "org.assertj.core.api.iterable.IterableAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_equals_to_start_of_given_period_and_start_is_not_included_in_given_period",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_does_not_contain_whole_subsequence",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_other_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.files.Diff_diff_File_String_Test#should_return_empty_diff_list_if_file_and_string_have_equal_content",
            "org.assertj.core.groups.Properties_ofType_Test#should_create_a_new_Properties",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertAreNot_Test#should_fail_if_condition_is_met",
            "org.assertj.core.api.character.CharacterAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertHaveExactly_Test#should_pass_if_satisfies_exactly_times_condition",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_fail_if_doubles_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_throw_exception_when_given_name_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_null",
            "org.assertj.core.api.list.ListAssert_contains_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldNotBeInstance_create_Test#should_create_error_message",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.error.BasicErrorMessageFactory_create_Test#should_implement_toString",
            "org.assertj.core.api.float_.FloatAssert_isBetween_Floats_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_haveAtMost_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.doubles.Doubles_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertIsZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_startsWith_Test#should_return_this",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_throw_error_if_one_property_or_field_can_not_be_extracted",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_string",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_arrays_have_different_sizes",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_pass_if_actual_contains_all_given_strings",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyDigits_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeLowerCase_create_Test#should_create_error_message",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_when_field_value_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactlyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeAfterOrEqualsTo_create_Test#should_create_error_message",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.util.Dates_millisecondOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_bytes_contains_in_hexadecimal",
            "org.assertj.core.internal.StandardComparisonStrategy_isGreaterThan_Test#should_fail_if_first_parameter_is_not_comparable",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_fail_if_actual_has_no_cause",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_contains_both_partial_and_complete_sequence",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_not_be_equal_to_Object_of_different_type",
            "org.assertj.core.api.integer_.IntegerAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_some_field_values_differ_and_no_fields_are_ignored",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_given_entries_array_is_null",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_return_null_if_parameter_is_not_array",
            "org.assertj.core.internal.floats.Floats_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_pass_if_doubles_are_equal_within_offset",
            "org.assertj.core.internal.files.Files_assertCanWrite_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.api.longarray.LongArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_even_if_duplicated",
            "org.assertj.core.util.Iterables_sizeOf_Test#should_return_correct_size_for_non_collection_iterable",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.util.introspection.FieldSupport_isAllowedToReadField_Test#fieldSupport_should_be_allowed_to_read_whatever_field_when_allowedToUsePrivateFields_flag_is_true",
            "org.assertj.core.api.Assertions_assertThat_with_CharSequence_Test#should_create_Assert_with_StringBuilder",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsZero_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_usingCharset_null_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_throw_error_if_regular_expression_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.api.float_.FloatAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldEndWith_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualToContentOf_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_pass_if_actual_is_not_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_fail_if_actual_and_given_path_does_not_have_the_same_content",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test#should_return_existing_duplicates",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasAtLeastOneElementOfType_Test#should_fail_if_no_elements_in_actual_belongs_to_the_expected_type",
            "org.assertj.core.api.shortarray.ShortArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtLeast_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsSequence_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_pass_if_actual_ends_with_suffix",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.util.Maps_newHashMap_Test#should_return_empty_mutable_HashMap",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative_with_hex_representation",
            "org.assertj.core.error.ShouldMatchPattern_create_Test#should_create_error_message",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_double_in_hexadecimal",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseInstanceOf_Test#should_throw_NullPointerException_if_given_type_is_null",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_bytes_in_binary",
            "org.assertj.core.api.iterable.IterableAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainNull_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_joined_lists_when_extracting_children_array",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_fail_if_actual_is_not_in_same_hour_window_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.api.long_.LongAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsCloseTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.longarray.LongArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.map.MapAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.error.ShouldBeSame_create_Test#should_create_error_message",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.paths.Paths_assertExistsNoFollowLinks_Test#should_pass_if_actual_exists",
            "org.assertj.core.api.short_.ShortAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.charsequence.CharSequenceAssert_endsWith_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotSameAs_Test#should_be_loosely_typed2",
            "org.assertj.core.api.object.ObjectAssert_isEqualToIgnoringGivenFields_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_throw_error_if_array_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isWithinHourOfDay_Test#should_verify_assertion_with_int_arg",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_equals_to_start_of_given_period_and_start_is_included_in_given_period",
            "org.assertj.core.util.ArrayWrapperList_get_Test#should_throw_error_if_index_is_negative",
            "org.assertj.core.internal.integers.Integers_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Files_linesOf_Test#should_pass_if_unix_file_is_split_into_lines_using_charset",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_throw_error_if_regular_expression_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_with_null_elements",
            "org.assertj.core.api.byte_.ByteAssert_isNotEqualTo_byte_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints_with_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_pass_if_big_decimals_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_return_are_not_equal_if_second_Object_is_null_and_first_is_not",
            "org.assertj.core.api.boolean_.BooleanAssert_isTrue_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_containsValues_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.util.Introspection_getProperty_Test#get_descriptor_for_property",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.internal.files.Files_assertDoesNotExist_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotZero_Test#should_fail_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_actual_contains_all_given_values_but_in_different_order",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_BigDecimal_Test#should_create_Assert",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_format_doubles_and_floats",
            "org.assertj.core.api.bytearray.ByteArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtMost_Test#should_pass_if_never_satisfies_condition_",
            "org.assertj.core.internal.longs.Longs_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isNotBetween_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.paths.Paths_assertIsReadable_Test#should_fail_if_actual_exists_but_is_not_readable",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_ObjectArray_Test#should_create_Assert",
            "org.assertj.core.util.Collections_format_Test#should_return_null_if_Collection_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.JUnitSoftAssertionsSuccessTest#all_assertions_should_pass",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainValue_Test#should_success_if_value_is_null",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_fail_if_actual_is_not_in_array",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_short_Test#should_create_Assert",
            "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#should_throw_error_when_xml_string_is_null",
            "org.assertj.core.api.Condition_describedAs_Description_Test#should_set_description",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_enough_to_expected_value",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_fail_if_file_does_not_have_expected_binary_content",
            "org.assertj.core.api.short_.ShortAssert_isGreaterThan_short_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_some_elements_with_non_comparable_component_type_according_to_custom_comparison_strategy",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isEqualToIgnoringCase_Test#should_have_internal_effects",
            "org.assertj.core.api.byte_.ByteAssert_isStrictlyBetween_Bytes_Test#should_have_internal_effects",
            "org.assertj.core.condition.Join_constructor_with_Collection_Test#should_throw_error_if_Collection_is_null",
            "org.assertj.core.api.list.ListAssert_usingElementComparatorIgnoringFields_Test#should_return_this",
            "org.assertj.core.api.JUnitBDDSoftAssertionsFailureTest#should_report_all_errors",
            "org.assertj.core.internal.lists.Lists_assertIsSorted_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.api.short_.ShortAssert_isNotNegative_Test#should_have_internal_effects",
            "org.assertj.core.api.integer_.IntegerAssert_isEqualTo_int_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertStartsWithRaw_Test#should_succeed_if_actual_starts_with_other",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_not_strictly_after_given_date",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_fail_if_actual_does_not_contain_entries",
            "org.assertj.core.api.iterable.IterableAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#succesful_isIn_assertion_using_field_by_field_element_comparator",
            "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test#should_fail_if_actual_does_not_contain_key",
            "org.assertj.core.internal.conditions.Conditions_assertIsNotNull_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_fail_if_shorts_are_equal",
            "org.assertj.core.api.abstract_.AbstractAssert_hasToString_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsCloseTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_double_Test#should_create_Assert",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_array_Test#should_pass_if_actual_is_in_array_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_without_JUnit_Test#should_create_AssertionError_if_error_is_thrown_when_creating_ComparisonFailure",
            "org.assertj.core.internal.longs.Longs_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_array_Test#should_return_parameter",
            "org.assertj.core.error.ShouldBeCanonicalPath_create_Test#should_create_error_message",
            "org.assertj.core.api.throwable.ThrowableAssert_hasMessageContaining_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_fail_if_actual_has_elements_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.date.DateAssert_isInTheFuture_Test#should_verify_that_actual_is_in_the_past",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_other_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotInstanceOfAny_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.inputstreams.Diff_diff_InputStream_Test#should_return_diffs_if_content_of_actual_is_longer_than_content_of_expected",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_pass_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.api.abstract_.AbstractAssert_as_with_text_description_Test#should_set_description",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_comparable_element_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_comparator_is_null",
            "org.assertj.core.api.charsequence.CharSequenceAssert_matches_Pattern_Test#should_return_this",
            "org.assertj.core.api.iterable.IterableAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test#should_throw_exception_when_extracting_from_null",
            "org.assertj.core.error.ShouldBeAssignableFrom_create_Test#should_create_error_message",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_pass_if_actual_is_within_given_second_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_throw_error_if_expected_is_not_file",
            "org.assertj.core.api.float_.FloatAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.integer_.IntegerAssert_isNotEqualTo_int_Test#should_have_internal_effects",
            "org.assertj.core.api.byte_.ByteAssert_isEqualTo_byte_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_fail_if_actual_is_in_Iterable",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.api.date.DateAssert_isWithinMinute_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_fail_if_floats_are_not_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.date.DateAssert_isAfter_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_all_iterable_values_according_to_custom_comparison_strategy",
            "org.assertj.core.condition.Join_constructor_with_Collection_Test#should_throw_error_if_Collection_contains_nulls",
            "org.assertj.core.api.shortarray.ShortArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.api.Assertions_assertThat_with_IntArray_Test#should_create_Assert",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_throw_error_if_syntax_of_regular_expression_is_invalid",
            "org.assertj.core.error.ShouldBeBetween_create_Test#should_create_error_message_with_period_lower_boundary_included",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[0]",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_fail_since_actual_is_not_zero",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.api.byte_.ByteAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.filter.Filter_on_differents_properties_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.condition.AllOf_allOf_with_Collection_Test#should_create_new_AllOf_with_passed_Conditions",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.iterable.IterableAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Array_Test#should_return_this",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_fail_if_bytes_are_not_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsExactlyInstanceOf_Test#should_pass_if_actual_is_exactly_instance_of_type",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.error.ShouldContainExactly_create_Test#should_not_display_unexpected_elements_when_there_are_none",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_Comparable_Test#should_create_Assert",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.inputstreams.BinaryDiff_diff_InputStream_Test#should_return_no_diff_if_inputstreams_have_equal_content",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_boolean_array",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_not_between_given_period",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_actual_contains_first_elements_of_subsequence_but_not_whole_subsequence",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.util.Objects_namesOf_Test#should_return_empty_array_if_type_array_is_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertNotEqual_Test#should_fail_if_floats_are_equal",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy2_in_hex_representation",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_fail_if_actual_is_not_in_same_minute_as_given_date",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsIgnoringCase_CharSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_pass_if_actual_is_within_given_year",
            "org.assertj.core.api.Condition_as_Description_Test#should_return_same_condition",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.api.map.MapAssert_doesNotContainKey_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveExactly_Test#should_pass_if_satisfies_exactly_times_condition",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy_in_hex_representation",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.api.double_.DoubleAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertMatches_Pattern_Test#should_fail_if_actual_does_not_match_Pattern",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_actual_has_the_same_elements_as_set",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.api.byte_.ByteAssert_isNegative_Test#should_return_this",
            "org.assertj.core.util.Dates_secondOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_throw_PathsException_if_other_cannot_be_resolved",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_Character_in_hexadecimal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_String_String_Test#should_throw_nullpointerexception_if_string_is_null",
            "org.assertj.core.api.bytearray.ByteArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_start",
            "org.assertj.core.api.Assertions_assertThat_with_Comparable_Test#should_pass_actual",
            "org.assertj.core.internal.files.BinaryDiff_diff_File_byteArray_Test#should_return_diff_if_actual_is_shorter",
            "org.assertj.core.api.DescriptionValidator_notNull_Test#should_return_same_description",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_pass_if_actual_is_in_same_minute_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.path.PathAssert_hasNoParent_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_fail_if_actual_does_not_match_regular_expression",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtLeast_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.maps.Maps_assertHasSameSizeAs_with_Iterable_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_actual_has_no_parent",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasOnlyElementsOfType_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtLeast_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_return_empty_List_if_given_Iterable_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.description.TextDescription_constructor_Test#should_set_value",
            "org.assertj.core.internal.floats.Floats_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.internal.floats.Floats_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy2",
            "org.assertj.core.api.AutoCloseableSoftAssertionsTest#should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.long_.LongAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqualByComparison_Test#should_fail_if_big_decimals_are_not_equal_by_comparison",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContainNull_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_throw_error_if_syntax_of_regular_expression_is_invalid_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_fail_if_actual_does_not_contain_all_given_strings_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertIsNotZero_Test#should_fail_since_actual_is_zero",
            "org.assertj.core.api.Assertions_assertThat_with_Iterable_Test#should_pass_actual",
            "org.assertj.core.api.map.MapAssert_containsKey_Test#should_return_this",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_fail_meaningfully_if_object_instance_not_provided",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_shorts_in_hexadecimal",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Lists_newArrayList_Test#should_return_empty_List",
            "org.assertj.core.api.Assertions_assertThat_with_File_Test#should_create_Assert",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Preconditions_checkNotNullOrEmpty_GenericArray_Test#should_throw_NullPointerException_if_array_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.util.Maps_format_Test#should_return_empty_braces_if_Map_is_empty",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_isGreaterThanOrEqualTo_double_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_fail_if_big_decimals_are_not_equal",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test#verify_that_isGreaterThan_delegates_to_compare_method",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_some_not_mutually_comparable_elements",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.condition.Join_constructor_with_Collection_Test#should_create_new_Join_with_passed_Conditions",
            "org.assertj.core.util.ArrayWrapperList_get_Test#should_throw_error_if_index_is_equal_to_size",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.api.abstract_.AbstractAssert_overridingErrorMessage_Test#should_fail_with_overridden_error_message",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldExist_create_Test#should_create_error_message_for_Path_not_following_symbolic_links",
            "org.assertj.core.api.iterable.IterableAssert_hasOnlyElementsOfType_Test#should_pass_if_actual_has_one_element_of_the_expected_type",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_throw_NullPointerException_if_given_type_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_fail_if_cause_is_not_exactly_instance_of_expected_type",
            "org.assertj.core.util.Collections_isNullOrEmpty_Test#should_return_false_if_Collection_has_elements",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Test#should_fail_if_actual_is_not_null_and_expected_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.short_.ShortAssert_isNotEqualTo_short_Test#should_have_internal_effects",
            "org.assertj.core.api.longarray.LongArrayAssert_hasSize_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_all_given_values",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotSameAs_Test#should_return_this",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_return_false_if_all_but_ignored_fields_are_not_equal",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_fail_if_cause_has_different_type_and_message_to_expected_cause",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_throw_error_if_start_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_actual_contains_given_values_exactly_but_in_different_order",
            "org.assertj.core.description.TextDescription_value_Test#should_return_value",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds",
            "org.assertj.core.api.longarray.LongArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_CharSequence_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_throw_error_if_subsequence_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsOtherDate_Test#should_throw_exception_when_date_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertDoNotHave_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContainAnyElementsOf_Test#should_pass_if_actual_does_not_contain_any_elements_of_given_iterable_even_if_duplicated",
            "org.assertj.core.error.ShouldBeEqual_newAssertionError_without_JUnit_Test#should_create_AssertionError_if_created_ComparisonFailure_is_null",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_has_some_not_mutually_comparable_elements_according_to_given_comparator",
            "org.assertj.core.internal.integers.Integers_assertEqual_Test#should_pass_if_integers_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_stringStartsWith_Test#should_pass",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_actual_contains_given_entries_in_disorder",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.error.ShouldBeEqualWithTimePrecision_create_Test#should_create_error_message_ignoring_miinutes",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_fail_if_actual_is_not_within_given_hour_of_day_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Iterables_toArray_Test#should_return_null_when_given_iterable_is_null",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_fail_if_cause_is_not_instance_of_expected_type",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_pass_if_actual_is_within_given_minute",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.error.ShouldHaveSameContent_create_Test#should_create_error_message_file_even_if_content_contains_format_specifier",
            "org.assertj.core.api.file.FileAssert_isAbsolute_Test#should_return_this",
            "org.assertj.core.api.long_.LongAssert_isStrictlyBetween_Longs_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_pass_when_fields_are_equal",
            "org.assertj.core.error.ShouldContainsOnlyOnce_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.character.CharacterAssert_isGreaterThan_char_Test#should_have_internal_effects",
            "org.assertj.core.api.float_.FloatAssert_isNotEqualTo_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_fail_if_actual_is_not_lowercase_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.api.byte_.ByteAssert_isGreaterThanOrEqualTo_byte_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.fail.Fail_fest_elements_stack_trace_filtering_Test#fest_elements_should_be_kept_in_assertion_error_stack_trace",
            "org.assertj.core.internal.maps.Maps_assertContainsValue_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.floatarray.FloatArrayAssert_containsOnlyOnce_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.maps.Maps_assertContains_Test#should_throw_error_if_entry_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyDigits_Test#should_return_this",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_contains_only_one_comparable_element",
            "org.assertj.core.internal.comparables.Comparables_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_date",
            "org.assertj.core.internal.objects.Objects_assertIsExactlyInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.object.ObjectAssert_isEqualToIgnoringGivenFields_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_areAtMost_Test#should_return_this",
            "org.assertj.core.api.short_.ShortAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.util.Arrays_format_Test#should_format_long_array",
            "org.assertj.core.api.float_.FloatAssert_isLessThan_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_Map",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsKeys_Test#should_fail_if_actual_does_not_contain_keys",
            "org.assertj.core.internal.intarrays.IntArrays_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteWindowAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.api.iterable.IterableAssert_usingElementComparatorIgnoringFields_Test#should_return_this",
            "org.assertj.core.api.fail.Fail_fail_because_exception_should_have_thrown_Test#should_include_message_built_with_given_throwable_name",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_between_given_period",
            "org.assertj.core.internal.shorts.Shorts_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.error.ShouldHaveTime_create_Test#should_create_error_message",
            "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#should_format_xml_string_without_xml_declaration_prettily",
            "org.assertj.core.api.list.ListAssert_is_at_Index_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.error.ElementsShouldBe_create_Test#should_create_error_message",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.paths.Paths_assertNotExists_Test#should_pass_if_actual_does_not_exists",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasAtLeastOneElementOfType_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_usingCharset_null_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence",
            "org.assertj.core.util.Files_contentOf_Test#should_load_file_using_charset",
            "org.assertj.core.api.Tuple_Test#should_create_tuple",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_boolean",
            "org.assertj.core.api.character.CharacterAssert_isGreaterThan_char_Test#should_return_this",
            "org.assertj.core.api.short_.ShortAssert_isNegative_Test#should_return_this",
            "org.assertj.core.api.object.ObjectAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsNotOfClassIn_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertHasSameClassAs_Test#should_pass_if_actual_not_has_same_type_as_other",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtMost_Test#should_fail_if_condition_is_not_met_much",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.long_.LongAssert_isGreaterThanOrEqualTo_long_Test#should_return_this",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_throw_error_if_field_is_not_public_and_allowExtractingPrivateFields_set_to_false",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.util.Dates_parse_date_time_Test#should_return_null_if_string_to_parse_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_pass_when_selected_fields_are_equal",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertIsDirectory_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_is_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_not_between_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertExists_Test#should_fail_if_actual_does_not_exist",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_throw_error_if_Iterable_is_empty",
            "org.assertj.core.error.ShouldBeAbsolutePath_create_Test#should_create_error_message_for_File_Object",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_contains_both_partial_and_complete_subsequence",
            "org.assertj.core.internal.integers.Integers_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_pass_if_doubles_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtLeast_Test#should_pass_if_satisfies_at_least_times_condition",
            "org.assertj.core.internal.strings.Strings_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.double_.DoubleAssert_isLessThanOrEqualTo_double_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.error.ShouldBeAbsolutePath_create_Test#should_create_error_message_for_Path_object",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourWindowAs_Test#should_fail_if_time_difference_is_exactly_one_hour",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldNotBeIn_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.file.FileAssert_usingCharset_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_actual_does_not_contain_whole_subsequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_fail_if_actual_path_does_not_exist",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.api.date.DateAssert_isBefore_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.files.Files_assertIsAbsolute_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_pass_if_actual_is_strictly_before_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeOrEqualsTo_Test#should_pass_if_actual_is_equals_to_given_date",
            "org.assertj.core.internal.maps.Maps_assertContainsOnlyKeys_Test#should_fail_if_actual_does_not_contains_every_expected_entries_and_contains_unexpected_one",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_equals_to_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.DescriptionValidator_notNull_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.api.unevencomparable.AbstractUnevenComparableAssert_isEqualToByComparingTo_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertExistsNoFollowLinks_Test#should_fail_if_actual_does_not_exist",
            "org.assertj.core.internal.doubles.Doubles_assertIsNegative_Test#should_fail_since_actual_is_not_negative_according_to_absolute_value_comparison_strategy2",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.iterable.IterableAssert_extractingResultOf_Test#should_allow_assertions_on_method_invocation_result_extracted_from_given_iterable_with_enforcing_return_type",
            "org.assertj.core.api.comparable.AbstractComparableAssert_canCallObjectAssertMethod_Test#should_return_this",
            "org.assertj.core.util.Lists_newArrayList_withVarArgs_Test#should_return_null_if_array_is_null",
            "org.assertj.core.api.date.DateAssert_isWithinSecond_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveAtLeastOneElementOfType_create_Test#should_create_error_message_for_array",
            "org.assertj.core.api.iterable.IterableAssert_usingFieldByFieldElementComparator_Test#should_return_this",
            "org.assertj.core.error.ShouldNotBeEqual_create_Test#should_create_error_message",
            "org.assertj.core.api.path.PathAssert_endsWithRaw_Test#should_return_this",
            "org.assertj.core.internal.files.Files_assertHasName_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_fail_if_characters_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Assertions_assertThat_with_Character_Test#should_create_Assert",
            "org.assertj.core.api.path.PathAssert_hasNoParent_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.util.Dates_dayOfWeekOf_Test#should_return_day_of_month_of_date",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainValue_Test#should_fail_if_actual_does_not_contain_value",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_pass_if_actual_is_in_the_future_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_pass_if_files_have_equal_content",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_pass_if_actual_is_today",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.paths.Paths_assertIsExecutable_Test#should_succeed_if_actual_exist_and_is_executable",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.error.ShouldBeBeforeOrEqualsTo_create_Test#should_create_error_message",
            "org.assertj.core.internal.shorts.Shorts_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_fail_if_actual_is_not_in_same_month_as_given_date",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldExist_create_Test#should_create_error_message_for_File",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_pass_if_actual_file_has_the_given_file_name",
            "org.assertj.core.error.ShouldBeEqualIgnoringCase_create_Test#should_create_error_message",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_fail_if_actual_matches_regular_expression_whatever_custom_comparison_strategy_is",
            "org.assertj.core.condition.Not_matches_Test#should_match_if_condition_does_not_match",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.byte_.ByteAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_fail_if_actual_is_not_file",
            "org.assertj.core.internal.characters.Characters_assertLessThan_Test#should_fail_if_actual_is_null_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.files.Files_assertHasContent_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.data.Index_toString_Test#should_implement_toString",
            "org.assertj.core.internal.conditions.Conditions_assertIsNot_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.IgnoringFieldsComparator_toString_Test#should_return_description_of_IgnoringFieldsComparator",
            "org.assertj.core.api.map.MapAssert_doesNotContain_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_pass_if_doubles_are_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_linesOf_Test#should_read_lines_of_file_with_UTF8_charset",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_pass_when_some_other_field_is_null_but_not_actual",
            "org.assertj.core.error.ShouldContainKeys_create_Test#should_create_error_message",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_when_asked_to_ignore_non_existent_fields",
            "org.assertj.core.api.file.FileAssert_doesNotExist_Test#should_return_this",
            "org.assertj.core.api.bytearray.ByteArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.api.double_.DoubleAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeBetween_create_Test#should_create_error_message_with_period_upper_boundary_included",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_sequence_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertEmpty_Test#should_fail_if_actual_is_not_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Arrays_isNullOrEmpty_Test#should_return_false_if_array_has_elements",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_String_in_binary",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isSubsetOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.api.file.FileAssert_hasContent_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreExactly_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.api.intarray.IntArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_joined_lists_when_extracting_children_array",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Preconditions_checkNotNull_GenericObject_Test#should_return_object_if_it_is_not_null_nor_empty",
            "org.assertj.core.internal.longs.Longs_assertIsNegative_Test#should_succeed_since_actual_is_negative",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.BDDAssertions_then_Test#then_long",
            "org.assertj.core.api.chararray.CharArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.api.iterable.IterableAssert_haveAtLeastOne_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsWithinYear_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.error.ShouldNotContainKeys_create_Test#should_create_error_message_with_multiple_keys",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.api.Assertions_assertThat_with_DoubleArray_Test#should_create_Assert",
            "org.assertj.core.util.Strings_join_Test#should_join_using_iterable_delimeter_and_escape",
            "org.assertj.core.api.longarray.LongArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test#should_fail_since_actual_is_positive",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_pass_if_index_is_out_of_bounds",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_hasSize_Test#should_have_internal_effects",
            "org.assertj.core.util.Iterables_isNullOrEmpty_Test#should_return_true_if_Iterable_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_equals_to_end_of_given_period_and_end_is_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Map_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_and_subsequence_are_equal",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Long",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.BDDAssertions_then_Test#should_build_ThrowableAssert_with_throwable_thrown",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.file.FileAssert_hasExtension_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_pass_if_path_has_expected_text_content",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_sequence",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainString_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAreAtMost_Test#should_pass_if_all_satisfies_condition_",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.path.PathAssert_usingCharset_default_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#should_allow_assertions_on_multiple_extracted_values_from_given_iterable",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_comparable_element",
            "org.assertj.core.error.BasicErrorMessageFactory_toString_Test#should_implement_toString",
            "org.assertj.core.error.ShouldBeRelativePath_create_Test#should_create_error_message_for_File",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.util.Dates_format_with_date_time_with_ms_format_Test#should_return_null_if_date_is_null",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Successful_Test#should_pass_if_both_Strings_are_equal_ignoring_whitespace[3]",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Files_newTemporaryFile_Test#should_create_new_temporary_file",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_fail_if_files_do_not_have_equal_content",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.condition.AllOf_matches_Test#should_match_if_all_Condition_match",
            "org.assertj.core.api.float_.FloatAssert_isNotPositive_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_throw_error_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_pass_if_actual_is_strictly_after_given_date",
            "org.assertj.core.internal.files.Files_assertCanRead_Test#should_fail_if_can_not_read",
            "org.assertj.core.api.long_.LongAssert_isBetween_Longs_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.float_.FloatAssert_isNotZero_Test#should_return_this",
            "org.assertj.core.api.longarray.LongArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.abstract_.AbstractAssert_has_Test#should_have_internal_effects",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.extractor.ByNameMultipleExtractorTest#should_throw_exception_when_no_object_is_given",
            "org.assertj.core.internal.files.Files_assertHasBinaryContent_Test#should_pass_if_file_has_expected_binary_content",
            "org.assertj.core.internal.iterables.Iterables_assertEmpty_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveExactly_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.strings.Strings_assertContainsIgnoringCase_Test#should_fail_if_actual_does_not_contain_sequence",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_fail_if_actual_does_not_match_regular_expression_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.throwables.Throwables_assertHasRootCauseExactlyInstanceOf_Test#should_fail_if_actual_has_no_cause",
            "org.assertj.core.internal.paths.Paths_assertHasFileName_Test#should_pass_if_actual_symbolic_link_has_the_given_file_name",
            "org.assertj.core.internal.bytes.Bytes_assertNotEqual_Test#should_fail_if_bytes_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveNot_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.api.bytearray.ByteArrayAssert_containsSequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.integers.Integers_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.api.file.FileAssert_usingCharset_default_Test#should_return_this",
            "org.assertj.core.internal.StandardComparisonStrategy_stringEndsWith_Test#should_pass",
            "org.assertj.core.internal.floats.Floats_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is_in_hex_representation",
            "org.assertj.core.util.Sets_newLinkedHashSet_Test#should_return_new_HashSet",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.api.intarray.IntArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.files.Files_assertSameContentAs_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.error.ShouldBeEqualIgnoringGivenFields_create_Test#should_create_error_message_with_all_fields_differences",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_pass_if_both_actual_and_values_have_duplicates_but_all_elements_are_in_values",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_containsOnlyElementsOf_Test#should_return_this",
            "org.assertj.core.util.Iterables_isNullOrEmpty_Test#should_return_true_if_Iterable_is_empty",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_is_not_strictly_before_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsStrictlyBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isInstanceOfAny_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsNotExactlyInstanceOf_Test#should_pass_if_actual_is_not_exactly_instance_of_type",
            "org.assertj.core.api.map.MapAssert_doesNotContainKey_Test#should_have_internal_effects",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_return_false_if_Objects_are_not_equal",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_is_not_strictly_after_given_year_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSameSizeAs_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_throw_error_if_offset_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.util.Dates_format_with_date_time_format_Test#should_return_null_if_date_is_null",
            "org.assertj.core.api.comparable.AbstractComparableAssert_canCallObjectAssertMethod_Test#should_have_internal_effects",
            "org.assertj.core.data.Offset_equals_hashCode_Test#should_not_be_equal_to_Offset_with_different_value",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doesNotContainAnyElementsOf_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsAbsolute_Test#should_pass_if_actual_is_absolute",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_Test#should_allow_assertions_on_empty_result_lists",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index",
            "org.assertj.core.api.classes.ClassAssert_isAnnotation_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_pass_if_floats_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.short_.ShortAssert_isZero_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_pass_if_big_decimals_are_not_equal",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_fail_if_characters_are_not_equal",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertAreExactly_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_return_are_not_equal_if_first_Object_is_null_and_second_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertDoNotHave_Test#should_fail_if_condition_is_met",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleans.Booleans_assertNotEqual_Test#should_fail_if_bytes_are_equal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test#should_succeed_since_actual_positive_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_fail_if_second_float_is_null_but_not_the_first",
            "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test#should_return_this",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMinuteAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_Iterable_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_fail_if_second_double_is_null_but_not_the_first_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.iterable.IterableAssert_isNullOrEmpty_Test#should_verify_actual_is_null_or_empty",
            "org.assertj.core.internal.longs.Longs_assertIsPositive_Test#should_succeed_since_actual_is_positive",
            "org.assertj.core.util.ArrayWrapperList_wrap_Test#should_return_null_if_array_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsNegative_Test#should_fail_since_actual_can_not_be_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_fail_if_actual_is_equals_to_start_of_given_period_and_start_is_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.floatarray.FloatArrayAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.comparable.GenericComparableAssert_isLessThan_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSize_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotIn_with_vararg_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasSameSizeAs_with_Arrays_Test#should_pass_if_actual_object_array_has_same_size_as_other_primitive_array",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_doNothave_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_have_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_throw_error_if_array_of_types_is_null",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_empty_array_fields_is_given",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.byte_.ByteAssert_isPositive_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.api.path.PathAssert_startsWith_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates",
            "org.assertj.core.api.list.ListAssert_usingElementComparatorOnFields_Test#should_have_internal_effects",
            "org.assertj.core.internal.longs.Longs_assertIsNotPositive_Test#should_fail_since_actual_can_be_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInSameMonthAs_Test#should_pass_if_actual_is_in_same_month_as_given_date",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_with_comparable_component_type_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_day_not_equal",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_pass_if_longs_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.OnFieldsComparator_creation_Test#should_fail_if_some_fields_are_null",
            "org.assertj.core.api.intarray.IntArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_throw_error_if_Iterable_is_null",
            "org.assertj.core.internal.characters.Characters_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isWithinHourOfDay_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeLess_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_pass_if_actual_starts_with_prefix_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNullOrEmpty_Test#should_pass_if_array_is_empty",
            "org.assertj.core.util.Closeables_closeQuietly_Test#should_ignore_null_Closeables",
            "org.assertj.core.util.Lists_newArrayList_withIterable_Test#should_return_null_if_iterable_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.fail.Fail_fest_elements_stack_trace_filtering_Test#fest_elements_should_be_removed_from_assertion_error_stack_trace",
            "org.assertj.core.api.longarray.LongArrayAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.api.map.MapAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertHasNoParentRaw_Test#should_fail_if_actual_has_parent",
            "org.assertj.core.api.Condition_constructor_with_description_Test#should_throw_error_if_description_is_null",
            "org.assertj.core.api.longarray.LongArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.internal.objects.Objects_assertHasSameClassAs_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.boolean_.BooleanAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.list.ListAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_fail_if_both_Strings_are_not_equal_regardless_of_case",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.iterable.IterableAssert_extractingResultOf_Test#should_throw_error_if_no_method_with_given_name_can_be_extracted",
            "org.assertj.core.internal.paths.Paths_assertNotExists_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_throw_error_if_regular_expression_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_extract_field_values_even_if_property_exist",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_fail_if_actual_does_not_contain_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.chararray.CharArrayAssert_containsOnly_Test#should_return_this",
            "org.assertj.core.api.Assertions_assertThat_with_ShortArray_Test#should_create_Assert",
            "org.assertj.core.api.double_.DoubleAssert_isNotNaN_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.api.filter.Filter_with_property_in_given_values_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.booleans.Booleans_assertNotEqual_Test#should_pass_if_bytes_are_not_equal",
            "org.assertj.core.internal.objects.Objects_assertDoesNotHaveNotSameClassAs_Test#should_fail_if_actual_has_same_type_as_other",
            "org.assertj.core.api.integer_.IntegerAssert_isStrictlyBetween_Integers_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.api.list.ListAssert_is_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_signed_byte_in_hexadecimal",
            "org.assertj.core.condition.AnyOf_matches_Test#should_match_if_at_least_one_Condition_matches",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_null_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertNullOrEmpty_Test#should_fail_if_actual_has_elements_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.api.map.MapAssert_doesNotContainKeys_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_more_than_once",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_true_if_arrays_of_Objects_are_equal",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isLessThan_Test#should_have_internal_effects",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_doesNotContain_at_Index_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.long_.LongAssert_isZero_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.inputstreams.Diff_diff_InputStream_Test#should_return_empty_diff_list_if_inputstreams_have_equal_content",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_fail_if_actual_is_in_Iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Object_array",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isCloseTo_Test#should_return_this",
            "org.assertj.core.util.Collections_isNullOrEmpty_Test#should_return_true_if_Collection_is_empty",
            "org.assertj.core.error.ShouldBeEqualIgnoringGivenFields_create_Test#should_create_error_message_with_all_fields_differences_without_ignored_fields",
            "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.dates.Dates_assertIsInSameDayAs_Test#should_fail_if_actual_is_not_in_same_day_as_given_date_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.internal.files.Files_assertIsRelative_Test#should_pass_if_actual_is_relative_path",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_pass_if_actual_is_strictly_after_given_year",
            "org.assertj.core.api.map.MapAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_suffix",
            "org.assertj.core.internal.objects.Objects_assertIsNotIn_with_Iterable_Test#should_throw_error_if_Iterable_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeRelativePath_create_Test#should_create_error_message_for_Path",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Iterator",
            "org.assertj.core.api.path.PathAssert_endsWithRaw_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_empty_result_lists",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.api.iterable.IterableAssert_haveExactly_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_pass_if_actual_has_same_size_as_other_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_contains_duplicates",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isInSameMinuteAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.error.ShouldContainSequenceString_create_Test#should_create_error_message",
            "org.assertj.core.data.Offset_toString_Test#should_implement_toString",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.character.CharacterAssert_isUpperCase_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsOnly_Test#should_pass_if_actual_contains_only_expected_entries",
            "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.chararrays.CharArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.api.charsequence.CharSequenceAssert_contains_CharSequence_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_with_offset_Test#should_fail_if_doubles_are_not_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_containsOnly_Test#should_have_internal_effects",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_fail_if_actual_and_expected_entries_have_different_size",
            "org.assertj.core.internal.paths.Paths_assertIsRegularFile_Test#should_succeed_if_actual_is_an_existing_regular_file",
            "org.assertj.core.api.map.MapAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Arrays_isNullOrEmpty_Test#should_return_true_if_array_is_null",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_pass_if_floats_are_equal_within_offset",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_pass_if_actual_contains_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.paths.Paths_assertIsWritable_Test#should_fail_if_actual_exists_but_is_not_writable",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.object.ObjectAssert_usingComparator_Test#should_return_this",
            "org.assertj.core.util.Throwables_removeAssertJElementFromStackTrace_Test#should_add_stack_trace_of_current_thread",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_fail_if_value_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNegative_Test#should_succeed_since_actual_is_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.internal.bytes.Bytes_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_throw_exception_when_given_name_is_empty",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringNullFields_Test#should_pass_when_fields_are_equal",
            "org.assertj.core.internal.iterables.Iterables_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.longarrays.LongArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.lists.Lists_assertDoesNotContain_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_only_more_than_once",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#use_custom_date_formats_first_then_defaults_to_parse_a_date",
            "org.assertj.core.api.floatarray.FloatArrayAssert_contains_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsNull_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.Assertions_assertThat_with_Boolean_Test#should_pass_actual",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertHasSize_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.date.DateAssert_isInSameSecondAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.IgnoringFieldsComparator_compareTo_Test#should_return_are_not_equal_if_first_Object_is_null_and_second_is_not",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_AssertDelegateTarget_Test#should_allow_wrapping_assertion_method_within_assertThat",
            "org.assertj.core.api.Condition_as_String_Test#should_return_same_condition",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isEmpty_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_expected_parent_cannot_be_canonicalized",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_isNotEmpty_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfMonth_Test#should_pass_if_actual_is_within_given_day_of_month",
            "org.assertj.core.api.array.AbstractEnumerableAssert_hasSameSizeAs_with_Array_Test#should_pass_if_actual_object_array_has_same_size_as_other_object_array",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_maintain_equals_and_hashCode_contract",
            "org.assertj.core.error.ShouldExist_create_Test#should_create_error_message_for_Path_following_symbolic_links",
            "org.assertj.core.util.Arrays_format_Test#should_format_byte_array",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.short_.ShortAssert_isLessThanOrEqualTo_short_Test#should_have_internal_effects",
            "org.assertj.core.api.SoftAssertionsTest#should_pass_when_using_flat_extracting",
            "org.assertj.core.internal.longs.Longs_assertNotEqual_Test#should_fail_if_longs_are_equal",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Date",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.StandardComparisonStrategy_isLessThan_Test#should_pass",
            "org.assertj.core.error.ShouldContainOnly_create_Test#should_not_display_unexpected_elements_when_there_are_none",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_long_Test#should_pass_actual",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_fail_if_actual_is_not_within_given_month_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.booleans.Booleans_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsNotZero_Test#should_succeed_since_actual_is_not_zero",
            "org.assertj.core.internal.longarrays.LongArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.integer_.IntegerAssert_isPositive_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertIsPositive_Test#should_fail_since_actual_is_not_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated",
            "org.assertj.core.api.comparable.GenericComparableAssert_isLessThanOrEqualTo_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.iterable.IterableAssert_doesNotContainAnyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_usingCharset_String_Test#should_have_internal_effects",
            "org.assertj.core.error.BasicErrorMessageFactory_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.api.byte_.ByteAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isEqualTo_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.api.floatarray.FloatArrayAssert_doesNotContain_at_Index_Test#should_have_internal_effects",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints",
            "org.assertj.core.internal.integers.Integers_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_usingComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.longs.Longs_assertEqual_Test#should_fail_if_longs_are_not_equal",
            "org.assertj.core.api.shortarray.ShortArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.objects.Objects_assertNull_Test#should_pass_if_object_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfterOrEqualsTo_Test#should_fail_if_actual_is_not_strictly_after_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.objects.Objects_assertIsIn_with_Iterable_Test#should_pass_if_actual_is_in_Iterable",
            "org.assertj.core.api.file.FileAssert_hasParentWithStringParameter_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsWithinDayOfWeek_Test#should_pass_if_actual_is_within_given_day_of_week",
            "org.assertj.core.util.introspection.MethodSupport_methodResultFor_Test#should_invoke_methods_from_superclass",
            "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test#should_verify_assertion_with_date_arg_string_with_default_format",
            "org.assertj.core.internal.files.Diff_diff_File_Test#should_return_empty_diff_list_if_files_have_equal_content",
            "org.assertj.core.error.ShouldNotExist_create_Test#should_create_error_message_for_Path_object",
            "org.assertj.core.description.EmptyTextDescription_emptyText_Test#should_have_empty_text_as_value",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.charsequence.CharSequenceAssert_isXmlEqualTo_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.characters.Characters_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.doubles.Doubles_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.internal.dates.Dates_assertIsInSameYearAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.error.ShouldBeSorted_create_Test#should_fail_if_object_parameter_is_not_an_array",
            "org.assertj.core.api.Tuple_Test#should_create_empty_tuple",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.filter.Filter_with_property_in_given_values_Test#should_filter_iterable_elements_with_property_in_given_values",
            "org.assertj.core.internal.iterables.Iterables_assertIsSubsetOf_Test#should_pass_if_actual_contains_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.comparables.Comparables_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.files.Files_assertEqualContent_Test#should_throw_error_if_expected_is_null",
            "org.assertj.core.api.iterable.IterableAssert_haveAtLeast_Test#should_return_this",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.filter.Filter_with_property_not_equals_to_given_value_Test#should_filter_iterable_elements_with_property_not_equals_to_given_value",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.date.DateAssert_isBetween_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_pass_if_both_Strings_are_XML_equals_case_insensitively",
            "org.assertj.core.api.list.ListAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.internal.bytes.Bytes_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_greater_than_other",
            "org.assertj.core.api.Assertions_assertThat_with_Integer_Test#should_create_Assert",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.paths.Paths_assertHasSameContentAs_Test#should_throw_error_wrapping_catched_IOException",
            "org.assertj.core.api.path.PathAssert_usingCharset_Test#should_have_internal_effects",
            "org.assertj.core.internal.dates.Dates_assertIsEqualWithPrecision_Test#should_fail_if_hour_fields_differ_but_are_equal_when_am_pm_not_taken_into_account",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.condition.Join_constructor_with_array_Test#should_create_new_Join_with_passed_Conditions",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_fail_if_big_decimals_are_equal_by_comparison",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.api.byte_.ByteAssert_isLessThanOrEqualTo_long_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.paths.Paths_assertExists_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertIsNotNegative_Test#should_fail_since_actual_is_negative",
            "org.assertj.core.internal.lists.List_assertIs_Test#should_fail_if_actual_does_not_satisfy_condition_at_index",
            "org.assertj.core.internal.iterables.Iterables_assertAre_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.util.Flushables_flush_Test#should_ignore_null_Flushables",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.internal.floats.Floats_assertIsNaN_Test#should_succeed_since_actual_is_equal_to_NaN_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.byte_.ByteAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNullOrEmpty_Test#should_fail_if_array_is_not_null_and_is_not_empty",
            "org.assertj.core.api.Condition_description_Test#should_return_description",
            "org.assertj.core.util.Iterables_isNullOrEmpty_Test#should_return_true_if_Collection_is_empty",
            "org.assertj.core.internal.doubles.Doubles_assertIsBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.internal.characters.Characters_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_pass_if_objects_are_not_equal",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSubsetOf_Test#should_fail_if_actual_is_not_subset_of_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.api.charsequence.CharSequenceAssert_doesNotMatch_CharSequence_Test#should_have_internal_effects",
            "org.assertj.core.api.file.FileAssert_canRead_Test#should_have_internal_effects",
            "org.assertj.core.internal.strings.Strings_assertHasSameSizeAs_with_Array_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.internal.shorts.Shorts_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Dates_timeDifference_Test#should_throws_IllegalArgumentException_if_first_date_parameter_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMillisecond_Test#should_pass_if_actual_is_within_given_millisecond_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_empty",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_duplicatesFrom_Test#should_return_existing_duplicates",
            "org.assertj.core.api.date.DateAssert_isNotBetweenSpecifyingBoundariesInclusion_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertAre_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.api.character.CharacterAssert_isEqualTo_char_Test#should_return_this",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.util.ArrayWrapperList_wrap_Test#should_throw_error_if_parameter_is_not_array",
            "org.assertj.core.api.boolean_.BooleanAssert_isEqualTo_boolean_Test#should_have_internal_effects",
            "org.assertj.core.api.float_.FloatAssert_isLessThan_float_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfType_Test#should_pass_if_actual_has_only_elements_of_the_expected_type",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_out_of_bounds_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.Assertions_assertThat_with_Object_Test#should_create_Assert",
            "org.assertj.core.error.ShouldNotContainKey_create_Test#should_create_error_message",
            "org.assertj.core.api.chararray.CharArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.floats.Floats_assertEqual_with_offset_Test#should_throw_error_if_offset_is_null",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_Test#should_allow_assertions_on_empty_result_lists",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_contains_one_element_of_given_iterable_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.StandardComparisonStrategy_duplicatesFrom_Test#should_return_existing_duplicates_array",
            "org.assertj.core.api.list.ListAssert_has_at_Index_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeGreaterOrEqual_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.dates.Dates_assertIsCloseTo_Test#should_fail_if_actual_is_not_close_to_given_date_by_less_than_given_delta",
            "org.assertj.core.api.character.CharacterAssert_isLessThan_char_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertContainsValues_Test#should_success_if_values_contains_null",
            "org.assertj.core.api.longarray.LongArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.objects.Objects_assertSame_Test#should_fail_if_objects_are_not_same",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_fail_if_doubles_are_not_equal_within_offset_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_hasOnlyElementsOfType_Test#should_return_this",
            "org.assertj.core.error.ShouldHaveFields_create_Test#should_create_error_message_for_fields",
            "org.assertj.core.api.path.PathAssert_usingCharset_null_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_inHexadecimal_Test#should_assert_float_in_hexadecimal",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_start",
            "org.assertj.core.api.classes.ClassAssert_hasFields_Test#should_have_internal_effects",
            "org.assertj.core.api.path.PathAssert_isSymbolicLink_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.double_.DoubleAssert_isNegative_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test#should_pass_if_key_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longs.Longs_assertIsCloseTo_Test#should_pass_if_difference_is_less_than_given_offset",
            "org.assertj.core.error.ShouldBeEqual_assertj_elements_stack_trace_filtering_Test#fest_elements_should_be_kept_in_assertion_error_stack_trace",
            "org.assertj.core.error.ShouldNotBeSame_create_Test#should_create_error_message",
            "org.assertj.core.internal.strings.Strings_assertHasLinesCount_Test#should_fail_if_lines_count_of_actual_is_not_equal_to_expected_lines_count_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_pass_if_floats_are_equal",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.intarray.IntArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.classes.Classes_assertIsNotInterface_Test#should_pass_if_actual_is_not_an_interface",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Arrays_hasOnlyNullElements_Test#should_return_false_if_array_has_at_least_one_element_not_null",
            "org.assertj.core.internal.lists.Lists_assertContains_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_List",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsExactly_Test#should_return_this",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.api.date.DateAssert_isInSameSecondWindowAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.error.ShouldContainOnly_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBefore_Test#should_return_this",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_fail_if_actual_is_not_in_range_end",
            "org.assertj.core.api.abstract_.AbstractAssert_isExactlyInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_does_not_have_duplicates_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertLessThan_Test#should_pass_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsAfterYear_Test#should_fail_if_actual_is_not_strictly_after_given_year",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_double_with_offset_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.util.Lists_newArrayList_withVarArgs_Test#should_return_List_containing_all_elements_in_array",
            "org.assertj.core.error.ShouldHaveAtIndex_create_Test#should_create_error_message",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.list.ListAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldHaveFields_create_Test#should_create_error_message_for_declared_fields",
            "org.assertj.core.internal.conditions.Conditions_assertDoesNotHave_Test#should_throw_error_if_Condition_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsStrictlyBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isSorted_Test#should_have_internal_effects",
            "org.assertj.core.api.chararray.CharArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.internal.shorts.Shorts_assertNotEqual_Test#should_pass_if_shorts_are_not_equal",
            "org.assertj.core.api.intarray.IntArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtLeast_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.api.BDDAssertions_then_Test#then_String",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.error.ShouldBeSubsetOf_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsExactly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertAreExactly_Test#should_fail_if_condition_is_met_much",
            "org.assertj.core.internal.longs.Longs_assertGreaterThan_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsBeforeYear_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_size_is_not_equal_to_other_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_isNullOrEmpty_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsInSameHourAs_Test#should_throw_error_if_given_date_is_null",
            "org.assertj.core.internal.shorts.Shorts_assertLessThan_Test#should_fail_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_pass_if_actual_is_strictly_before_given_date",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_pass_if_actual_is_equals_to_start_of_given_period_and_start_is_not_included_in_given_period_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.lists.Lists_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMonth_Test#should_fail_if_actual_is_not_within_given_month",
            "org.assertj.core.internal.iterables.Iterables_assertHaveExactly_Test#should_throw_error_if_condition_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsNaN_Test#should_fail_since_actual_is_not_equal_to_NaN",
            "org.assertj.core.internal.objects.Objects_assertIsNotInstanceOfAny_Test#should_throw_error_if_array_of_types_is_empty",
            "org.assertj.core.internal.comparables.Comparables_assertEqualByComparison_Test#should_pass_if_objects_are_equal",
            "org.assertj.core.api.iterable.IterableAssert_haveExactly_Test#should_have_internal_effects",
            "org.assertj.core.api.long_.LongAssert_isNegative_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotNull_Test#should_return_this",
            "org.assertj.core.data.MapEntry_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_Pattern_Test#should_throw_error_if_Pattern_is_null",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Array_Test#should_have_internal_effects",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_return_true_if_both_Objects_are_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_size_is_not_equal_to_other_size",
            "org.assertj.core.internal.paths.Paths_assertIsSymbolicLink_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.abstract_.AbstractAssert_failWithMessage_Test#should_fail_with_simple_message",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isStrictlyBetween_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotHaveDuplicates_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.ArrayFormatter_format_Test#should_return_null_if_array_is_null",
            "org.assertj.core.api.Assertions_assertThat_with_Long_Test#should_pass_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_size_of_actual_is_not_equal_to_expected_size",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_fail_if_actual_does_not_start_with_other",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.intarray.IntArrayAssert_containsExactly_Test#should_have_internal_effects",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.bytes.Bytes_assertIsNegative_Test#should_fail_since_actual_is_not_negative",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsBetween_Test#should_pass_if_actual_is_in_range",
            "org.assertj.core.error.ShouldNotBe_create_Test#should_create_error_message",
            "org.assertj.core.api.BDDAssertions_then_Test#then_byte",
            "org.assertj.core.api.path.PathAssert_isReadable_Test#should_have_internal_effects",
            "org.assertj.core.util.Maps_newConcurrentHashMap_Test#should_return_new_ConcurrentHashMap",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.comparable.GenericComparableAssert_isGreaterThan_Test#should_have_internal_effects",
            "org.assertj.core.api.short_.ShortAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_pass_if_actual_is_less_than_other",
            "org.assertj.core.api.intarray.IntArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.api.abstract_.AbstractAssert_failWithMessage_Test#should_fail_with_message_having_args",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasContent_Test#should_fail_if_actual_is_not_a_readable_file",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_at_Index_Test#should_pass_if_Index_is_out_of_bounds",
            "org.assertj.core.internal.intarrays.IntArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertHaveAtMost_Test#should_pass_if_satisfies_at_most_times_condition",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.util.Dates_dayOfWeekOf_Test#should_throws_NullPointerException_if_date_parameter_is_null",
            "org.assertj.core.error.ShouldBeReadable_create_Test#should_create_error_message_for_File",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.bytes.Bytes_assertLessThanOrEqualTo_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.float_.FloatAssert_isGreaterThan_float_Test#should_have_internal_effects",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.throwable.ThrowableAssert_hasRootCauseInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.files.Files_assertHasParent_Test#should_pass_if_actual_has_expected_parent",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringWhitespace_Test#should_fail_if_actual_is_null_and_expected_is_not",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.integer_.IntegerAssert_isGreaterThan_int_Test#should_have_internal_effects",
            "org.assertj.core.api.fail.Fail_fail_withMessage_Test#shouldIncludeMessageWhenFailing",
            "org.assertj.core.internal.strings.Strings_assertNullOrEmpty_Test#should_fail_if_actual_is_not_null_and_is_not_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertStartsWith_Test#should_pass_if_actual_starts_with_sequence",
            "org.assertj.core.api.date.DateAssert_isInSameDayAs_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.api.chararray.CharArrayAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.api.longarray.LongArrayAssert_isSortedAccordingToComparator_Test#should_have_internal_effects",
            "org.assertj.core.api.charsequence.CharSequenceAssert_containsOnlyOnce_Test#should_return_this",
            "org.assertj.core.internal.floats.Floats_assertIsPositive_Test#should_succeed_since_actual_is_positive_according_to_absolute_value_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.util.Arrays_isArray_Test#should_return_false_if_object_is_not_an_array",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.intarrays.IntArrays_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size",
            "org.assertj.core.api.SoftAssertionsTest#all_assertions_should_pass",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_Test#should_pass_if_actual_contains_all_given_values",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_true_if_arrays_of_Objects_are_equal",
            "org.assertj.core.util.Dates_parse_Test#should_parse_string",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertLessThan_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.throwables.Throwables_assertHasCause_Test#should_pass_if_actual_has_no_cause_and_expected_cause_is_null",
            "org.assertj.core.api.double_.DoubleAssert_isLessThan_double_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsAfter_Test#should_fail_if_actual_is_equals_to_given_date",
            "org.assertj.core.internal.shorts.Shorts_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.internal.objects.Objects_assertIsLenientEqualsToByIgnoringFields_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isInSameYearAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.iterables.Iterables_assertAreAtLeast_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_throw_error_if_prefix_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.maps.Maps_assertContainsExactly_Test#should_pass_if_actual_and_entries_are_empty",
            "org.assertj.core.api.classes.ClassAssert_hasAnnotations_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test#should_return_this",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.dates.Dates_assertIsWithinSecond_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isCloseTo_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_fail_if_actual_does_not_contain_all_iterable_values",
            "org.assertj.core.internal.longarrays.LongArrays_assertIsSorted_Test#should_pass_if_actual_contains_only_one_element",
            "org.assertj.core.internal.chararrays.CharArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_allow_assertions_on_property_values_extracted_from_given_iterable_with_extracted_type_defined",
            "org.assertj.core.api.iterable.IterableAssert_isNullOrEmpty_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldBeInstanceOfAny_create_Test#should_create_error_message",
            "org.assertj.core.internal.objects.Objects_assertNotSame_Test#should_fail_if_objects_are_same",
            "org.assertj.core.internal.characters.Characters_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_fail_if_end_is_null",
            "org.assertj.core.internal.classes.Classes_assertIsAssignableFrom_Test#should_pass_if_actual_is_assignable_from_int",
            "org.assertj.core.internal.chararrays.CharArrays_assertHasSameSizeAs_with_Array_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objects.Objects_assertHasToString_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test#should_succeed_since_actual_is_not_positive",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContains_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.internal.paths.Paths_assertIsExecutable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsBetween_Test#should_throw_error_if_end_date_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objects.Objects_assertIsInstanceOfAny_Test#should_throw_error_if_array_of_types_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoNotHave_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.internal.integers.Integers_assertIsBetween_Test#should_pass_if_actual_is_equal_to_range_start",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_pass_if_both_Strings_are_equal_ignoring_case",
            "org.assertj.core.api.character.CharacterAssert_isGreaterThanOrEqualTo_char_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_iterable_to_look_for_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertHasSize_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSorted_Test#should_fail_if_actual_is_not_sorted_in_ascending_order",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Sets_newLinkedHashSet_GenericArray_Test#should_return_empty_Set_if_array_is_empty",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_contains_at_Index_Test#should_return_this",
            "org.assertj.core.internal.paths.Paths_assertIsCanonical_Test#should_succeed_if_actual_real_path_is_same_as_actual",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_isDirectory_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.internal.strings.Strings_assertMatches_CharSequence_Test#should_pass_if_actual_matches_Pattern_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.classes.ClassAssert_isAnnotation_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_fail_if_both_Strings_are_not_XML_equal_regardless_of_case",
            "org.assertj.core.util.Arrays_hasOnlyNullElements_Test#should_return_true_if_array_has_only_null_elements",
            "org.assertj.core.internal.paths.Paths_assertHasBinaryContent_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_pass_if_actual_contains_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeSorted_create_Test#should_create_error_message",
            "org.assertj.core.internal.characters.Characters_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.bytes.Bytes_assertIsPositive_Test#should_fail_since_actual_is_not_positive",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_throw_error_if_offset_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.chararray.CharArrayAssert_doesNotHaveDuplicates_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertHasSameSizeAs_with_Iterable_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.date.DateAssert_isInSameHourAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.throwables.Throwables_assertHasCauseInstanceOf_Test#should_pass_if_cause_is_instance_of_expected_type",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence",
            "org.assertj.core.api.bytearray.ByteArrayAssert_usingDefaultElementComparator_Test#should_return_this",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_have_symmetric_equals",
            "org.assertj.core.description.TextDescription_toString_Test#should_return_value",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_have_transitive_equals",
            "org.assertj.core.internal.longarrays.LongArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floats.Floats_assertLessThan_Test#should_fail_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.iterable.IterableAssert_areAtLeast_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertContainsKey_Test#should_success_if_key_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_actual_does_not_contain_values",
            "org.assertj.core.api.bytearray.ByteArrayAssert_endsWith_Test#should_return_this",
            "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#should_fail_if_both_Strings_are_not_equal_regardless_of_case_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_with_null_element",
            "org.assertj.core.api.iterable.IterableAssert_containsExactlyElementsOf_Test#should_have_internal_effects",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCauseInstanceOf_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_pass_if_difference_is_equal_to_given_offset",
            "org.assertj.core.internal.doubles.Doubles_assertIsStrictlyBetween_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertStartsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.throwables.Throwables_assertHasMessageStartingWith_Test#should_pass_if_actual_has_message_starting_with_expected_description",
            "org.assertj.core.util.Dates_toCalendar_Test#should_return_null_if_date_to_convert_is_null",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotContain_Test#should_return_this",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeExactlyInstance_create_Test#should_create_error_message",
            "org.assertj.core.internal.FieldByFieldComparator_compareTo_Test#should_throw_exception_if_Objects_have_not_the_same_properties",
            "org.assertj.core.api.objectarray.ObjectArrayAssert_extractingResultOf_Test#should_allow_assertions_on_method_invocation_result_extracted_from_given_iterable",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertEndsWith_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_with_comparable_component_type",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_fail_if_sequence_is_smaller_than_end_of_actual",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.api.date.DateAssert_isNotEqualTo_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqualByComparison_Test#should_pass_if_big_decimals_are_not_equal_by_comparison",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.api.date.DateAssert_isInSameHourWindowAs_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_start_is_null",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_usingElementComparator_Test#should_have_internal_effects",
            "org.assertj.core.error.ShouldContainString_create_Test#should_create_error_message_when_ignoring_case",
            "org.assertj.core.api.chararray.CharArrayAssert_isEmpty_Test#should_have_internal_effects",
            "org.assertj.core.api.date.DateAssert_usingComparator_Test#using_default_comparator_test",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_throw_error_if_end_date_is_null",
            "org.assertj.core.api.short_.ShortAssert_isPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertContainsExactly_Test#should_pass_if_actual_contains_given_values_exactly_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.SoftAssertionsTest#should_pass_when_using_extracting_with_list",
            "org.assertj.core.api.date.DateAssert_isNotBetween_Test#should_verify_assertion_with_date_arg",
            "org.assertj.core.api.charsequence.CharSequenceAssert_hasSameSizeAs_with_CharSequence_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.util.introspection.FieldSupport_fieldValues_Test#should_throw_error_if_field_not_found",
            "org.assertj.core.util.Sets_newLinkedHashSet_Test#should_return_empty_mutable_Set",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSorted_Test#should_pass_if_actual_is_sorted_in_ascending_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.comparables.Comparables_assertNotEqualByComparison_Test#should_pass_if_objects_are_not_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertGreaterThan_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_null",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.api.path.PathAssert_startsWithRaw_Test#should_have_internal_effects",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.api.BDDAssertions_then_Test#then_Throwable",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test#should_fail_if_actual_is_not_sorted_according_to_given_comparator",
            "org.assertj.core.api.Assertions_assertThat_with_Byte_Test#should_pass_actual",
            "org.assertj.core.api.classes.ClassAssert_isNotInterface_Test#should_return_this",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_have_reflexive_equals",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_succeed_since_actual_is_zero_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Objects_areEqual_Test#should_return_are_not_equal_if_Objects_are_not_equal",
            "org.assertj.core.api.chararray.CharArrayAssert_isNotEmpty_Test#should_have_internal_effects",
            "org.assertj.core.internal.paths.Paths_assertIsRegularFile_Test#should_fail_if_target_exists_but_is_not_a_regular_file",
            "org.assertj.core.api.shortarray.ShortArrayAssert_usingElementComparator_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test#should_verify_that_date_has_same_time_as_string_from_date",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotPositive_Test#should_succeed_since_actual_is_zero",
            "org.assertj.core.api.doublearray.DoubleArrayAssert_containsSubsequence_Test#should_return_this",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKeys_Test#should_fail_if_actual_contains_key",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.bigdecimal.BigDecimalAssert_isNotNegative_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_even_if_duplicated",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertIsSorted_Test#should_fail_if_actual_has_some_elements_with_non_comparable_component_type",
            "org.assertj.core.error.ShouldContainOnlyDigits_create_Test#should_create_error_message",
            "org.assertj.core.api.date.DateAssert_hasSameTimeAsDateInString_Test#should_verify_that_date_has_time_same_as_string_from_timestamp",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotOfAnyClassIn_Test#should_return_this",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertNotEmpty_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_fail_if_sequence_is_bigger_than_actual_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_isIn_with_vararg_Test#should_return_this",
            "org.assertj.core.api.map.MapAssert_hasSameSizeAs_with_Iterable_Test#should_return_this",
            "org.assertj.core.api.path.PathAssert_usingCharset_Test#should_return_this",
            "org.assertj.core.internal.iterables.Iterables_assertContainsNull_Test#should_pass_if_actual_contains_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.doubles.Doubles_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative_according_to_custom_comparison_strategy",
            "org.assertj.core.api.Tuple_Test#tuple_representation",
            "org.assertj.core.internal.bytes.Bytes_assertIsCloseTo_Test#should_fail_if__expected_value_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsNotBetween_Test#should_throw_error_if_start_date_is_null",
            "org.assertj.core.api.intarray.IntArrayAssert_endsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_pass_if_actual_and_given_values_are_empty",
            "org.assertj.core.util.Files_contentOf_Test#should_throw_exception_if_file_not_found",
            "org.assertj.core.internal.strings.Strings_assertContains_Test#should_pass_if_actual_contains_all_given_strings_according_to_custom_comparison_strategy",
            "org.assertj.core.api.abstract_.AbstractAssert_isSameAs_Test#should_be_loosely_typed2",
            "org.assertj.core.internal.intarrays.IntArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_sorted_according_to_given_comparator",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_fail_if_actual_does_not_contain_whole_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.api.floatarray.FloatArrayAssert_isSorted_Test#should_return_this",
            "org.assertj.core.error.ShouldContain_create_Test#should_create_error_message_differentiating_long_from_integer_in_arrays",
            "org.assertj.core.api.long_.LongAssert_isEqualTo_long_Test#should_have_internal_effects",
            "org.assertj.core.api.Assertions_assertThat_with_primitive_byte_Test#should_pass_actual",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.booleanarray.BooleanArrayAssert_containsSubsequence_Test#should_have_internal_effects",
            "org.assertj.core.internal.objects.Objects_assertIsEqualToComparingOnlyGivenFields_Test#should_fail_when_some_inherited_field_values_differ",
            "org.assertj.core.api.CollectionAssert_usingComparator_Test#using_default_comparator_test",
            "org.assertj.core.api.abstract_.AbstractAssert_isNotNull_Test#should_have_internal_effects",
            "org.assertj.core.util.TypeFilter_filter_Test#should_filter_Collection",
            "org.assertj.core.description.TextDescription_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotContain_at_Index_Test#should_pass_if_actual_does_not_contain_value_at_Index",
            "org.assertj.core.api.shortarray.ShortArrayAssert_doesNotHaveDuplicates_Test#should_have_internal_effects",
            "org.assertj.core.internal.integers.Integers_assertGreaterThan_Test#should_fail_if_actual_is_less_than_other",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContainAnyElementsOf_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.characters.Characters_assertLowerCase_Test#should_fail_if_actual_is_not_lowercase",
            "org.assertj.core.error.ShouldBeEmpty_create_Test#should_create_error_message",
            "org.assertj.core.internal.characters.Characters_assertUpperCase_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.strings.Strings_assertContainsOnlyOnce_Test#should_pass_if_actual_is_contains_given_string_only_once",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeEqualIgnoringWhitespace_create_Test#should_create_error_message",
            "org.assertj.core.api.list.ListAssert_isSortedAccordingToComparator_Test#should_return_this",
            "org.assertj.core.internal.doubles.Doubles_assertGreaterThanOrEqualTo_Test#should_pass_if_actual_is_greater_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.paths.Paths_assertHasParent_Test#should_fail_if_given_parent_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.path.PathAssert_isRelative_Test#should_have_internal_effects",
            "org.assertj.core.api.list.ListAssert_usingElementComparatorIgnoringFields_Test#should_have_internal_effects",
            "org.assertj.core.util.Sets_newHashSet_Iterable_Test#should_return_null_if_Iterable_is_null",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertIsNotNegative_Test#should_succeed_since_actual_is_not_negative",
            "org.assertj.core.internal.strings.Strings_assertDoesNotMatch_CharSequence_Test#should_pass_if_actual_does_not_match_regular_expression_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.Arrays_nonNullElementsIn_Test#should_return_an_empty_Collection_if_given_array_has_only_null_elements",
            "org.assertj.core.api.Assertions_assertThat_inBinary_Test#should_assert_float_in_binary",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_Test#should_pass_if_actual_contains_given_values",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_even_if_duplicated",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.integers.Integers_assertIsNotPositive_Test#should_fail_since_actual_is_positive_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertIsSortedAccordingToComparator_Test#should_pass_if_actual_is_empty_whatever_given_comparator_is",
            "org.assertj.core.util.Collections_nonNullElementsIn_Test#should_return_a_list_without_null_elements",
            "org.assertj.core.internal.StandardComparisonStrategy_areEqual_Test#should_return_true_if_Objects_are_equal",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_fail_if_actual_does_not_contain_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_actual_does_not_contain_given_values_exactly",
            "org.assertj.core.internal.booleanarrays.BooleanArrays_assertContains_at_Index_Test#should_throw_error_if_Index_is_null",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnlyOnce_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.throwable.ThrowableAssert_hasCauseInstanceOf_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only",
            "org.assertj.core.internal.chararrays.CharArrays_assertStartsWith_Test#should_fail_if_sequence_is_bigger_than_actual",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContainKey_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past",
            "org.assertj.core.internal.chararrays.CharArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.chararray.CharArrayAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsOnly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoesNotHaveDuplicates_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.api.comparable.AbstractComparableAssert_isGreaterThan_Test#should_return_this",
            "org.assertj.core.api.double_.DoubleAssert_isNotPositive_Test#should_have_internal_effects",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContains_at_Index_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.longarrays.LongArrays_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.bytes.Bytes_assertIsZero_Test#should_fail_since_actual_is_not_zero_whatever_custom_comparison_strategy_is_in_hex_representation",
            "org.assertj.core.internal.files.BinaryDiff_diff_File_byteArray_Test#should_return_diff_if_inputstreams_differ_on_one_byte",
            "org.assertj.core.internal.OnFieldsComparator_compare_Test#should_return_are_not_equal_if_second_Object_is_null_and_first_is_not",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_throw_exception_if_no_object_is_given",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertEndsWith_Test#should_throw_error_if_sequence_is_null",
            "org.assertj.core.internal.dates.Dates_assertIsWithinMinute_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ConstructorInvoker_newInstance_Test#should_create_Object_using_reflection",
            "org.assertj.core.internal.objects.Objects_assertHasSameClassAs_Test#should_pass_if_actual_has_same_type_as_other",
            "org.assertj.core.api.byte_.ByteAssert_usingDefaultComparator_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_contains_first_elements_of_sequence",
            "org.assertj.core.api.path.PathAssert_hasNoParentRaw_Test#should_return_this",
            "org.assertj.core.error.ShouldBeAfter_create_Test#should_create_error_message",
            "org.assertj.core.api.iterable.IterableAssert_extracting_Test#should_throw_error_if_no_property_nor_field_with_given_name_can_be_extracted",
            "org.assertj.core.internal.floats.Floats_assertGreaterThan_Test#should_fail_if_actual_is_equal_to_other",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.api.path.PathAssert_doesNotExist_Test#should_have_internal_effects",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsSequence_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsExactly_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.error.ShouldBeInSameMonth_create_Test#should_create_error_message",
            "org.assertj.core.internal.integers.Integers_assertLessThanOrEqualTo_Test#should_pass_if_actual_is_equal_to_other_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldBeFile_create_Test#should_create_error_message",
            "org.assertj.core.api.short_.ShortAssert_isGreaterThanOrEqualTo_short_Test#should_return_this",
            "org.assertj.core.api.date.DateAssert_isInSameMonthAs_Test#should_verify_assertion_with_date_arg_string_following_custom_format",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.short_.ShortAssert_isStrictlyBetween_Shorts_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertEndsWith_Test#should_fail_if_actual_does_not_end_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertIsSorted_Test#should_pass_if_actual_is_empty_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.classes.ClassAssert_isNotAnnotation_Test#should_return_this",
            "org.assertj.core.api.float_.FloatAssert_isNotZero_Test#should_have_internal_effects",
            "org.assertj.core.api.iterable.IterableAssert_flatExtracting_with_String_parameter_Test#should_allow_assertions_on_empty_result_lists",
            "org.assertj.core.internal.longarrays.LongArrays_assertDoesNotContain_at_Index_Test#should_fail_if_actual_contains_value_at_index",
            "org.assertj.core.error.ElementsShouldNotBe_create_Test#should_create_error_message",
            "org.assertj.core.api.date.DateAssert_isBetweenSpecifyingBoundariesInclusion_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.paths.Paths_assertStartsWith_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_fail_if_actual_contains_first_elements_of_subsequence_but_not_whole_subsequence_according_to_custom_comparison_strategy",
            "org.assertj.core.error.ShouldHaveSameSizeAs_create_Test#should_create_error_message_with_hexadecimal_representation",
            "org.assertj.core.internal.chararrays.CharArrays_assertEmpty_Test#should_pass_if_actual_is_empty",
            "org.assertj.core.internal.maps.Maps_assertNotEmpty_Test#should_fail_if_actual_is_empty",
            "org.assertj.core.api.floatarray.FloatArrayAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHasOnlyElementsOfType_Test#should_throw_exception_if_expected_type_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertContainsOnlyOnce_Test#should_throw_error_if_array_of_values_to_look_for_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bytes.Bytes_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_isBetween_Doubles_Test#should_have_internal_effects",
            "org.assertj.core.util.Iterables_nonNullElementsIn_Test#should_return_empty_List_if_given_Iterable_is_null",
            "org.assertj.core.api.iterable.IterableAssert_containsAll_Test#should_have_internal_effects",
            "org.assertj.core.api.longarray.LongArrayAssert_contains_Test#should_return_this",
            "org.assertj.core.internal.dates.Dates_assertIsWithinHourOfDay_Test#should_pass_if_actual_is_within_given_hour_of_day",
            "org.assertj.core.internal.chararrays.CharArrays_assertContainsExactly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.doubles.Doubles_assertEqual_double_with_offset_Test#should_pass_if_doubles_are_equal",
            "org.assertj.core.internal.intarrays.IntArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null_whatever_custom_comparison_strategy_is",
            "org.assertj.core.util.StandardRepresentation_toStringOf_Test#should_return_toString_of_array_of_Class",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertAre_Test#should_pass_if_each_element_satisfies_condition",
            "org.assertj.core.api.Assertions_assertThat_with_Map_Test#should_create_Assert",
            "org.assertj.core.internal.intarrays.IntArrays_assertEndsWith_Test#should_fail_if_actual_ends_with_first_elements_of_sequence_only",
            "org.assertj.core.api.double_.DoubleAssert_isEqualTo_with_offset_Test#should_have_internal_effects",
            "org.assertj.core.data.Index_equals_hashCode_Test#should_not_be_equal_to_null",
            "org.assertj.core.internal.dates.Dates_assertIsBefore_Test#should_pass_if_actual_is_strictly_before_given_date_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.strings.Strings_assertHasSize_Test#should_pass_if_size_of_actual_is_equal_to_expected_size_whatever_custom_comparison_strategy_is",
            "org.assertj.core.api.short_.ShortAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsSubsequence_Test#should_fail_if_actual_contains_first_elements_of_subsequence",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertNullOrEmpty_Test#should_pass_if_array_is_null",
            "org.assertj.core.internal.floats.Floats_assertIsStrictlyBetween_Test#should_fail_if_actual_is_equal_to_range_end",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertDoesNotContain_Test#should_fail_if_actual_contains_given_values",
            "org.assertj.core.error.MessageFormatter_format_Test#should_format_message",
            "org.assertj.core.api.short_.ShortAssert_isBetween_Shorts_Test#should_return_this",
            "org.assertj.core.api.charsequence.CharSequenceAssert_startsWith_Test#should_have_internal_effects",
            "org.assertj.core.internal.longarrays.LongArrays_assertContainsExactly_Test#should_fail_if_array_of_values_to_look_for_is_empty_and_actual_is_not_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertDoNotHave_Test#should_fail_if_condition_is_met",
            "org.assertj.core.internal.chararrays.CharArrays_assertContains_at_Index_Test#should_pass_if_actual_contains_value_at_index_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal",
            "org.assertj.core.internal.floats.Floats_assertEqual_float_with_offset_Test#should_pass_if_floats_are_equal_whatever_custom_comparison_strategy_is",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_fail_if_big_decimals_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_Test#should_fail_if_property_to_filter_on_is_null",
            "org.assertj.core.internal.shortarrays.ShortArrays_assertNotEmpty_Test#should_pass_if_actual_is_not_empty",
            "org.assertj.core.internal.intarrays.IntArrays_assertContainsOnly_Test#should_fail_if_actual_is_null",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertHaveAtMost_Test#should_fail_if_condition_is_not_met_enought",
            "org.assertj.core.internal.floatarrays.FloatArrays_assertContainsSequence_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.Dates_millisecondOf_Test#should_return_millisecond_of_date",
            "org.assertj.core.internal.comparables.Comparables_assertGreaterThanOrEqualTo_Test#should_fail_if_actual_is_less_than_other_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_isBeforeOrEqualsTo_Test#should_fail_because_date_string_representation_does_not_follow_expected_format",
            "org.assertj.core.internal.bytearrays.ByteArrays_assertDoesNotContain_Test#should_fail_if_actual_is_null",
            "org.assertj.core.api.filter.Filter_with_property_equals_to_given_value_Test#should_filter_iterable_elements_with_property_equals_to_given_value",
            "org.assertj.core.internal.bigdecimals.BigDecimals_assertNotEqual_Test#should_fail_if_actual_is_null",
            "org.assertj.core.util.ArrayWrapperList_size_Test#should_return_size_of_array[2]",
            "org.assertj.core.presentation.NumberGrouping_Test#should_group_bytes_in_short",
            "org.assertj.core.util.Collections_duplicatesFrom_Test#should_not_return_any_duplicates_if_collection_is_empty",
            "org.assertj.core.api.date.DateAssert_hasTime_Test#should_return_this",
            "org.assertj.core.api.AutoCloseableBDDSoftAssertionsTest#should_be_able_to_catch_exceptions_thrown_by_all_proxied_methods",
            "org.assertj.core.extractor.ByNameSingleExtractorTest#should_throw_error_when_no_property_nor_public_field_match_given_name",
            "org.assertj.core.internal.intarrays.IntArrays_assertStartsWith_Test#should_fail_if_actual_starts_with_first_elements_of_sequence_only_according_to_custom_comparison_strategy",
            "org.assertj.core.api.byte_.ByteAssert_isBetween_Bytes_Test#should_have_internal_effects",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotContain_Test#should_pass_if_actual_does_not_contain_given_values_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.maps.Maps_assertDoesNotContain_Test#should_throw_error_if_array_of_values_to_look_for_is_empty",
            "org.assertj.core.error.ShouldContain_create_Test#should_create_error_message_with_custom_comparison_strategy",
            "org.assertj.core.api.double_.DoubleAssert_usingDefaultComparator_Test#should_return_this",
            "org.assertj.core.internal.doublearrays.DoubleArrays_assertContainsOnly_Test#should_fail_if_actual_does_not_contain_given_values_only_according_to_custom_comparison_strategy"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_pass_if_both_Strings_are_XML_equals_case_insensitively",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test#should_pass",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_and_subsequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_not_in_the_past",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThanOrEqualTo_Test#should_pass",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_pass_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_should_support_timestamp_string_representation",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThan_Test#should_pass",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints_with_custom_comparison_strategy"
        ],
        "flaky_tests": [
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_should_support_timestamp_string_representation"
        ],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [],
        "config_only_random_max": [],
        "config_only_sleep_increase": [],
        "config_only_time_round": [],
        "config_only_random_fix": [],
        "config_only_locale_fix": [
            "org.assertj.core.internal.strings.Strings_assertIsXmlEqualCase_Test#should_pass_if_both_Strings_are_XML_equals_case_insensitively",
            "org.assertj.core.internal.iterables.Iterables_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_ends_with_sequence_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_fail_if_actual_contains_given_values_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContainsAll_Test#should_pass_if_actual_contains_all_iterable_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertStartsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.objectarrays.ObjectArrays_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContains_Test#should_pass_if_actual_contains_given_values_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSequence_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThanOrEqualTo_Test#should_pass",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isGreaterThan_Test#should_pass",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_more_than_once_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnly_Test#should_pass_if_actual_contains_given_values_only_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertEndsWith_Test#should_pass_if_actual_and_sequence_are_equal_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertContainsOnlyOnce_Test#should_pass_if_actual_contains_given_values_only_once_in_different_order_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.ComparatorBasedComparisonStrategy_isLessThan_Test#should_pass",
            "org.assertj.core.internal.iterables.Iterables_assertContainsSubsequence_Test#should_pass_if_actual_and_subsequence_are_equal_according_to_custom_comparison_strategy"
        ],
        "config_only_date_relative": [
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_should_support_timestamp_string_representation",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_pass_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future"
        ],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints_with_custom_comparison_strategy",
            "org.assertj.core.internal.iterables.Iterables_assertDoesNotHaveDuplicates_Test#should_pass_within_time_constraints"
        ],
        "config_only_time_relative": [
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_not_in_the_past"
        ],
        "config_only_random_min": [],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_fail_if_actual_is_not_in_the_past"
        ],
        "config_only_fix_date": [
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future_according_to_custom_comparison_strategy",
            "org.assertj.core.api.date.DateAssert_with_string_based_date_representation_Test#date_assertion_should_support_timestamp_string_representation",
            "org.assertj.core.internal.dates.Dates_assertIsInThePast_Test#should_pass_if_actual_is_in_the_past",
            "org.assertj.core.internal.dates.Dates_assertIsToday_Test#should_pass_if_actual_is_today_according_to_custom_comparison_strategy",
            "org.assertj.core.internal.dates.Dates_assertIsInTheFuture_Test#should_fail_if_actual_is_not_in_the_future"
        ],
        "config_only_date_bk": []
    },
    "undertow-io-undertow": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "io.undertow.server.security.DigestAuthentication2069TestCase#testDigestSuccess",
            "io.undertow.server.security.SpnegoBasicAuthenticationTestCase#testSpnegoSuccess",
            "io.undertow.server.security.DigestAuthentication2069TestCase#testNonceReUse",
            "io.undertow.server.handlers.DateHandlerTestCase#testDateHandler",
            "io.undertow.server.handlers.proxy.LoadBalancingProxyTestCase#testLoadSharedWithServerShutdown",
            "io.undertow.server.security.SpnegoAuthenticationTestCase#testSpnegoSuccess",
            "io.undertow.server.security.DigestAuthenticationAuthTestCase#testDigestSuccess"
        ],
        "tests": [],
        "od_tests": []
    },
    "wildfly-wildfly": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "org.jboss.as.test.smoke.jms.SendToQueueIgnoreJTATest#sendIgnoreJTA",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testTransformersFullEAP710",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testRejectTransformersEAP710",
            "org.jboss.as.messaging.test.MessagingSubsystem30TestCase#testRejectExpressionsEAP_6_4_0",
            "org.jboss.as.naming.subsystem.NamingSubsystemTestCase#testRejectionsEAP7",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testRejectionsEAP710",
            "org.wildfly.iiop.openjdk.IIOPSubsystemTransformersTestCase#testTransformersEAP_7_0_0",
            "org.wildfly.iiop.openjdk.IIOPSubsystemTransformersTestCase#testRejectTransformersEAP_7_0_0",
            "org.jboss.as.messaging.test.MessagingSubsystem30TestCase#testTransformersEAP_6_4_0",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testRejectionsEAP640",
            "org.jboss.as.test.smoke.jms.SendToQueueIgnoreJTATest#sendAndRollbackInJTA",
            "org.jboss.as.test.integration.jsp.JspTagTestCase#test",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testTransformerEAP700",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testRejectTransformersEAP640",
            "org.jboss.as.naming.subsystem.NamingSubsystemTestCase#testRejectionsEAP6",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testTransformersFullEAP640",
            "org.jboss.as.test.smoke.jms.JMSBridgeTest#sendAndReceiveMessage",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testRejectionsEAP700",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testTransformerEAP640",
            "org.jboss.as.clustering.infinispan.subsystem.InfinispanTransformersTestCase#testTransformerEAP710",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testRejectTransformersEAP700",
            "org.jboss.as.test.smoke.jms.SendToJMSQueueTest#sendAndReceiveMessage",
            "org.jboss.as.txn.subsystem.TransactionSubsystemTestCase#testTransformersFullEAP700"
        ],
        "tests": [],
        "od_tests": []
    },
    "apache-incubator-dubbo": {
        "total_tests": [
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#setIndexBoundaryCheck1",
            "org.apache.dubbo.common.URLTest#test_javaNetUrl",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomHeapBufferTransfer1",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testMergeValuesAddDefault",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetGenericClass",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_matchWhen",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testConvertRegister",
            "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest#testClearRpcContext",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_inject",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_ExceptionWhenNoUrlAttribute",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testWithStoppedServer",
            "org.apache.dubbo.common.utils.StringUtilsTest#testToQueryString",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Byte",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteBool",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_CleanNOverride",
            "org.apache.dubbo.common.logger.support.FailsafeLoggerTest#testSuccessLogger",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testMultiThreadSetAndGet",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringPersonMap",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testCopy",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest#testGetInjectedMethodReferenceBeanMap",
            "org.apache.dubbo.config.url.ExporterSideConfigUrlTest#exporterServiceConfigUrlTest",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_Empty_HostFilter",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_BlankMessage",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetCodeBase",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MediaContent_WithType",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#readerIndexBoundaryCheck3",
            "org.apache.dubbo.common.io.BytesTest#testBytes2HexWithWrongLength",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#writerIndexBoundaryCheck3",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerInvoke_forcemock_defaultreturn",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_EnumArray",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_False_HostFilter",
            "org.apache.dubbo.rpc.filter.ExceptionFilterTest#testConvertToRunTimeException",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Bool_Multi",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSerialize_Primitive",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testCopy",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testAttachInvocationIdIfAsync_sync",
            "org.apache.dubbo.qos.textui.TTableTest#test2",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#initialState",
            "org.apache.dubbo.common.utils.StringUtilsTest#testParseInteger",
            "org.apache.dubbo.rpc.cluster.configurator.override.OverrideConfiguratorTest#testOverride_Host",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Response_Error",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Ex_OnInvoke",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_WithOutDefault",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListDefault",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testInvokerNonJsonNonPojoSerialization",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#shouldNotFailOnInitialIndexUpdate2",
            "org.apache.dubbo.remoting.p2p.exchange.support.MulticastExchangeNetworkerTest#testJoin",
            "org.apache.dubbo.qos.command.CommandContextTest#test",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatch3",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testJoinList",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testSubscribe",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_charArray_withType",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testParmeterRoute",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Byte",
            "org.apache.dubbo.remoting.handler.WrappedChannelHandlerTest#test_Execute_Error",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_urlHolder_getAdaptiveExtension",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Connect_Execute_Error",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testUrlError",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_charArray",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_urlHolder_getAdaptiveExtension",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_boolArray",
            "org.apache.dubbo.common.io.BytesTest#testMD5ForString",
            "org.apache.dubbo.config.ProtocolConfigTest#testRegister",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testException[0]",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_AddExtension_Adaptive_ExceptionWhenExistedAdaptive",
            "org.apache.dubbo.rpc.filter.ContextFilterTest#testWithAttachments",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteLong",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getOrAddChannelTest01",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#test_Circular_Reference",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Bool_Multi",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_UPorDOWN_WithError",
            "org.apache.dubbo.common.json.JSONTest#testLinkedMap",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_LongWrap_withType",
            "org.apache.dubbo.common.utils.HolderTest#testSetAndGet",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_BlankMessage",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_enum_withType",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteUTF",
            "org.apache.dubbo.config.MethodConfigTest#testOninvoke",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_twoway_error_nullhandler",
            "org.apache.dubbo.config.spring.status.SpringStatusCheckerTest#testWithoutApplicationContext",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelect_Invokersize0",
            "org.apache.dubbo.common.utils.ExecutorUtilTest#testShutdownNow",
            "org.apache.dubbo.common.utils.ClassHelperTest#tetForNameWithCallerClassLoader",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_LinkedHashMap",
            "org.apache.dubbo.remoting.exchange.support.header.HeartBeatTaskTest#testHeartBeat",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigInteger",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#testLoadActivateExtension",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_LoopPojoInMap",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWrite5",
            "org.apache.dubbo.common.threadpool.support.cached.CachedThreadPoolTest#getExecutor2",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkInterfaceAndMethods2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_LinkedHashMap",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialHeapBufferTransfer2",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringSPersonMap",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_customizeAdaptiveKey",
            "org.apache.dubbo.common.logger.LoggerTest#testLevelEnable[0]",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodSignature_override",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testPerformanceTradition",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_Placeholder",
            "org.apache.dubbo.config.AbstractConfigTest#checkNameHasSymbol",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#copyBoundaryCheck3",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNonArgsMethod[1]",
            "org.apache.dubbo.config.RegistryConfigTest#testCluster",
            "org.apache.remoting.transport.mina.ClientsTest#testGetTransportNull",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getDirectByteBufferState",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigDecimal",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testSubscribe",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_NoForce",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Body_Need_Readmore",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_enum",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialCopiedBufferTransfer1",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MultiObject_WithType",
            "org.apache.dubbo.common.utils.LogHelperTest#testTrace",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_ListPojo_error",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testException[2]",
            "org.apache.dubbo.rpc.cluster.support.FailoverClusterInvokerTest#testInvoke_retryTimes",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock7",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_SPersonListList",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock9",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testAddressNull",
            "org.apache.dubbo.rpc.cluster.support.MergeableClusterInvokerTest#testGetMenuSuccessfully",
            "org.apache.dubbo.echo.EchoServiceTest#testEcho",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testNewInstance",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringSet",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Encode_Response",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_useAdaptiveClass",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testEncode_String_ClientSide",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testToByteBuffer2",
            "org.apache.dubbo.config.ApplicationConfigTest#testLogger",
            "org.apache.dubbo.remoting.transport.netty.NettyStringTest#testHandler",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testVersion",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest#test",
            "org.apache.dubbo.common.URLTest#test_Anyhost",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_ReturnEmpty",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#setIndexBoundaryCheck3",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Double",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testCustomException",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsBeanPropertyWriteMethod",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testMessageLengthGreaterThanMessageActualLength",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testVersion",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_IntegerArray_withType",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodSignatureNotFound",
            "org.apache.dubbo.common.concurrent.CompletableFutureTaskTest#testCreate",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelect_Invokersize1",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetLocalHost",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindLevel",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testListMerger",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomByteArrayTransfer2",
            "org.apache.dubbo.common.URLTest#test_getAddress",
            "org.apache.dubbo.common.json.JSONTest#testParse2Class",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_SPerson",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Response_Error",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_floatArray_withType",
            "org.apache.dubbo.config.spring.initializer.DubboApplicationListenerTest#testOneShutdownHook",
            "org.apache.dubbo.common.utils.ClassHelperTest#testGetClassLoader2",
            "org.apache.dubbo.common.io.UnsafeByteArrayOutputStreamTest#testWrongSize",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilterTest#testSetContext",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsLocalHost",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_Constructor_CheckStatus",
            "org.apache.dubbo.common.utils.StringUtilsTest#testRepeat",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_UrlNpe",
            "org.apache.dubbo.remoting.transport.netty4.NettyTransporterTest#shouldConnectToNetty4Server",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteBufferState",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BizException",
            "org.apache.dubbo.config.AbstractConfigTest#appendAnnotation",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BizExceptionNoDefaultConstructor_WithType",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#sendTest01",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSetPrimitiveProperty",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BytesRange",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_urlHolder_getAdaptiveExtension_ExceptionWhenNameNotProvided",
            "org.apache.dubbo.remoting.p2p.support.FileNetworkerTest#testJoin",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_ExceptionWhenNoAdaptiveMethodOnInterface",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonSerializationTest#testObjectInput",
            "org.apache.dubbo.config.MethodConfigTest#testName",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Error_Response_Object",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteArrayBoundaryCheck2",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_enum_withType",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigInteger",
            "org.apache.dubbo.rpc.protocol.thrift.ServerExceptionTest#testServerException",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_force_throwCustemException",
            "org.apache.dubbo.common.serialize.fst.FstSerializationTest#testSerialize",
            "org.apache.dubbo.common.io.StreamUtilsTest#testMarkInputSupport",
            "org.apache.dubbo.common.utils.CompatibleTypeUtilsTest#testCompatibleTypeConvert",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BizException",
            "org.apache.dubbo.common.utils.LogHelperTest#testInfo",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_Person_WithEnter",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testStreamTransfer2",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_Backspace",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_boolArray",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Check_Payload",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_String_NoEnter",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_doubleArray_withType",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MediaContent_badStream",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialCopiedBufferTransfer1",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_CleanOnly",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelect_Invokersize2AndselectNotNull",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testNotificationWithWrongBean",
            "org.apache.remoting.transport.mina.ClientsTest#testGetTransport1",
            "org.apache.dubbo.rpc.filter.GenericFilterTest#testInvokeWithDefault",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteArrayBoundaryCheck2",
            "org.apache.dubbo.common.utils.StringUtilsTest#testStripEnd",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BizExceptionNoDefaultConstructor",
            "org.apache.dubbo.common.compiler.support.JavassistCompilerTest#testCompileJavaClass",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testEncodeReplyResponse",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#copyBoundaryCheck2",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_pojo",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_ExceptionWhenNotAdaptiveMethod",
            "org.apache.dubbo.config.url.ExporterSideConfigUrlTest#exporterProviderConfigUrlTest",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testCheck",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testGenericInvokeWithNativeJava",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteArrayBoundaryCheck1",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testOffer3",
            "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest#test_not_share_connect",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BytesRange",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testGetSizeMethod",
            "org.apache.dubbo.config.validation.ValidationTest#testValidation",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#TestCallbackConsumerLimit",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilterTest#testMoreThanExecuteLimitInvoke",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Long",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testDestoryRegistry",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigDecimal",
            "org.apache.dubbo.serialization.SerializationTest#testObjectOutput",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialDirectBufferTransfer2",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetProperties1",
            "org.apache.dubbo.common.compiler.support.JavassistCompilerTest#testCompileJavaClassWithExtends",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteBufferBoundaryCheck",
            "org.apache.dubbo.common.URLTest#test_toFullString",
            "org.apache.dubbo.config.spring.initializer.DubboApplicationContextInitializerTest#testNoListenerInWebXml",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigDecimal_withType",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorTest#testLookUp",
            "org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWhenItMeetsConstraint",
            "org.apache.dubbo.qos.server.handler.LocalHostPermitHandlerTest#testHandlerAdded",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_AddExtension_NoExtend",
            "org.apache.dubbo.config.ProtocolConfigTest#testDestroy",
            "org.apache.dubbo.config.url.ExporterSideConfigUrlTest#exporterRegistryConfigUrlTest",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#toStringTest",
            "org.apache.dubbo.rpc.filter.TpsLimitFilterTest#testWithoutCount",
            "org.apache.dubbo.common.threadpool.support.limited.LimitedThreadPoolTest#getExecutor1",
            "org.apache.dubbo.rpc.protocol.dubbo.MultiThreadTest#testDubboMultiThreadInvoke",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_doubleArray",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_intArray",
            "org.apache.dubbo.config.RegistryConfigTest#testDynamic",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialHeapBufferTransfer1",
            "org.apache.dubbo.qos.command.DefaultCommandExecutorTest#testExecute2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_shortArray_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_enum_withType",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_enum_withType",
            "org.apache.dubbo.common.URLTest#test_valueOf_noHost",
            "ClassNameTest#testThriftUtils",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteArrayBoundaryCheck1",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testGetLogger[4]",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetProperties2",
            "org.apache.dubbo.validation.filter.ValidationFilterTest#testItWhileThrowoutRpcException",
            "org.apache.dubbo.rpc.filter.ExceptionFilterTest#testRpcException",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testLevel[2]",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testArrayToCollection",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testChildrenListener",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteBufferState",
            "org.apache.dubbo.qos.command.DefaultCommandExecutorTest#testExecute1",
            "org.apache.dubbo.config.ApplicationConfigTest#testArchitecture",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testNonSerializedParameter",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testForName1",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testDecodeReplyResponse",
            "org.apache.dubbo.common.bytecode.WrapperTest#test_unwantedArgument",
            "org.apache.dubbo.qos.command.util.CommandHelperTest#testGetCommandClass",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Byte_Multi",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesOneFileNotRootPath",
            "org.apache.dubbo.config.ConsumerConfigTest#testThreadpool",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteBoundaryCheck1",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsValidLocalHost",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_SPersonList",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_shortArray",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_Backspace",
            "org.apache.dubbo.common.utils.DubboAppenderTest#testAvailable",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetServerShutdownTimeoutFromDefault",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testRemoveChildrenListener",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Time_withType",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertRegister2",
            "org.apache.dubbo.rpc.cluster.support.FailbackClusterInvokerTest#testInvokeExceptoin",
            "org.apache.dubbo.config.AbstractConfigTest#checkPathLength",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Ex_OnReturn",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsPrimitive",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_longArray_withType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#readerIndexBoundaryCheck4",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testWrongLength",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_checkCompatible_ImplMock3",
            "org.apache.dubbo.config.AbstractConfigTest#checkParameterName",
            "org.apache.dubbo.rpc.cluster.loadbalance.RandomLoadBalanceTest#testLoadBalanceWarmup",
            "org.apache.dubbo.common.logger.LoggerTest#testAllLogMethod[2]",
            "org.apache.dubbo.remoting.transport.netty4.ClientReconnectTest#testReconnect",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsEmpty",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringSPersonListMap",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Bytes",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeServiceNotExport",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_longArray",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyRouterUrls",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_IntegerArray_withType",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_floatArray_withType",
            "org.apache.dubbo.cache.support.expiring.ExpiringCacheFactoryTest#testLruCacheFactory",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteObject",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#writerIndexBoundaryCheck4",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testErrorHandler",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testToByteBuffer2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MediaContent",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#copyBoundaryCheck2",
            "org.apache.dubbo.config.RegistryConfigTest#testParameters",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testToByteBuffer1",
            "org.apache.dubbo.config.ApplicationConfigTest#testRegistry",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testException[1]",
            "org.apache.dubbo.metrics.MetricNameTest#testResolveWithLevel",
            "org.apache.dubbo.rpc.StaticContextTest#testGetKey",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#setIndexBoundaryCheck3",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteArrayBoundaryCheck1",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testDefaultPort",
            "org.apache.dubbo.common.bytecode.ClassGeneratorTest#testMain0",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotified_Normal",
            "org.apache.dubbo.common.utils.StringUtilsTest#testCamelToSplitName",
            "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest#testInvokeNoException",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Request_Object",
            "org.apache.dubbo.config.AbstractConfigTest#checkName",
            "org.apache.dubbo.common.logger.support.FailsafeLoggerTest#testFailSafeForLoggingMethod",
            "org.apache.dubbo.container.logback.LogbackContainerTest#testContainer",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testRemoveAll",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Header_Response_Heartbeat",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testNotifyIfURLNull",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomByteBufferTransfer",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock2",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadFloat",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Request_Object",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testHeartbeat",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_IntSPersonMap",
            "org.apache.dubbo.rpc.cluster.support.FailfastClusterInvokerTest#testNoInvoke",
            "org.apache.dubbo.config.ModuleConfigTest#testVersion",
            "org.apache.dubbo.validation.filter.ValidationFilterTest#testItWithoutUrlParameters",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testAddProperties",
            "org.apache.dubbo.remoting.transport.netty.ClientsTest#testGetTransportEmpty",
            "org.apache.dubbo.config.ProtocolConfigTest#testThreads",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWriteLines",
            "org.apache.dubbo.config.RegistryConfigTest#testUsername",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testGetBoxedClass",
            "org.apache.dubbo.config.spring.status.SpringStatusCheckerTest#testWithoutLifeCycleRunning",
            "org.apache.dubbo.config.ArgumentConfigTest#testArguments",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testAvailability",
            "org.apache.dubbo.monitor.dubbo.StatisticsTest#testToString",
            "org.apache.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrarTest#testRegisterBeanDefinitionsForSingle",
            "org.apache.dubbo.common.io.StreamUtilsTest#testReadWithWrongOffset",
            "org.apache.dubbo.common.serialize.fst.FstSerializationTest#testContentType",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodName1",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkInterfaceAndMethod4",
            "org.apache.dubbo.serialization.SerializationTest#testObjectInput",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#closeWithTimeoutTest02",
            "org.apache.dubbo.common.io.BytesTest#testWrongOffSet",
            "org.apache.dubbo.metrics.MetricNameTest#testTaggedWithLevel",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest#testErrorMessage",
            "org.apache.dubbo.config.MonitorConfigTest#testProtocol",
            "org.apache.dubbo.config.spring.ServiceBeanTest#testGetService",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testHessianProtocol",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetConstructorName",
            "org.apache.dubbo.common.threadpool.support.AbortPolicyWithReportTest#jStackDumpTest",
            "org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolExecutorTest#testEagerThreadPool",
            "org.apache.dubbo.cache.support.lru.LruCacheFactoryTest#testLruCacheFactory",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testByteArrayTransfer",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testHttpProtocol",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest#testListClient",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Error_MagicNum",
            "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest#test_multi_destory",
            "org.apache.dubbo.rpc.cluster.support.FailfastClusterInvokerTest#testInvokeNoExceptoin",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_twoway",
            "org.apache.dubbo.rpc.cluster.support.ClusterUtilsTest#testMergeUrl",
            "org.apache.dubbo.common.URLTest#testAddParameters",
            "org.apache.dubbo.config.ProviderConfigTest#testQueues",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testEmptyNotifyCauseForbidden",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_longArray_withType",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#readerIndexBoundaryCheck4",
            "org.apache.dubbo.common.json.JSONReaderTest#testMain",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BytesRange",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_event_readonly",
            "org.apache.dubbo.remoting.handler.WrappedChannelHandlerTest#test_Caught_Biz_Error",
            "org.apache.dubbo.config.ProviderConfigTest#testNetworker",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testRealizeLinkedList",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testWarmup",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_SPerson",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_ByteWrap",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_Person_WithEnter",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MediaContent_WithType_badStream",
            "org.apache.dubbo.common.utils.StringUtilsTest#testLength",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelectBalance",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testDubboProtocolWithMina",
            "org.apache.dubbo.common.concurrent.CompletableFutureTaskTest#testRunnableResponse",
            "org.apache.dubbo.config.ProviderConfigTest#testThreads",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BizException_WithType",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testReturnNonSerialized",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#copyBoundaryCheck1",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Encode_Request",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testEncodeRequest",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testDynamic",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testEmptySpace",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testAddAndGet",
            "org.apache.dubbo.common.URLTest#testIpV6AddressWithScopeId",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testSortSimpleNameNull",
            "org.apache.dubbo.common.utils.AssertTest#testNotNull2",
            "org.apache.dubbo.rpc.cluster.support.FailSafeClusterInvokerTest#testInvokeExceptoin",
            "org.apache.dubbo.common.json.JSONTest#testObject2Json",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_String_NoEnter",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertRegister",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteBoundaryCheck2",
            "org.apache.dubbo.config.spring.context.annotation.EnableDubboTest#test",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_floatArray_withType",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkApplication2",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindLevelWithThreadName",
            "org.apache.dubbo.validation.filter.ValidationFilterTest#testItWhileMethodNameStartWithDollar",
            "org.apache.dubbo.common.logger.support.FailsafeLoggerTest#testGetLogger",
            "org.apache.dubbo.common.json.JSONTest#testException",
            "org.apache.dubbo.metrics.MetricNameTest#testResolveWithTags",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock4",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWrite1",
            "org.apache.dubbo.common.version.VersionTest#testGetProtocolVersion",
            "org.apache.dubbo.rpc.filter.TimeoutFilterTest#testInvokeWithTimeout",
            "org.apache.dubbo.config.utils.ReferenceConfigCacheTest#testGetCacheDiffReference",
            "org.apache.dubbo.config.ProtocolConfigTest#testExchanger",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomHeapBufferTransfer2",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetBoxedClass",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtension_ExceptionNoExtension_WrapperNotAffactName",
            "org.apache.dubbo.common.URLTest#test_toString",
            "org.apache.dubbo.config.validation.ValidationTest#testGenericValidation",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testStreamTransfer2",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigInteger",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testJoinAll",
            "org.apache.dubbo.common.utils.IOUtilsTest#testReadLines",
            "org.apache.dubbo.config.ProtocolConfigTest#testTransporter",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testOffer2",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_SPersonList",
            "org.apache.dubbo.registry.support.FailbackRegistryTest#testDoRetry_subscribe",
            "org.apache.dubbo.remoting.transport.netty.NettyClientTest#testServerClose",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#copyBoundaryCheck4",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetServerShutdownTimeoutFromShutdownWait",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testConstructorArg",
            "org.apache.dubbo.rpc.RpcContextTest#testAsync",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testGetSize",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialCopiedBufferTransfer1",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testCheckRegistry2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigInteger_withType",
            "org.apache.dubbo.config.ModuleConfigTest#testRegistries",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigPerson_WithType",
            "org.apache.dubbo.common.utils.LogTest#testLogMessage",
            "org.apache.dubbo.common.utils.ClassHelperTest#testResolvePrimitiveClassName",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_charArray_withType",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getLocalAddressTest",
            "org.apache.dubbo.config.ProviderConfigTest#testCharset",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetServerShutdownTimeoutFromShutdownWaitSeconds",
            "org.apache.dubbo.rpc.filter.TokenFilterTest#testInvokeWithoutToken",
            "org.apache.dubbo.common.io.StreamUtilsTest#testMarkSupportedInputStream",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomByteArrayTransfer2",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testAuthRedis",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BytesRange",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_primitive",
            "org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test1",
            "org.apache.dubbo.common.io.BytesTest#testZip",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testRetries",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#readerIndexBoundaryCheck4",
            "org.apache.dubbo.config.cache.CacheTest#testCache",
            "org.apache.dubbo.config.ProviderConfigTest#testDefault",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertNotify",
            "org.apache.dubbo.common.utils.ExecutorUtilTest#testSetThreadName",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer1",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSkipBytes1",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerInvoke_failmock",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigPerson_WithType",
            "org.apache.dubbo.common.utils.LogHelperTest#testDebug",
            "org.apache.dubbo.qos.command.decoder.HttpCommandDecoderTest#decodeGet",
            "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest#testGetInvoker",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Request_Event_String",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testMapToEnum",
            "org.apache.dubbo.common.URLTest#test_equals",
            "org.apache.dubbo.config.ProviderConfigTest#testAccepts",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testNotifyIfNotifyNull",
            "org.apache.dubbo.qos.command.impl.OnlineTest#testExecute",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_enum",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getExchangeHandlerTest",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorFactoryTest#testCreateMonitor",
            "org.apache.dubbo.remoting.transport.netty.ClientsTest#testGetTransport3",
            "org.apache.dubbo.rpc.cluster.router.file.FileRouterEngineTest#testRouteByMethodName",
            "org.apache.dubbo.config.MethodConfigTest#testOnreturn",
            "org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithExistMethod",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSkipBytes1",
            "org.apache.dubbo.rpc.protocol.rest.RpcExceptionMapperTest#testNormalException",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testWrite",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteDouble",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_PersonListList",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testLoadRegistries",
            "org.apache.dubbo.config.MethodConfigTest#testReturn",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testException[3]",
            "org.apache.dubbo.common.status.StatusTest#testConstructor3",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsValidV6Address",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodSignatureOverrideMoreThan1",
            "org.apache.dubbo.common.utils.ClassHelperTest#testToShortString",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_History_UP",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsInstance",
            "org.apache.dubbo.remoting.exchange.support.DefaultFutureTest#isDone",
            "org.apache.dubbo.config.ProtocolConfigTest#testExtension",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testForName",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testCache",
            "org.apache.dubbo.config.spring.convert.converter.StringArrayToStringConverterTest#testConvert",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testNewInstance1",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringSet",
            "org.apache.dubbo.qos.command.util.CommandHelperTest#testGetAllCommandClass",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_Person_ObjectOnly",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testByteArrayTransfer",
            "org.apache.dubbo.config.RegistryConfigTest#testFile",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MultiObject",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testListener",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringPersonListMap",
            "org.apache.dubbo.common.utils.StringUtilsTest#testExceptionToStringWithMessage",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetAvailablePort",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testSent",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringArray",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_IntSPersonMap",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_Default",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testApplication",
            "org.apache.dubbo.config.ProviderConfigTest#testPayload",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsEquals",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testMethodWithArgs[3]",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#shouldNotFailOnInitialIndexUpdate3",
            "org.apache.dubbo.config.spring.status.DataSourceStatusCheckerTest#testWithDatasourceHasNextResult",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringPersonListMap",
            "org.apache.dubbo.config.ArgumentConfigTest#testType",
            "org.apache.dubbo.common.utils.ParametersTest#testString2Parameters",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_ByteWrap_withType",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringSPersonListMap",
            "org.apache.dubbo.common.URLTest#test_removeParameters",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Double",
            "org.apache.remoting.transport.mina.ClientsTest#testGetTransportEmpty",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetLocalAddress",
            "org.apache.dubbo.remoting.http.tomcat.TomcatHttpBinderTest#shouldAbleHandleRequestForTomcatBinder",
            "org.apache.dubbo.config.RegistryConfigTest#testGroup",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_ListPojo",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_boolean",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Bool_Multi",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#setIndexBoundaryCheck1",
            "org.apache.dubbo.common.utils.ClassHelperTest#testForName1",
            "org.apache.dubbo.remoting.transport.netty4.NettyTransporterTest#shouldAbleToBindNetty4",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testEquals",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#allTest",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatch4",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Person",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testGeneralizeEnumArray",
            "org.apache.dubbo.registry.multicast.MulticastRegistryFactoryTest#shouldCreateRegistry",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BizExceptionNoDefaultConstructor_WithType",
            "org.apache.dubbo.rpc.RpcContextTest#testCheckSide",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeCancel",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testWrongOffset",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteBufferState",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyoverrideUrls_afterInvoker",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_SPersonSet",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Short",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_PersonList",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testGetLogger[3]",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Date_withType",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Float",
            "org.apache.dubbo.common.extension.ExtensionTest#testExtensionFactory",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getSupportedExtensions_wrapperIsNotExt",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testConnectedStatus",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testFilter",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testToUri",
            "org.apache.dubbo.config.url.InvokerSideConfigUrlTest#regConfForConsumerUrlTest",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testToken",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_InitError",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_WithDefault",
            "org.apache.dubbo.common.status.support.LoadStatusCheckerTest#test",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_PersonSet",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#writerIndexBoundaryCheck1",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteBoundaryCheck2",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_Notified_acceptProtocol1",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringArrayList",
            "org.apache.dubbo.remoting.exchange.support.DefaultFutureTest#timeoutNotSend",
            "org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolTest#getExecutor1",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Time_withType",
            "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest#testJCacheFactory",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsNumeric",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseUrl",
            "org.apache.dubbo.common.utils.IOUtilsTest#testAppendLines",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_SPerson_withType",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testRunImmediatelyAfterExecuted",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MultiObject_WithType",
            "org.apache.dubbo.common.extension.support.ActivateComparatorTest#testActivateComparator",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertSubscribe2",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_total_Array",
            "org.apache.dubbo.common.bytecode.WrapperTest#test_getDeclaredMethodNames_ContainExtendsParentMethods",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_Array",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_String_WithEnter",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Byte",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Bool_Multi",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testUnsupportedMethod",
            "org.apache.dubbo.config.ApplicationConfigTest#testEnvironment2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_shortArray",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testLevel[3]",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteBufferTransfer",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigPerson_WithType",
            "org.apache.dubbo.config.ApplicationConfigTest#testQosEnable",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringPersonMap",
            "org.apache.dubbo.config.ServiceConfigTest#testInterface2",
            "org.apache.dubbo.rpc.ServiceHolderTest#testHolderClass",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_force_throw",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_IntegerArray",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_realize_IntPararmter_IllegalArgumentException",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringArray_withType",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testWeight",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#requestTest01",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadLong",
            "org.apache.dubbo.common.serialize.serialization.ReflectionUtilsTest#test",
            "org.apache.dubbo.rpc.cluster.router.file.FileRouterEngineTest#testRouteAvailable",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboLazyConnectTest#testSticky2",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest#test_Normal_available",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testStringMap2",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomByteArrayTransfer1",
            "org.apache.dubbo.rpc.RpcContextTest#testAttachments",
            "org.apache.dubbo.common.store.support.SimpleDataStoreTest#testGetComponent",
            "org.apache.dubbo.remoting.ChanelHandlerTest#testClient",
            "org.apache.dubbo.config.spring.status.DataSourceStatusCheckerTest#testWithoutDatasource",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testMergeValuesDeleteDefault_2",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testOverload",
            "org.apache.dubbo.validation.support.jvalidation.JValidationTest#testReturnTypeWithInvalidValidationProvider",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_doubleArray_withType",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testServletWithoutWebConfig",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testGroup",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomByteBufferTransfer",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testMultiProviderConfig",
            "org.apache.dubbo.common.io.UnsafeByteArrayOutputStreamTest#testToByteBuffer",
            "org.apache.dubbo.common.threadlocal.NamedInternalThreadFactoryTest#newThread",
            "org.apache.dubbo.rpc.cluster.support.FailSafeClusterInvokerTest#testInvokeNoExceptoin",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_EnumArray",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseFromParameter",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotified_WithError",
            "org.apache.dubbo.common.status.support.StatusUtilsTest#testGetSummaryStatus2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MediaContent_badStream",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_charArray",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testDestroy_WithDestroyRegistry",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_AddExtension_Adaptive",
            "org.apache.dubbo.common.status.StatusTest#testConstructor1",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetPropertyNameFromBeanWriteMethod",
            "org.apache.dubbo.config.ProtocolConfigTest#testTelnet",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_twoway_error_reply",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MediaContent_WithType_badStream",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#writerIndexBoundaryCheck2",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testStackOverflow",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testUnsubscribe",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_MigicCodec_Contain_ExchangeHeader",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testInvokerNonJsonEnumSerialization",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClientTest#testGetChildren",
            "org.apache.dubbo.common.utils.StringUtilsTest#testTranslat",
            "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest#testJCacheGetExpired",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MediaContent_WithType",
            "org.apache.dubbo.rpc.cluster.StickyTest#testMethodStickyForceCheck",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testRegisterIfURLNULL",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Date_withType",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigInteger_withType",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseUrls",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_Backspace_WithError",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testCollectionToArray",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testDateTimeTimestamp",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testIsNotEmpty",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigInteger",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testStreamTransfer2",
            "org.apache.dubbo.qos.protocol.QosProtocolWrapperTest#testExport",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testAttachInvocationIdIfAsync_normal",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock8",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Byte",
            "org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNonExistMethod",
            "org.apache.dubbo.serialization.SerializationTest#testContentType",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testAppendNull",
            "org.apache.dubbo.common.utils.IOUtilsTest#testLines",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteAccess",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testInjvm",
            "org.apache.dubbo.rpc.protocol.rest.integration.swagger.DubboSwaggerApiListingResourceTest#test",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Error_MagicNum",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_doubleArray",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#setIndexBoundaryCheck2",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getDirectByteBufferState",
            "org.apache.dubbo.common.URLTest#test_valueOf_spaceSafe",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testRegister",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsJavaIdentifier",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#copyBoundaryCheck1",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testExport",
            "org.apache.dubbo.common.utils.ExecutorUtilTest#testGracefulShutdown2",
            "org.apache.dubbo.rpc.protol.rest.RestProtocolTest#testRestProtocol",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testDonotSelectAgainAndNoCheckAvailable",
            "org.apache.dubbo.qos.command.decoder.HttpCommandDecoderTest#decodePost",
            "org.apache.dubbo.config.RegistryConfigTest#testSubscribe",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_PrimitiveArray",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testSubscribeIfListenerNull",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_URL_mutable_withType",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_URL_mutable_withType",
            "org.apache.dubbo.common.version.VersionTest#testSupportResponseAttatchment",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigDecimal_withType",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Date",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testOndisconnect",
            "org.apache.dubbo.common.compiler.support.JdkCompilerTest#test_compileJavaClass0",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testMapEquals",
            "org.apache.dubbo.cache.support.threadlocal.ThreadLocalCacheFactoryTest#testThreadLocalCacheFactory",
            "org.apache.dubbo.common.io.BytesTest#testMain",
            "org.apache.dubbo.rpc.protocol.webservice.WebserviceProtocolTest#testWebserviceProtocol",
            "org.apache.dubbo.config.ProviderConfigTest#testBuffer",
            "org.apache.dubbo.rpc.cluster.loadbalance.RoundRobinLoadBalanceTest#testLoadBalanceWarmup",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringSPersonMap",
            "org.apache.dubbo.config.spring.util.PropertySourcesUtilsTest#testGetSubProperties",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_shortArray_withType",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Byte",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_floatArray",
            "org.apache.dubbo.rpc.filter.TokenFilterTest#testInvokeWithWrongToken",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteBoundaryCheck1",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testIncrementAndGet",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetPropertyDefaultValue",
            "org.apache.dubbo.serialization.SerializationTest#testWriteUTF",
            "org.apache.dubbo.registry.redis.RedisRegistryTest#testRegister",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsCompatibleWithArray",
            "org.apache.dubbo.config.ProviderConfigTest#testServer",
            "org.apache.dubbo.config.RegistryConfigTest#testAddress",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testReplaceProperty",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Async_Future",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Header_Response_NoSerializationFlag",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialHeapBufferTransfer1",
            "org.apache.dubbo.qos.command.impl.HelpTest#testMainHelp",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_IntPersonMap",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_ByteWrap_withType",
            "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest#testInvokeException",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringList_asListReturn",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadByte",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#writerIndexBoundaryCheck4",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock5",
            "org.apache.dubbo.rpc.filter.TpsLimitFilterTest#testFail",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testProxy",
            "org.apache.dubbo.common.URLTest#test_valueOf_noProtocolAndHost",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testInvokerNonJsonPojoSerialization",
            "org.apache.dubbo.common.compiler.support.JdkCompilerTest#test_compileJavaClass",
            "org.apache.dubbo.rpc.protocol.rmi.RmiProtocolTest#testRmiProtocolTimeout",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testMonitor",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteShort",
            "org.apache.dubbo.rpc.filter.ExceptionFilterTest#testRuntimeException",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsNotEmpty",
            "org.apache.dubbo.config.MonitorConfigTest#testPassword",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatchGlobPattern",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BizExceptionNoDefaultConstructor_WithType",
            "org.apache.dubbo.config.ProtocolConfigTest#testIothreads",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Encode_Error_Response",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testTimeOut",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testForName1",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testListener",
            "org.apache.dubbo.common.threadpool.support.fixed.FixedThreadPoolTest#getExecutor2",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialHeapBufferTransfer2",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testUnregister",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesNoFile",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#setIndexBoundaryCheck3",
            "org.apache.dubbo.config.ProtocolConfigTest#testName",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClientTest#testConnectState",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeName",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesOneFileAllowMulti",
            "org.apache.dubbo.config.GenericServiceTest#testGenericServiceException",
            "org.apache.dubbo.common.concurrent.CompletableFutureTaskTest#testListener",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigInteger_withType",
            "org.apache.dubbo.common.URLTest#test_noValueKey",
            "org.apache.dubbo.config.url.InvokerSideConfigUrlTest#refConfUrlTest",
            "org.apache.dubbo.common.utils.LogHelperTest#testError",
            "org.apache.dubbo.common.logger.LoggerTest#testAllLogMethod[1]",
            "org.apache.dubbo.remoting.p2p.support.MulticastNetworkerTest#testJoin",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_LongWrap",
            "org.apache.dubbo.common.serialize.fst.FstSerializationTest#testDeserialize",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testListener",
            "org.apache.dubbo.qos.command.impl.QuitTest#testExecute",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigInteger",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MultiObject",
            "org.apache.dubbo.qos.command.decoder.TelnetCommandDecoderTest#testDecode",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_PersonList",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_ListPojo_empty",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringArray_withType",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testMessageNull",
            "org.apache.dubbo.config.RegistryConfigTest#testClient",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testCopy",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MediaContent_WithType_badStream",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testBindingAttachment",
            "org.apache.dubbo.rpc.cluster.configurator.override.OverrideConfiguratorTest#testOverride_Application",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testMessageLengthExceedPayloadLimitWhenEncode",
            "org.apache.dubbo.config.ProviderConfigTest#testTransporter",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer2",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_floatArray_withType",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testNegativeSize",
            "org.apache.dubbo.common.utils.ClassHelperTest#testForNameWithThreadContextClassLoader",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testDecodeRequest",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_urlHolder_getAdaptiveExtension_noExtension",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testNewInstance0",
            "org.apache.dubbo.common.logger.LoggerTest#testAllLogMethod[3]",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_PersonList",
            "org.apache.dubbo.config.ProviderConfigTest#testTelnet",
            "org.apache.dubbo.common.beanutil.JavaBeanAccessorTest#testIsAccessByMethod",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_WithExitByte",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest#testGetReferenceBeans",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorTest#testMonitorFactory",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#shouldNotFailOnInitialIndexUpdate",
            "org.apache.dubbo.config.ProviderConfigTest#testPort",
            "org.apache.dubbo.config.MonitorConfigTest#testUsername",
            "org.apache.dubbo.common.logger.slf4j.Slf4jLoggerTest#testLocationAwareLogger",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Execute_Error",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigPerson_WithType",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWrite3",
            "org.apache.dubbo.common.logger.LoggerTest#testAllLogMethod[0]",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_PersonList",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Request_Event_Object",
            "org.apache.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrarTest#testRegisterBeanDefinitionsForMultiple",
            "org.apache.dubbo.common.utils.StackTest#testIllegalRemove",
            "org.apache.dubbo.metrics.MetricNameTest#testEmptyResolve",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringSet",
            "org.apache.dubbo.common.io.BytesTest#testSmallLength",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testNettyServer",
            "org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testBye",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#writerIndexBoundaryCheck4",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testTimeoutConfig",
            "org.apache.dubbo.config.ProtocolConfigTest#testNetworker",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringArray",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BizExceptionNoDefaultConstructor_WithType",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testEncodeExceptionResponse",
            "org.apache.dubbo.config.MethodConfigTest#testRetry",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomByteBufferTransfer",
            "org.apache.dubbo.config.spring.context.annotation.DubboConfigConfigurationTest#testSingle",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getOrAddChannelTest00",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_UtfString",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerInvoke_forcemock",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.LogTelnetHandlerTest#testChangeLogLevel",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#writerIndexBoundaryCheck3",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testIsEmpty",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_boolArray",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testSubscribeAnyValue",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_hasExtension_wrapperIsNotExt",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testArrayMerger",
            "org.apache.dubbo.config.ConsumerConfigTest#testCorethreads",
            "org.apache.dubbo.common.bytecode.WrapperTest#testGetPropertyValue",
            "org.apache.dubbo.config.MethodConfigTest#testOninvokeMethod",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#lookupTest",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BizException_WithType",
            "org.apache.dubbo.qos.textui.TKvTest#test2",
            "org.apache.dubbo.config.ApplicationConfigTest#testQosAcceptForeignIp",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonSerializationTest#testObjectOutput",
            "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest#testRoute_createBySpi",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadBytes",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_NotifiedDubbo1",
            "org.apache.dubbo.rpc.cluster.support.FailfastClusterInvokerTest#testInvokeExceptoin",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_IntegerArray_withType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#copyBoundaryCheck3",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendAttributes2",
            "org.apache.dubbo.config.MethodConfigTest#testStat",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Short",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteBufferBoundaryCheck",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringArray",
            "org.apache.dubbo.config.spring.extension.SpringExtensionFactoryTest#testGetExtensionByTypeMultiple",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testPerformance",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Encode_Request",
            "org.apache.dubbo.config.MethodConfigTest#testOnreturnMethod",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_InjectNotExtFail",
            "org.apache.dubbo.config.AbstractConfigTest#checkMultiName",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_SPerson",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteBufferBoundaryCheck",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testGetLogger[2]",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigPerson",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#writerIndexBoundaryCheck2",
            "org.apache.dubbo.registry.support.FailbackRegistryTest#testDoRetry",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#readerIndexBoundaryCheck1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_SPersonListList",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetHostName",
            "org.apache.dubbo.config.AbstractConfigTest#checkKey",
            "org.apache.dubbo.config.ProtocolConfigTest#testCodec",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringList_asListReturn",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertSubscribe",
            "org.apache.dubbo.rpc.cluster.support.FailoverClusterInvokerTest#testNoInvoke",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testNewInstance2",
            "org.apache.dubbo.config.spring.context.annotation.DubboConfigConfigurationTest#testMultiple",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomDirectBufferTransfer",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_Notified_acceptProtocol2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Integer",
            "org.apache.dubbo.common.utils.StringUtilsTest#testJoinCollectionString",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#copyBoundaryCheck4",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testPublicField",
            "org.apache.dubbo.rpc.cluster.StickyTest#testMethodsSticky",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteBufferTransfer",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteBool",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_twoway_error_reqeustBroken",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testIsPojo",
            "org.apache.dubbo.config.ServiceConfigTest#testProxy",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testSortNull",
            "org.apache.dubbo.common.utils.AssertTest#testNotNull1",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_inject",
            "org.apache.dubbo.common.bytecode.WrapperTest#test_getMethodNames_ContainExtendsParentMethods",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetSystemProperty",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtension",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_EnumArray_withType",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testWriteNull",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_LongWrap_withType",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNull[3]",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testAttachInvocationIdIfAsync_forceAttache",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendProperties2",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_EnumArray",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testLookup",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_urlHolder_getAdaptiveExtension_ExceptionWhenNameNotProvided",
            "org.apache.dubbo.config.ApplicationConfigTest#testOrganization",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteBoundaryCheck1",
            "org.apache.dubbo.container.log4j.Log4jContainerTest#testContainer",
            "org.apache.dubbo.common.serialize.support.SerializableClassRegistryTest#testAddClasses",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_SPersonSet",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_URL_mutable_withType",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_Primitive0",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testOverload",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_PersonSet",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesOneFile",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#copyBoundaryCheck1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BizException_WithType",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testGetEmptyUrl",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_PojoArray",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_Provider",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboLazyConnectTest#testSticky3",
            "org.apache.dubbo.config.spring.context.annotation.DubboComponentScanRegistrarTest#test",
            "org.apache.dubbo.common.serialize.fst.FstSerializationTest#testContentTypeId",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialDirectBufferTransfer1",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_Backspace_WithError",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_disabled_specifiedProvider",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_doubleArray",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#copyBoundaryCheck3",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendParameters4",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#TestCallbackProviderLimit",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testUnregister",
            "org.apache.dubbo.config.spring.context.annotation.DubboConfigBindingsRegistrarTest#test",
            "org.apache.dubbo.common.bytecode.WrapperTest#testMain",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testHttpClient",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_IntegerArray",
            "org.apache.dubbo.rpc.cluster.support.FailoverClusterInvokerTest#testInvokerDestroyAndReList",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.CurrentTelnetHandlerTest#testService",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testExport",
            "org.apache.dubbo.common.io.BytesTest#testBase64S2b2sFailCaseLog",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_ByteWrap",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomByteAccess",
            "org.apache.dubbo.config.AbstractConfigTest#checkPathName",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_PersonListList",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testMapArrayMerger",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testDocument",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testRecover2",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testOffer1",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testLoadbalance",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertNotify2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_LongWrap",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testEmptyLine",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeSimpleName",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testCharArrayMerger",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testSimpleClient",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialDirectBufferTransfer2",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testDubboProtocol",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_LongWrap_withType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomHeapBufferTransfer1",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testAccesslog",
            "org.apache.dubbo.rpc.cluster.configurator.absent.AbsentConfiguratorTest#testOverrideApplication",
            "org.apache.dubbo.monitor.support.MonitorFilterTest#testGenericFilter",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#readerIndexBoundaryCheck2",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilterTest#testInvokeGreaterActives",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_protocolKey",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_floatArray",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testNotify",
            "org.apache.dubbo.config.url.InvokerSideConfigUrlTest#consumerConfUrlTest",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testDefaultPort",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testToByteBuffer1",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftUtilsTest#testGenerateMethodResultClassNameThrift",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetName",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_String_MiddleWithEnter",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testBeanSerialize",
            "org.apache.dubbo.rpc.filter.GenericFilterTest#testInvokeWithJavaException",
            "org.apache.dubbo.monitor.support.MonitorFilterTest#testSkipMonitorIfNotHasKey",
            "org.apache.dubbo.config.ModuleConfigTest#testOwner",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testGetEnumNameProperty",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest#test_Lazy_ChannelReadOnly",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testOffer4",
            "org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test3",
            "org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvokerTest#testDelegate",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testLongArrayMerger",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteShort",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Date_withType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialCopiedBufferTransfer1",
            "org.apache.dubbo.config.ConsumerConfigTest#testQueues",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_EnumArray",
            "org.apache.dubbo.remoting.transport.netty.ClientsTest#testGetTransportWrong",
            "org.apache.dubbo.common.URLTest#test_valueOf_Exception_noProtocol",
            "org.apache.dubbo.remoting.transport.netty.NettyClientTest#testClientClose",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testShortArrayMerger",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#readerIndexBoundaryCheck1",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testGenerializeAndRealizeClass",
            "org.apache.dubbo.config.spring.util.BeanFactoryUtilsTest#testGetBeansIfAbsent",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#setIndexBoundaryCheck2",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer1",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsCompatible",
            "org.apache.dubbo.registry.PerformanceRegistryTest#testRegistry",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_customizeAdaptiveKey",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Date",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#initialState",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteObject",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#readerIndexBoundaryCheck3",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testSize",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testOndisconnect",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_doubleArray_withType",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testDelayFixedTime",
            "org.apache.dubbo.common.utils.LogUtilTest#testCheckNoError",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getRemoteAddressTest",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Ex_Onthrow",
            "org.apache.dubbo.common.utils.NamedThreadFactoryTest#testNewThread",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendAttributes1",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testOnconnect",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendProperties3",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvokeDefaultSService",
            "org.apache.dubbo.config.ApplicationConfigTest#testOwner",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Bool",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testStreamTransfer2",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteBoundaryCheck2",
            "org.apache.dubbo.common.io.StreamUtilsTest#testSkipForOriginMarkSupportInput",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_ByteWrap",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Long",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_URL_mutable_withType",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MediaContent_WithType",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_Backspace",
            "org.apache.dubbo.common.URLTest#testIpV6Address",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigPerson",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofity_To_Decrease_provider",
            "org.apache.dubbo.config.ProviderConfigTest#testStatus",
            "org.apache.dubbo.rpc.filter.EchoFilterTest#testEcho",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_event_other_discard",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testActives",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Error_Request_Object",
            "org.apache.dubbo.common.utils.NetUtilsTest#testToURL",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialHeapBufferTransfer2",
            "org.apache.dubbo.common.utils.NetUtilsTest#testValidAddress",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_Clean1",
            "org.apache.dubbo.config.ConsumerConfigTest#testTimeout",
            "org.apache.dubbo.config.ReferenceConfigTest#testReferenceRetry",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#writerIndexBoundaryCheck3",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringSPersonMap",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testMerger",
            "org.apache.dubbo.config.spring.initializer.DubboApplicationListenerTest#testTwoShutdownHook",
            "org.apache.dubbo.config.ServiceConfigTest#testGeneric1",
            "org.apache.dubbo.config.ProtocolConfigTest#testDefault",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringSPersonListMap",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testRegFail",
            "org.apache.dubbo.config.spring.extension.SpringExtensionFactoryTest#testGetExtensionByName",
            "org.apache.dubbo.rpc.cluster.StickyTest#testStickyNoCheck",
            "org.apache.dubbo.monitor.support.AbstractMonitorFactoryTest#testMonitorFactoryCache",
            "org.apache.dubbo.common.status.support.StatusUtilsTest#testGetSummaryStatus1",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftUtilsTest#testGenerateMethodArgsClassNameThrift",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyoverrideUrls_beforeInvoker",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testSubscribeIfUrlNull",
            "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest#testRoute_requestWithoutTag_shouldNotDowngrade",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MediaContent_badStream",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_IntegerArray_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Person",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testResulthasException",
            "org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolTest#getExecutor2",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_AddExtension_ExceptionWhenExistedExtension",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteBytesWithSubLength",
            "org.apache.dubbo.rpc.filter.EchoFilterTest#testNonEcho",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigDecimal",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testMergeValuesDeleteDefault",
            "org.apache.dubbo.config.ProviderConfigTest#testDispatcher",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_boolArray",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNonArgsMethod[2]",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_Backspace_WithError",
            "org.apache.dubbo.rpc.cluster.router.script.ScriptRouterTest#testRouteReturnAll",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteArrayTransfer2",
            "org.apache.dubbo.common.logger.LoggerFactoryTest#testGetLogFile",
            "org.apache.dubbo.config.ProtocolConfigTest#testOptimizer",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_intArray",
            "org.apache.dubbo.common.utils.StackTest#testOps",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Error_Response_Object",
            "org.apache.dubbo.common.store.support.SimpleDataStoreTest#testRemove",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#initialState",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getOrAddChannelTest02",
            "org.apache.dubbo.common.io.StreamUtilsTest#testReadEmptyByteArray",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testIntArrayMerger",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testValues",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteFloat",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringArray_withType",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testToMap1",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSkipBytes1",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testInvaildMessage",
            "org.apache.dubbo.config.spring.status.DataSourceStatusCheckerTest#testWithoutApplicationContext",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_force_throwCustemExceptionNotFound",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testSubscribeAndUnsubscribe",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testRead",
            "org.apache.dubbo.config.AbstractConfigTest#checkMethodName",
            "org.apache.dubbo.rpc.cluster.directory.StaticDirectoryTest#testStaticDirectory",
            "org.apache.dubbo.common.serialize.fst.FstFactoryTest#testDefaultFactory",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testParametersMerge",
            "org.apache.dubbo.common.URLTest#test_valueOf_noProtocol",
            "org.apache.dubbo.registry.redis.RedisRegistryTest#testAnyHost",
            "org.apache.dubbo.rpc.protocol.rmi.RmiProtocolTest#testRmiProtocol",
            "org.apache.dubbo.config.ModuleConfigTest#testMonitor",
            "org.apache.dubbo.config.MethodConfigTest#testOnthrowMethod",
            "org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationPropertyValuesAdapterTest#test",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#sendTest02",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testGenericInvokeWithNativeJava",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MediaContent_badStream",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_ReturnAll",
            "org.apache.dubbo.container.spring.SpringContainerTest#testContainer",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testListPojoListPojo",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testWrongParameters",
            "org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test2",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboLazyConnectTest#testSticky1",
            "org.apache.dubbo.common.bytecode.ProxyTest#testMain",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomByteArrayTransfer1",
            "org.apache.dubbo.common.utils.LRUCacheTest#testCapacity",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringArray_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BizExceptionNoDefaultConstructor",
            "org.apache.dubbo.rpc.cluster.loadbalance.ConsistentHashLoadBalanceTest#testLoadBalanceWarmup",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Long",
            "org.apache.dubbo.rpc.cluster.support.FailSafeClusterInvokerTest#testNoInvoke",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testExecuteRunnableWithDefaultExecutor",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelect_multiInvokers",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadShort",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkInterfaceAndMethods1",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetBeanPropertyReadMethods",
            "org.apache.dubbo.config.ProtocolConfigTest#testAccesslog",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangePath",
            "org.apache.dubbo.common.URLTest#test_addParameters",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testWrongAuthRedis",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Encode_Response",
            "org.apache.dubbo.monitor.dubbo.StatisticsTest#testEquals",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#readerIndexBoundaryCheck2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Date",
            "org.apache.dubbo.common.utils.NetUtilsTest#testToAddress",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testModule",
            "org.apache.dubbo.common.utils.NetUtilsTest#testNormalizeV6Address",
            "org.apache.dubbo.rpc.filter.AccessLogFilterTest#testCustom",
            "org.apache.dubbo.config.MonitorConfigTest#testInterval",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_defaultAdaptiveKey",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_UtfString",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_matchFilter",
            "org.apache.dubbo.qos.command.util.CommandHelperTest#testHasCommand",
            "org.apache.dubbo.common.io.StreamUtilsTest#testLimitedInputStream",
            "org.apache.dubbo.common.serialize.fst.FstObjectInputTest#testWrongClassInput",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testReferClass",
            "org.apache.dubbo.common.bytecode.ProxyTest#testCglibProxy",
            "org.apache.dubbo.common.utils.StringUtilsTest#testGetServiceKey",
            "org.apache.dubbo.rpc.filter.GenericImplFilterTest#testInvoke",
            "org.apache.dubbo.rpc.cluster.support.FailbackClusterInvokerTest#testNoInvoke",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testInit",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_shortArray_withType",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringArrayList",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringPersonListMap",
            "org.apache.dubbo.rpc.protocol.webservice.WebserviceProtocolTest#testDemoProtocol",
            "org.apache.dubbo.rpc.filter.AccessLogFilterTest#testInvokeException",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotified_WithDuplicateUrls",
            "org.apache.dubbo.common.utils.NetUtilsTest#testToAddressString",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_UtfString",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock1",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BizExceptionNoDefaultConstructor",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_String_WithEnter",
            "org.apache.dubbo.config.ApplicationConfigTest#testVersion",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseUrl2",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialDirectBufferTransfer1",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Body_Need_Readmore",
            "org.apache.dubbo.common.logger.LoggerFactoryTest#testLoggerLevel",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetPropertyFromSystem",
            "org.apache.dubbo.config.ModuleConfigTest#testOrganization",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MediaContent",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testInvokerGeneric",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteArrayTransfer1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_SPerson",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_String_ClientSide",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testMethodWithArgs[0]",
            "org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testUnknownCommand",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Double",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_CloseCallback",
            "org.apache.dubbo.config.ProtocolConfigTest#testAccepts",
            "org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testGreeting",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#isClosedTest",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_Loop_pojo",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_InjectNotExtFail",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetDescMethod",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testGenericInvokeWithBean",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testByteArrayTransfer",
            "org.apache.dubbo.rpc.filter.ContextFilterTest#testSetContext",
            "org.apache.dubbo.qos.textui.TTableTest#test1",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Encode_Error_Response",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Date",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtensionLoader_NotSpiAnnotation",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Sync_NoFuture",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.CurrentTelnetHandlerTest#testMessageError",
            "org.apache.dubbo.metrics.MetricNameTest#testResolveBothEmpty",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#requestTest02",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer2",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_Force",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getDirectByteBufferState",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendParameters2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_StringSPersonMap",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetRandomPort",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringSet",
            "org.apache.dubbo.metrics.MetricNameTest#testTaggedNotPairs",
            "org.apache.dubbo.validation.filter.ValidationFilterTest#testItWithNotExistClass",
            "org.apache.dubbo.config.validation.ValidationTest#testProviderValidation",
            "org.apache.dubbo.serialization.SerializationTest#testContentTypeId",
            "org.apache.dubbo.rpc.filter.tps.StatItemTest#testIsAllowable",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftUtilsTest#testGenerateMethodResultClassName",
            "org.apache.dubbo.config.ProviderConfigTest#testIothreads",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSetEnumNameProperty",
            "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest#testRoute_requestWithTag_shouldDowngrade",
            "org.apache.dubbo.metrics.MetricManagerTest#testBucketCounter",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_replaceExtension_Adaptive_ExceptionWhenNotExistedExtension",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_charArray_withType",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#setIndexBoundaryCheck2",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testDoubleArrayMerger",
            "org.apache.dubbo.config.utils.ReferenceConfigCacheTest#testGetCacheSameReference",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_urlHolder_getAdaptiveExtension_ExceptionWhenNotAdativeMethod",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteUTF",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindThread",
            "org.apache.dubbo.registry.support.FailbackRegistryTest#testDoRetry_register",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteNullBytes",
            "org.apache.dubbo.config.MethodConfigTest#testSticky",
            "org.apache.dubbo.common.bytecode.ClassGeneratorTest#testMain",
            "org.apache.dubbo.common.threadpool.support.fixed.FixedThreadPoolTest#getExecutor1",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testToMap2",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_ExceptionWhenNotAdaptiveMethod",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_MigicCodec_Contain_ExchangeHeader",
            "org.apache.dubbo.config.ProtocolConfigTest#testPort",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Date_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringArrayList",
            "org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testPrompt",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getDirectByteBufferBoundaryCheck",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetProperty",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_String_WithEnter",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#readerIndexBoundaryCheck2",
            "org.apache.dubbo.common.extension.ExtensionLoader_Compatible_Test#test_getExtension",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_getAdaptiveExtension_ExceptionWhenNoAdaptiveMethodOnInterface",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#copyBoundaryCheck1",
            "org.apache.dubbo.config.RegistryConfigTest#testSession",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testClientHeartbeat",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Short",
            "org.apache.remoting.transport.mina.MinaClientToServerTest#testFuture",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_intArray",
            "org.apache.dubbo.config.utils.ReferenceConfigCacheTest#testGetCacheDiffName",
            "org.apache.dubbo.common.concurrent.CompletableFutureTaskTest#testCustomExecutor",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testUnsubscribeIfNotifyNull",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_SPersonListList",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testBooleanArrayMerger",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotified_Normal_withRouters",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_URL_mutable_withType",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_String_ClientSide",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_SPerson_withType",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testSplitAll",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer1",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testDefaultProtocol",
            "org.apache.dubbo.registry.dubbo.RegistryStatusCheckerTest#testCheckOK",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteFloat",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteNullBytesWithSubLength",
            "org.apache.dubbo.filter.FilterTest#testDefault",
            "org.apache.dubbo.config.ProtocolConfigTest#testQueues",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteArrayTransfer2",
            "org.apache.dubbo.remoting.transport.netty4.ClientsTest#testGetTransportWrong",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testSerialization",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Integer",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testName2Class",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testLoadMonitor",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandlerTest#testInvokeToString",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_LoopReference",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteInt",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringPersonListMap",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testStreamTransfer1",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#writerIndexBoundaryCheck2",
            "org.apache.dubbo.config.ProtocolConfigTest#testHost",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testStreamTransfer1",
            "org.apache.dubbo.rpc.cluster.router.file.FileRouterEngineTest#testRouteNotAvailable",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_IntPersonMap",
            "org.apache.dubbo.rpc.protocol.rmi.RmiProtocolTest#testRmiProtocol_echoService",
            "org.apache.dubbo.config.spring.initializer.DubboApplicationContextInitializerTest#testMetadataComplete",
            "org.apache.dubbo.config.ReferenceConfigTest#testInjvm",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsBeanPropertyReadMethod",
            "org.apache.dubbo.rpc.filter.TokenFilterTest#testInvokeWithToken",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_SPersonSet",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testMergeValues",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testOnconnect",
            "org.apache.dubbo.rpc.filter.TimeoutFilterTest#testInvokeWithoutTimeout",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#writerIndexBoundaryCheck3",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testMethodWithArgs[1]",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getDirectByteBufferBoundaryCheck",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#startProvider",
            "org.apache.dubbo.common.utils.NetUtilsTest#testFilterLocalHost",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessorTest#test",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringList_asListReturn",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#TestCallbackNormal",
            "org.apache.dubbo.common.io.UnsafeByteArrayOutputStreamTest#testExtendLengthForBuffer",
            "org.apache.dubbo.common.utils.ExecutorUtilTest#testIsTerminated",
            "org.apache.dubbo.monitor.support.AbstractMonitorFactoryTest#testMonitorFactoryIpCache",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListService",
            "org.apache.dubbo.config.MonitorConfigTest#testAddress",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#readerIndexBoundaryCheck3",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Bool",
            "org.apache.dubbo.common.threadpool.support.limited.LimitedThreadPoolTest#getExecutor2",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Connect_Biz_Error",
            "org.apache.dubbo.rpc.cluster.loadbalance.RoundRobinLoadBalanceTest#testRoundRobinLoadBalanceSelect",
            "org.apache.dubbo.common.URLTest#test_getAbsolutePath",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigPerson",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testGetLogger[1]",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSerializeJavaBeanDescriptor",
            "org.apache.dubbo.common.bytecode.WrapperTest#testWrapperObject",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Time",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testSet",
            "org.apache.dubbo.registry.dubbo.RegistryStatusCheckerTest#testCheckUnknown",
            "org.apache.dubbo.remoting.PerformanceServerTest#testServer",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Long",
            "org.apache.dubbo.rpc.filter.GenericImplFilterTest#testInvokeWithException",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#writerIndexBoundaryCheck2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_enum_withType",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWrite2",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatch",
            "org.apache.dubbo.rpc.filter.ExceptionFilterTest#testJavaException",
            "org.apache.dubbo.config.spring.extension.SpringExtensionFactoryTest#testGetExtensionByType",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testStub",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testFilter",
            "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest#testGetInvoker",
            "org.apache.dubbo.config.RegistryConfigTest#testProtocol",
            "org.apache.dubbo.metrics.MetricNameTest#testResolveToEmpty",
            "org.apache.dubbo.config.RegistryConfigTest#testPassword",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testSetAndGet",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_longArray",
            "org.apache.dubbo.remoting.transport.netty4.NettyClientToServerTest#testFuture",
            "org.apache.dubbo.common.json.JSONTest#testMapArray",
            "org.apache.dubbo.metrics.MetricNameTest#testResolveWithoutTags",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testLayer",
            "org.apache.dubbo.config.ServiceConfigTest#testExport",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#writerIndexBoundaryCheck1",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testList",
            "org.apache.dubbo.common.io.UnsafeStringReaderTest#testRead",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testException",
            "org.apache.dubbo.registry.redis.RedisRegistryTest#testAvailableWithBackup",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testFilter",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindMessage2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MediaContent_WithType_badStream",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofityOverrideUrls_disabled_allProvider",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#closeTest",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_someMethods",
            "org.apache.dubbo.monitor.support.MonitorFilterTest#testSafeFailForMonitorCollectFail",
            "org.apache.dubbo.metrics.MetricNameTest#testEmpty",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Person",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_PojoInList",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Header_Response_Heartbeat",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_boolArray",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock3",
            "org.apache.dubbo.config.ApplicationConfigTest#testDefault",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_ListString",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testWeakCompareAndSet1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigInteger_withType",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testAddRunnableToExecutor",
            "org.apache.dubbo.config.MethodConfigTest#testDeprecated",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Short",
            "org.apache.dubbo.config.spring.status.SpringStatusCheckerTest#testWithLifeCycleRunning",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetSignature",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_LoopPojoInList",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testMultiProtocol",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testCloseAvailablecheck",
            "org.apache.dubbo.config.RegistryConfigTest#testTransporter",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteArrayBoundaryCheck1",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteArrayTransfer1",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_SPerson_withType",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testSetMerger",
            "org.apache.dubbo.rpc.cluster.loadbalance.ConsistentHashLoadBalanceTest#testConsistentHashLoadBalance",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_get_and_set",
            "org.apache.dubbo.config.GenericServiceTest#testGenericInvokeWithBeanSerialization",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilterTest#testExecuteLimitInvokeWitException",
            "org.apache.dubbo.config.ApplicationConfigTest#testMonitor",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testDesc2Class",
            "org.apache.dubbo.common.bytecode.WrapperTest#testNoSuchMethod",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSerialize_Array",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testRegister",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_String_MiddleWithEnter",
            "org.apache.dubbo.rpc.protocol.dubbo.RpcFilterTest#testRpcFilter",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#copyBoundaryCheck2",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testExecutes",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testGeneralizePersons",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testAvailable",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#removeAttributeTest",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testPojoList",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_checkCompatible_return",
            "org.apache.dubbo.config.ArgumentConfigTest#testIndex",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Byte_Multi",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testStreamTransfer1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_EnumArray_withType",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtension_ExceptionNullArg",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_IntegerArray",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelectAgainAndCheckAvailable",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteBytes",
            "org.apache.dubbo.config.ApplicationConfigTest#testName",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getDirectByteBufferBoundaryCheck",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Float",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadDouble",
            "org.apache.dubbo.remoting.handler.HeaderExchangeHandlerTest#test_received_request_oneway",
            "org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeHttp",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvaildMessage",
            "org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessorTest#test",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BizExceptionNoDefaultConstructor",
            "org.apache.dubbo.registry.redis.RedisRegistryTest#testAvailable",
            "org.apache.dubbo.config.spring.util.BeanFactoryUtilsTest#testGetOptionalBean",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Disconnect_Biz_Error",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Header_Response_NoSerializationFlag",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Byte_Multi",
            "org.apache.dubbo.common.URLTest#test_addParameters_SameKv",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_UPorDOWN_WithError",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomHeapBufferTransfer2",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteArrayTransfer1",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigDecimal_withType",
            "org.apache.dubbo.rpc.StaticContextTest#testGetContext",
            "org.apache.dubbo.common.compiler.support.JavassistCompilerTest#testCompileJavaClassWithImport",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringSPersonListMap",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Bytes",
            "org.apache.dubbo.config.MethodConfigTest#testExecutes",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testNotifyOverride_notmatch",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNofity_disabled_specifiedProvider",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#sendTest04",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testCompareAndSet2",
            "org.apache.dubbo.generic.GenericServiceTest#testGeneric2",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testSkipZero",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_SPersonListList",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboLazyConnectTest#testSticky4",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomHeapBufferTransfer2",
            "org.apache.dubbo.config.ApplicationConfigTest#testQosPort",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testLevel[0]",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#copyBoundaryCheck4",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testServerHeartbeat",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#writerIndexBoundaryCheck1",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testFloatArrayMerger",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSetClassNameProperty",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testWrongRedis",
            "org.apache.dubbo.common.io.BytesTest#testHex",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testDelay",
            "org.apache.dubbo.config.ConfigTest#testConfig",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_Constructor_WithErrorParam",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testAttachInvocationIdIfAsync_nullAttachments",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getAttributeAndSetAttributeTest",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testInternalThreadLocal",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testMessageLengthExceedPayloadLimitWhenEncode",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomByteAccess",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testCheckExists",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testGetAndAnd",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testDemoProtocol",
            "org.apache.dubbo.rpc.RpcContextTest#testAddress",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testSticky",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_intArray_withType",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#equalsTest",
            "org.apache.dubbo.remoting.transport.AbstractCodecTest#test_checkPayload_minusPayloadNoLimit",
            "org.apache.dubbo.config.ProviderConfigTest#testContextPath",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MediaContent_WithType_badStream",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testStatusChecker",
            "org.apache.dubbo.rpc.protocol.injvm.InjvmProtocolTest#testLocalProtocol",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_WithFailDefault",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodName2",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testCluster",
            "org.apache.dubbo.config.spring.context.annotation.EnableDubboConfigTest#testMultiple",
            "org.apache.dubbo.remoting.transport.netty.ClientsTest#testGetTransportNull",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsAnyHost",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomDirectBufferTransfer",
            "org.apache.dubbo.rpc.protol.rest.RestProtocolTest#testRestProtocolWithContextPath",
            "org.apache.dubbo.common.io.BytesTest#testWrongBase64Code",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testToByteBuffer1",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotify_MockProviderOnly",
            "org.apache.dubbo.metrics.MetricNameTest#testJoinWithLevel",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testCustomParameter",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testUnsubscribe",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testInvoke",
            "org.apache.dubbo.monitor.support.MonitorFilterTest#testFilter",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#setIndexBoundaryCheck3",
            "org.apache.dubbo.common.json.JSONTest#testParse2Arguments",
            "org.apache.dubbo.config.ProtocolConfigTest#testKeepAlive",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testExceptionForExecutor",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorTest#testAvailable",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BizException",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNonArgsMethod[3]",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_LoopReference",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#startCloseTest",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testSortSimpleName",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Received_InvokeInExecuter",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_longArray",
            "org.apache.dubbo.rpc.filter.CompatibleFilterFilterTest#testInvokerJsonPojoSerialization",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MultiObject_WithType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomByteAccess",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testDestroy",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_EnumArray",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_ExceptionWhenNoUrlAttribute",
            "org.apache.dubbo.common.utils.ClassHelperTest#testForName2",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_IntSPersonMap",
            "org.apache.dubbo.rpc.RpcContextTest#testObject",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_SPersonList",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_replaceExtension_ExceptionWhenNotExistedExtension",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.CurrentTelnetHandlerTest#testSlash",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testForName2",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_defaultAdaptiveKey",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClientTest#testCheckExists",
            "org.apache.dubbo.rpc.protocol.injvm.InjvmProtocolTest#testIsInjvmRefer",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_PersonListList",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigPerson",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest#test_Normal_ChannelReadOnly",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testGetPrimitiveProperty",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsPrimitives",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testLocal",
            "org.apache.dubbo.common.utils.StringUtilsTest#testExceptionToString",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest#testModuleInfo",
            "org.apache.dubbo.common.URLTest#testUserNamePasswordContainsAt",
            "org.apache.dubbo.registry.support.AbstractRegistryFactoryTest#testRegistryFactoryGroupCache",
            "org.apache.dubbo.rpc.cluster.loadbalance.LoadBalanceBaseTest#testLoadBalanceWarmup",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_charArray",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#hasAttributeTest",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testMapField",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testAsync",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadBool",
            "org.apache.dubbo.rpc.cluster.configurator.absent.AbsentConfiguratorTest#testOverrideHost",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testRpcContextFilter",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendParameters1",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testIsDefault",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_Map_List_pojo",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonSerializationTest#testContentType",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertForbid3",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testBoxedAndUnboxed",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MediaContent",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertForbid",
            "org.apache.dubbo.config.ProviderConfigTest#testHost",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest#testListDetail",
            "org.apache.dubbo.common.logger.LoggerTest#testLevelEnable[1]",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testConvertRegister2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringSPersonMap",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer2",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyRouterUrls_Clean",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testStubevent",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#setIndexBoundaryCheck1",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testExport",
            "org.apache.dubbo.config.MonitorConfigTest#testVersion",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftUtilsTest#testGenerateMethodArgsClassName",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest#testListAllPort",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_protocolKey",
            "org.apache.dubbo.remoting.transport.AbstractCodecTest#test_checkPayload_default8M",
            "org.apache.dubbo.rpc.cluster.StickyTest#testMethodStickyNoCheck",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialDirectBufferTransfer2",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testWithInvalidServer",
            "org.apache.dubbo.config.ConsumerConfigTest#testThreads",
            "org.apache.dubbo.rpc.filter.AccessLogFilterTest#testDefault",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonSerializationTest#testContentTypeId",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_urlHolder_getAdaptiveExtension_UrlNpe",
            "org.apache.dubbo.config.AbstractConfigTest#checkMultiExtension2",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testGetCustomPort",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomHeapBufferTransfer1",
            "org.apache.dubbo.config.AbstractConfigTest#checkMultiExtension1",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringList_asListReturn",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilterTest#testExecuteLimitInvoke",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_ByteWrap_withType",
            "org.apache.dubbo.config.ServiceConfigTest#testUnexport",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_containsProperty",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#test_Notified_acceptProtocol0",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_String_NoEnter",
            "org.apache.dubbo.rpc.filter.DeprecatedFilterTest#testDeprecatedFilter",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadObject",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getChannelHandlerTest",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorTest#testSum",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Bytes",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testDestroy",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getDefaultExtension_NULL",
            "org.apache.dubbo.remoting.transport.netty.ClientReconnectTest#testReconnectWarnLog",
            "org.apache.dubbo.rpc.cluster.loadbalance.LeastActiveBalanceTest#testLeastActiveLoadBalance_select",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkApplication1",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testMethodWithArgs[2]",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_LongWrap_withType",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testLevel[4]",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Request_Heartbeat_Object",
            "org.apache.dubbo.common.threadpool.support.eager.EagerThreadPoolExecutorTest#testSPI",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testWeakCompareAndSet2",
            "org.apache.dubbo.common.utils.StringUtilsTest#testSplit",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Request_Event_String",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testLevel[1]",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadUTF",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#destroyTest",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListDetailService",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MediaContent_badStream",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testEncode_String_ClientSide",
            "org.apache.dubbo.remoting.exchange.support.DefaultFutureTest#timeoutSend",
            "org.apache.dubbo.config.spring.status.DataSourceStatusCheckerTest#testWithDatasourceNotHasNextResult",
            "org.apache.dubbo.validation.filter.ValidationFilterTest#testItWithExistClass",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest#testNoPort",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_StringSet",
            "org.apache.dubbo.config.ProviderConfigTest#testPrompt",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_charArray",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkClientWrapperTest#testConnectedStatus",
            "org.apache.dubbo.config.utils.ReferenceConfigCacheTest#testDestroyAll",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_boolArray_withType",
            "org.apache.dubbo.rpc.protocol.dubbo.FutureFilterTest#testSyncCallbackHasException",
            "org.apache.dubbo.common.utils.NamedThreadFactoryTest#testPrefixAndDaemon",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#sendTest00",
            "org.apache.dubbo.common.utils.LogHelperTest#testWarn",
            "org.apache.dubbo.config.RegistryConfigTest#testWait",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsValidAddress",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Date",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BizException",
            "org.apache.dubbo.config.ProtocolConfigTest#testCorethreads",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_simpleCollection",
            "org.apache.dubbo.common.json.JSONTest#testParse2JSONObject",
            "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest#test_counter_error",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetIpByHost",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomDirectBufferTransfer",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_LongWrap",
            "org.apache.dubbo.common.bytecode.MixinTest#testMain",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testNotifyList",
            "org.apache.dubbo.rpc.cluster.loadbalance.RandomLoadBalanceTest#testRandomLoadBalanceSelect",
            "org.apache.dubbo.metrics.MetricManagerTest#testNopCounter",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testFilter",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_mock_false",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer1",
            "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest#testGetProxy",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BizExceptionNoDefaultConstructor_WithType",
            "org.apache.dubbo.config.MethodConfigTest#testOnthrow",
            "org.apache.dubbo.config.ModuleConfigTest#testDefault",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getDirectByteBufferBoundaryCheck",
            "org.apache.dubbo.qos.protocol.QosProtocolWrapperTest#testRefer",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testIsNotEmpty",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest#test_NoInvokers",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Float",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testSubscribe",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilterTest#testNoExecuteLimitInvoke",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#getByteArrayBoundaryCheck2",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Byte_Multi",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsInvalidLocalHost",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testSubscribe2",
            "org.apache.dubbo.rpc.cluster.support.FailbackClusterInvokerTest#testInvokeNoExceptoin",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testStringMap1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringList_asListReturn",
            "org.apache.dubbo.common.utils.ClassHelperTest#testGetClassLoader1",
            "org.apache.dubbo.common.URLTest#test_set_methods",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialHeapBufferTransfer1",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testUnregisterIfUrlNull",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testExportUrlNull",
            "org.apache.dubbo.rpc.cluster.support.FailoverClusterInvokerTest#testInvokeWithRPCException",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNull[2]",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_LongWrap_withType",
            "org.apache.dubbo.common.store.support.SimpleDataStoreTest#testPutGet",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testProperty",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_LinkedHashMap",
            "org.apache.dubbo.config.ProtocolConfigTest#testParameters",
            "org.apache.dubbo.common.utils.ClassHelperTest#testForName3",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringArray",
            "org.apache.dubbo.rpc.protocol.thrift.ServiceMethodNotFoundTest#testServiceMethodNotFound",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_ListString_empty",
            "org.apache.dubbo.common.bytecode.WrapperTest#testHasMethod",
            "org.apache.dubbo.common.json.JSONTest#testMap",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testRegistry",
            "org.apache.dubbo.config.MethodConfigTest#testArguments",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_shortArray",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_intArray_withType",
            "org.apache.dubbo.metrics.MetricManagerTest#testNOPCompass",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigDecimal",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindConstructor",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#copyBoundaryCheck3",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testPerm",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendProperties1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Bytes",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSkipBytes1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_doubleArray_withType",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteBufferTransfer",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_ByteWrap_withType",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Connect_Blocked",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_enum",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testMockedInvokerSelect",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_charArray_withType",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testDefaultPort",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetDescConstructor",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Bytes",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#TestCallbackMultiInstans",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_shortArray",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_EnumArray_withType",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MultiObject_WithType",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_intArray_withType",
            "org.apache.dubbo.config.ProviderConfigTest#testProtocol",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Request_Event_Object",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_IntSPersonMap",
            "org.apache.dubbo.common.beanutil.JavaBeanAccessorTest#testIsAccessByField",
            "org.apache.dubbo.monitor.dubbo.DubboMonitorTest#testCount",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_boolArray_withType",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteAccess",
            "org.apache.dubbo.metrics.MetricNameTest#testTaggedNotPairs2",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testCheckRegistry1",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClientTest#testChildrenListener",
            "org.apache.dubbo.config.RegistryConfigTest#testTimeout",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNull[0]",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testRevertForbid2",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsBlank",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteBufferBoundaryCheck",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Integer",
            "org.apache.dubbo.config.spring.context.annotation.EnableDubboConfigTest#testSingle",
            "org.apache.dubbo.common.utils.StringUtilsTest#testParseQueryString",
            "org.apache.dubbo.rpc.cluster.support.FailbackClusterInvokerTest#testRetryFailed",
            "org.apache.dubbo.config.RegistryConfigTest#testVersion",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialHeapBufferTransfer2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringArrayList",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetEmptyObject",
            "org.apache.dubbo.config.AbstractConfigTest#checkExtension",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilterTest#testInvokeLessActives",
            "org.apache.dubbo.common.io.BytesTest#testBytes2HexWithWrongOffset",
            "org.apache.dubbo.config.ArgumentConfigTest#testCallback",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkInterfaceAndMethod3",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testTimeoutExceptionCode",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_AddExtension",
            "org.apache.dubbo.common.io.UnsafeStringReaderTest#testSkipTooLong",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_floatArray_withType",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getDirectByteBufferState",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_LinkedHashMap",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testChildrenPath",
            "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest#testRoute_matchDefault",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testUnsubscribeIfUrlNull",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindName",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeMessageNull",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testRandomDirectBufferTransfer",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseUrlsAddressNull",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_realize_LongPararmter_IllegalArgumentException",
            "org.apache.dubbo.common.io.UnsafeStringReaderTest#testWrongLength",
            "org.apache.dubbo.common.URLTest#test_addParameter",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialDirectBufferTransfer1",
            "org.apache.dubbo.config.ConsumerConfigTest#testClient",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_Person_ObjectOnly",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_urlHolder_getAdaptiveExtension_UrlNpe",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testInvocation",
            "org.apache.dubbo.common.utils.NetUtilsTest#testGetLocalSocketAddress",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testMergeValuesDelete",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_methodRoute",
            "org.apache.dubbo.common.utils.ParametersTest#testMap2Parameters",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_enum",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_intArray_withType",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesMultiFileNotRootPathException",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteEnum",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetGenericClassWithIndex",
            "org.apache.dubbo.metrics.MetricNameTest#testAddTagsVarious",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_intArray",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_total",
            "org.apache.dubbo.common.URLTest#test_Path",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_LongWrap",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadProperties",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvokeByPassingNullValue",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#hashCodeTest",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testLoadPropertiesMultiFileNotRootPath",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testByteArrayTransfer",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testDubbo1UrlWithGenericInvocation",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_String_ClientSide",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringArray",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteArrayTransfer2",
            "org.apache.dubbo.common.utils.NetUtilsTest#testIsInvalidPort",
            "org.apache.dubbo.rpc.protocol.thrift.ThriftCodecTest#testDecodeExceptionResponse",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteAccess",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testWriteCharWithWrongLength",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MediaContent",
            "org.apache.dubbo.common.compiler.support.JdkCompilerTest#test_compileJavaClass1",
            "org.apache.dubbo.rpc.protocol.dubbo.FutureFilterTest#testSyncCallback",
            "org.apache.dubbo.common.compiler.support.JavassistCompilerTest#testCompileJavaClass1",
            "org.apache.dubbo.common.logger.LoggerTest#testLevelEnable[2]",
            "org.apache.dubbo.config.MethodConfigTest#testReliable",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Person",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomByteArrayTransfer2",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Async_Future_Multi",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_checkCompatible_ImplMock",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtensionLoader_NotInterface",
            "org.apache.dubbo.common.utils.IOUtilsTest#testWrite4",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Bool",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_Null",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testMark",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_History_UP",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_Person_WithEnter",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#getUrlTest",
            "org.apache.dubbo.remoting.transport.netty4.ClientsTest#testGetTransportNull",
            "org.apache.dubbo.rpc.RpcContextTest#testGetContext",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_longArray_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_LinkedHashMap",
            "org.apache.dubbo.remoting.transport.netty.ClientReconnectTest#testReconnect",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testDestroy_WithDestroyRegistry_WithError",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testRegister",
            "org.apache.dubbo.registry.dubbo.RegistryProtocolTest#testNotifyOverride",
            "org.apache.dubbo.config.ProtocolConfigTest#testPath",
            "org.apache.dubbo.common.bytecode.WrapperTest#test_makeEmptyClass",
            "org.apache.dubbo.common.logger.LoggerFactoryTest#testGetLogger",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Check_Payload",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_longArray",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsItemMatch",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_ByteWrap",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getDefaultExtension",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_boolArray_withType",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testGeneric",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomHeapBufferTransfer2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_SPersonSet",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testIsEmpty",
            "org.apache.dubbo.config.spring.extension.SpringExtensionFactoryTest#testGetExtensionBySPI",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_History_UP",
            "org.apache.dubbo.registry.zookeeper.ZookeeperRegistryTest#testAnyHost",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyoverrideUrls_Nouse",
            "org.apache.dubbo.common.bytecode.WrapperTest#testSetPropertyValue",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testAnyHost",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Time",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_charArray",
            "org.apache.dubbo.config.utils.ReferenceConfigCacheTest#testDestroy",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteBoundaryCheck2",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testRealize",
            "org.apache.dubbo.common.logger.LoggerTest#testLevelEnable[3]",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testCopy",
            "org.apache.dubbo.common.utils.ExecutorUtilTest#testGracefulShutdown1",
            "org.apache.dubbo.metrics.MetricNameTest#testResolve",
            "org.apache.dubbo.config.ProviderConfigTest#testThreadpool",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_doubleArray",
            "org.apache.dubbo.config.ProtocolConfigTest#testDispatcher",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_getAdaptiveExtension_UrlNpe",
            "org.apache.dubbo.common.compiler.support.JavassistCompilerTest#testCompileJavaClass0",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerInvoke_normal",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testGenericInvoke",
            "org.apache.dubbo.remoting.exchange.support.DefaultFutureTest#newFuture",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringArray_withType",
            "org.apache.dubbo.qos.textui.TKvTest#test1",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MultiObject",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testParseURLWithSpecial",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_SPerson_withType",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteBytes",
            "org.apache.dubbo.common.timer.HashedWheelTimerTest#stop",
            "org.apache.dubbo.config.RegistryConfigTest#testDefault",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testParameters",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialByteArrayTransfer1",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperTransporterTest#testZookeeperClient",
            "org.apache.dubbo.common.utils.LogTest#testLogThread",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#writerIndexBoundaryCheck1",
            "org.apache.dubbo.common.utils.LogTest#testLogLevel",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilterTest#testInvoke",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetBeanPropertyFields",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_SPersonListList",
            "org.apache.dubbo.rpc.cluster.support.MergeableClusterInvokerTest#testAddMenu",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testIsPublicInstanceField",
            "org.apache.dubbo.qos.command.impl.HelpTest#testGreeting",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteBufferBackedHeapBufferTransfer2",
            "org.apache.dubbo.config.ApplicationConfigTest#testParameters",
            "org.apache.dubbo.remoting.handler.WrappedChannelHandlerTest#test_MessageReceived_Biz_Error",
            "org.apache.dubbo.remoting.transport.netty4.ClientsTest#testGetTransportEmpty",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_charArray_withType",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomByteBufferTransfer",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testCustomException",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_replaceExtension",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_hasExtension",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_BigPerson",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_shortArray",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteLong",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkInterfaceAndMethod5",
            "org.apache.dubbo.config.spring.util.BeanFactoryUtilsTest#testGetOptionalBeanIfAbsent",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_EnumArray_withType",
            "org.apache.dubbo.common.URLTest#test_addParameter_sameKv",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Error_Length",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperTransporterTest#testZookeeperClient",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_String",
            "org.apache.dubbo.rpc.filter.GenericImplFilterTest#testInvokeWith$Invoke",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#setIndexBoundaryCheck2",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetMethodName",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testEncode_String_ClientSide",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testWriteCharWithWrongCombineLength",
            "org.apache.dubbo.common.utils.StringUtilsTest#testReplace",
            "org.apache.dubbo.common.timer.HashedWheelTimerTest#newTimeout",
            "org.apache.dubbo.filter.FilterTest#testInvokeException",
            "org.apache.dubbo.common.utils.StackTest#testIllegalPeek",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_shortArray_withType",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNonArgsMethod[0]",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BigInteger_withType",
            "org.apache.dubbo.remoting.buffer.ChannelBufferStreamTest#testAll",
            "org.apache.dubbo.metrics.MetricNameTest#testCompareTo",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_longArray_withType",
            "org.apache.dubbo.common.io.UnsafeByteArrayOutputStreamTest#testToStringWithCharset",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testSerialize_Primitive_NUll",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Return_Response_Person",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteInt",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_Person_ObjectOnly",
            "org.apache.dubbo.rpc.protocol.injvm.ProtocolTest#test_destroyWontCloseAllProtocol",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsServiceKeyMatch",
            "org.apache.dubbo.config.spring.util.BeanFactoryUtilsTest#testGetBeans",
            "org.apache.dubbo.config.ProviderConfigTest#testPath",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testGetClassNameProperty",
            "org.apache.dubbo.common.URLTest#test_valueOf_WithProtocolHost",
            "org.apache.dubbo.config.ServiceConfigTest#testProvider",
            "org.apache.dubbo.rpc.cluster.merger.ResultMergerTest#testByteArrayMerger",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatch2",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Time_withType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_boolArray_withType",
            "org.apache.dubbo.common.utils.DubboAppenderTest#testClear",
            "org.apache.dubbo.cache.CacheTest#testCacheFactory",
            "org.apache.dubbo.common.logger.LoggerAdapterTest#testGetLogger[0]",
            "org.apache.dubbo.rpc.protocol.rest.RestProtocolTest#testDefaultPort",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Float",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Short",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testDecrementAndGet",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Received_Event_invoke_direct",
            "org.apache.dubbo.common.bytecode.WrapperTest#testInvokeWrapperObject",
            "org.apache.dubbo.config.MonitorConfigTest#testParameters",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#copyBoundaryCheck4",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testAttachInvocationIdIfAsync_forceNotAttache",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Integer",
            "org.apache.dubbo.generic.GenericServiceTest#testGeneric",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_SPersonList",
            "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest#test_share_connect",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testRecover",
            "org.apache.dubbo.config.MonitorConfigTest#testGroup",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_LoopReference",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testDecode_BlankMessage",
            "org.apache.dubbo.remoting.transport.netty4.ClientsTest#testGetTransport3",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testGetAndIncrement",
            "org.apache.dubbo.monitor.support.AbstractMonitorFactoryTest#testMonitorFactoryGroupCache",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_intArray_withType",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomByteArrayTransfer1",
            "org.apache.dubbo.rpc.cluster.loadbalance.LeastActiveBalanceTest#testLoadBalanceWarmup",
            "org.apache.dubbo.common.io.BytesTest#testMD5ForFile",
            "org.apache.dubbo.common.utils.ClassHelperTest#testGetCallerClassLoader",
            "org.apache.dubbo.config.AbstractConfigTest#checkLength",
            "org.apache.dubbo.common.logger.LoggerFactoryTest#testAllLogLevel",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Float",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_SPerson",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BizExceptionNoDefaultConstructor",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testConnections",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialHeapBufferTransfer1",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomByteArrayTransfer2",
            "org.apache.dubbo.rpc.protocol.rest.RpcExceptionMapperTest#testConstraintViolationException",
            "org.apache.dubbo.rpc.support.RpcUtilsTest#testGetReturnTypes",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetPropertyNameFromBeanReadMethod",
            "org.apache.dubbo.remoting.handler.WrappedChannelHandlerTest#test_Disconnect_Biz_Error",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_Fock_WithForceDefault",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Time",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_IntSPersonMap",
            "org.apache.dubbo.config.spring.context.properties.DefaultDubboConfigBinderTest#testBinder",
            "org.apache.dubbo.common.URLTest#test_addParameterIfAbsent",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BizException_WithType",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testToByteBuffer1",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testDubboProtocolMultiService",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteBytesWithSubLength",
            "org.apache.dubbo.remoting.zookeeper.curator.CuratorZookeeperClientTest#testCreateExistingPath",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_Test#test_useAdaptiveClass",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#readerIndexBoundaryCheck4",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtension_WithWrapper",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_intArray",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Integer",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testDefaultUrl",
            "org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWhenItViolatedConstraint",
            "org.apache.dubbo.common.URLTest#test_windowAbsolutePathBeginWithSlashIsValid",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Byte_Multi",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Error_Length",
            "org.apache.dubbo.remoting.handler.WrappedChannelHandlerTest#test_Connect_Biz_Error",
            "org.apache.dubbo.common.serialize.fst.FstObjectInputTest#testEmptyByteArrayForEmptyInput",
            "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest#testGetProxy",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_replaceExtension_Adaptive",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testNotifyArgs",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#writerIndexBoundaryCheck4",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Time",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_int",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListDetail",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtension_ExceptionNoExtension",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_MultiObject_WithType",
            "org.apache.dubbo.common.utils.LogTest#testLogName",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testLazy",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_IntPersonMap",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testCompareAndSet1",
            "org.apache.dubbo.remoting.transport.netty.NettyClientToServerTest#testFuture",
            "org.apache.dubbo.config.ProviderConfigTest#testWait",
            "org.apache.dubbo.config.ServiceConfigTest#testInterface1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_PersonListList",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testGet",
            "org.apache.dubbo.common.io.UnsafeStringWriterTest#testAppend",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#requestTest03",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testCallbacks",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testGenericInvoke",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_IntegerArray",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testSequentialDirectBufferTransfer1",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_LongWrap",
            "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest#testRoute_matchTag",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_doubleArray",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_WithExitByte",
            "org.apache.dubbo.config.ModuleConfigTest#testName2",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testStreamTransfer1",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Header_Need_Readmore",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testNotRunSameRunnableTwice",
            "org.apache.dubbo.config.AbstractReferenceConfigTest#testReconnect",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Bool_Multi",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#testRandomByteArrayTransfer1",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#readerIndexBoundaryCheck1",
            "org.apache.dubbo.qos.command.impl.OfflineTest#testExecute",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BizException",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testRemove",
            "org.apache.dubbo.common.utils.StackTest#testClear",
            "org.apache.dubbo.config.GenericServiceTest#testGenericReferenceException",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_BytesRange",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsInteger",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_HostFilter",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testSequentialDirectBufferTransfer2",
            "org.apache.dubbo.remoting.codec.TelnetCodecTest#testDecode_WithExitByte",
            "org.apache.dubbo.common.utils.StringUtilsTest#testToArgumentString",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testProviderXml",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_ByteWrap_withType",
            "org.apache.dubbo.common.utils.StackTest#testIllegalSet",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteDouble",
            "org.apache.dubbo.common.utils.PojoUtilsTest#testMapToInterface",
            "org.apache.dubbo.rpc.protocol.http.HttpProtocolTest#testTimeOut",
            "org.apache.dubbo.qos.command.impl.LsTest#testExecute",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_urlHolder_getAdaptiveExtension_ExceptionWhenNotAdativeMethod",
            "org.apache.dubbo.metrics.MetricManagerTest#testNOPMetricManager",
            "org.apache.dubbo.remoting.transport.netty.ThreadNameTest#testThreadName",
            "org.apache.dubbo.rpc.cluster.support.FailoverClusterInvokerTest#testInvokeWithRuntimeException",
            "org.apache.dubbo.common.utils.StackTest#testIllegalGet",
            "org.apache.dubbo.config.ServiceConfigTest#testUniqueServiceName",
            "org.apache.dubbo.registry.dubbo.RegistryDirectoryTest#testNotifyoverrideUrls_withInvoker",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testValidation",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Date_withType",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_IntPersonMap",
            "org.apache.dubbo.config.spring.initializer.DubboApplicationContextInitializerTest#testSpringContextLoaderListenerInWebXml",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testRegistries",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigDecimal",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_UtfString",
            "org.apache.dubbo.config.ConsumerConfigTest#testDefault",
            "org.apache.dubbo.common.utils.StringUtilsTest#testJoin",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testCustomedPort",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_MediaContent_WithType",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#getByteBufferState",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadObjectWithoutClass",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testModuleInfo",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_StringPersonMap",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_LoopReference",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_floatArray",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#setIndexBoundaryCheck1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_ByteWrap",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_MessageReceived_Biz_Error",
            "org.apache.dubbo.common.status.support.StatusUtilsTest#testGetSummaryStatus3",
            "org.apache.dubbo.common.utils.LogUtilTest#testFindMessage1",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#checkStubAndMock6",
            "org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterTest#testRoute_ReturnFalse",
            "org.apache.dubbo.common.utils.DubboAppenderTest#testAppend",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_StringPersonMap",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BigPerson_WithType",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#isConnectedTest",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_PersonSet",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MediaContent",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_BigDecimal_withType",
            "org.apache.dubbo.config.AbstractConfigTest#testAppendParameters3",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#getByteBoundaryCheck1",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_enum",
            "org.apache.dubbo.common.compiler.support.AdaptiveCompilerTest#testAvailableCompiler",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_checkCompatible_ImplMock2",
            "org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvokerTest#testMockInvokerFromOverride_Invoke_check_Boolean",
            "org.apache.dubbo.config.ServiceConfigTest#testInterfaceClass",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testGroup",
            "org.apache.dubbo.common.io.UnsafeStringReaderTest#testSkip",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.LogTelnetHandlerTest#testPrintLog",
            "org.apache.dubbo.common.utils.ConfigUtilsTest#testGetPid",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_Time",
            "org.apache.dubbo.common.json.JSONWriterTest#testWriteJson",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#readerIndexBoundaryCheck1",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Response_Person",
            "org.apache.dubbo.config.GenericServiceTest#testGenericSerializationJava",
            "org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeTelnet",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testSubscribe",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Normal_Ex",
            "org.apache.dubbo.registry.redis.RedisRegistryTest#testSubscribeAndUnsubscribe",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testAddNullRunnable",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_Bool",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserialize_Primitive",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#test_Decode_Return_Request_Heartbeat_Object",
            "org.apache.dubbo.config.spring.convert.converter.StringArrayToMapConverterTest#testConvert",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Disconnect_Execute_Error",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_LoopReference",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testMock",
            "org.apache.dubbo.common.io.UnsafeByteArrayInputStreamTest#testReadEmptyByteArray",
            "org.apache.dubbo.config.ServiceConfigTest#testGeneric2",
            "org.apache.dubbo.common.threadpool.support.cached.CachedThreadPoolTest#getExecutor1",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Header_Need_Readmore",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_BigDecimal_withType",
            "org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessorTest#testGetInjectedFieldReferenceBeanMap",
            "org.apache.dubbo.common.utils.StringUtilsTest#testIsContains",
            "org.apache.dubbo.qos.command.CommandContextFactoryTest#testNewInstance",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testRandomHeapBufferTransfer1",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteArrayTransfer2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Bool",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#testRegister",
            "org.apache.dubbo.common.utils.UrlUtilsTest#testIsMatch5",
            "org.apache.dubbo.remoting.http.jetty.JettyHttpBinderTest#shouldAbleHandleRequestForJettyBinder",
            "org.apache.dubbo.config.url.ExporterSideConfigUrlTest#exporterMethodConfigUrlTest",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_PersonSet",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testDeprecated",
            "org.apache.dubbo.registry.support.FailbackRegistryTest#testDoRetry_nofify",
            "org.apache.dubbo.remoting.buffer.DirectChannelBufferTest#getByteArrayBoundaryCheck2",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testMultiMonitor",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_doubleArray_withType",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testGetDescWithoutMethodName",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_SPerson_withType",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_LocalDateTime",
            "org.apache.dubbo.remoting.buffer.HeapChannelBufferTest#testSequentialByteAccess",
            "org.apache.dubbo.metrics.MetricNameTest#testTaggedMoreArguments",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_longArray_withType",
            "org.apache.dubbo.common.utils.LRUCacheTest#testCache",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Time_withType",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_MultiObject",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getExtensionLoader_Null",
            "org.apache.dubbo.config.ApplicationConfigTest#testDumpDirectory",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#test_getSupportedExtensions",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testRetryOffer1",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_UPorDOWN_WithError",
            "org.apache.dubbo.config.ProviderConfigTest#testClient",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testFindMethodByMethodSignature",
            "org.apache.remoting.transport.mina.ClientsTest#testGetTransportWrong",
            "org.apache.dubbo.common.utils.ReflectUtilsTest#testForName2",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testGetAndSet",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_floatArray",
            "org.apache.dubbo.rpc.cluster.router.script.ScriptRouterTest#testRoutePickInvokers",
            "org.apache.dubbo.config.RegistryConfigTest#testRegister",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#readerIndexBoundaryCheck2",
            "org.apache.dubbo.registry.support.AbstractRegistryFactoryTest#testRegistryFactoryIpCache",
            "org.apache.dubbo.config.AbstractMethodConfigTest#testTimeout",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_SPersonSet",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#test_Decode_Error_Request_Object",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_boolArray_withType",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_shortArray_withType",
            "org.apache.dubbo.remoting.transport.codec.CodecAdapterTest#testDecode_String_MiddleWithEnter",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_MediaContent_WithType",
            "org.apache.dubbo.common.utils.AtomicPositiveIntegerTest#testGetAndDecrement",
            "org.apache.dubbo.config.MonitorConfigTest#testDefault",
            "org.apache.dubbo.remoting.PerformanceClientFixedTest#testClient",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Time_withType",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilterTest#testInvokeNoActives",
            "org.apache.dubbo.config.GenericServiceTest#testGenericImplementationWithBeanSerialization",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testGenericInvokeWithBean",
            "org.apache.dubbo.config.ModuleConfigTest#testRegistry",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#initialState",
            "org.apache.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClientTest#testDeletePath",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectInputTest#testReadInt",
            "org.apache.dubbo.common.compiler.support.ClassUtilsTest#testGetGenericClass",
            "org.apache.dubbo.config.RegistryConfigTest#testCheck",
            "org.apache.dubbo.common.status.support.MemoryStatusCheckerTest#test",
            "org.apache.dubbo.config.ModuleConfigTest#testName1",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_IntegerArray",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvokeAutoFindMethod",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testToByteBuffer2",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_UtfString",
            "org.apache.dubbo.common.serialize.serialization.JavaSerializationTest#test_BizException_WithType",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_IntegerArray_withType",
            "org.apache.dubbo.config.cache.CacheTest#testCacheProvider",
            "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest#testWriteByte",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testScope",
            "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest#testOnRemove",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testToByteBuffer2",
            "org.apache.dubbo.validation.support.jvalidation.JValidationTest#testReturnTypeWithDefaultValidatorProvider",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringArrayList",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_EnumArray_withType",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Sync_Onreturn",
            "org.apache.dubbo.common.utils.LogUtilTest#testStartStop",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeCancel2",
            "org.apache.dubbo.common.serialize.serialization.CompactedJavaSerializationTest#test_Long",
            "org.apache.dubbo.common.json.JSONTest#testLocale",
            "org.apache.dubbo.qos.textui.TTreeTest#test",
            "org.apache.dubbo.qos.textui.TLadderTest#testRendering",
            "org.apache.dubbo.config.AbstractServiceConfigTest#testProtocol",
            "org.apache.dubbo.common.serialize.fastjson.FastJsonObjectOutputTest#testWriteByte",
            "org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeChannelTest#removeChannelIfDisconnectedTest",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_SPersonList",
            "org.apache.dubbo.common.status.StatusTest#testConstructor2",
            "org.apache.dubbo.common.threadpool.support.eager.TaskQueueTest#testRetryOffer2",
            "org.apache.dubbo.common.utils.IOUtilsTest#testRead",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#testRandomByteAccess",
            "org.apache.dubbo.config.ProviderConfigTest#testExchanger",
            "org.apache.dubbo.registry.support.AbstractRegistryTest#filterEmptyTest",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_Double",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#testSequentialByteBufferTransfer",
            "org.apache.dubbo.common.io.BytesTest#testLargeLength",
            "org.apache.dubbo.common.utils.StackTest#testIllegalPop",
            "org.apache.dubbo.rpc.protocol.hessian.HessianProtocolTest#testGenericInvokeWithRpcContext",
            "org.apache.dubbo.config.ApplicationConfigTest#testEnvironment1",
            "org.apache.dubbo.common.extension.ExtensionLoaderTest#testLoadDefaultActivateExtension",
            "org.apache.dubbo.remoting.PerformanceClientTest#testClient",
            "org.apache.dubbo.remoting.codec.ExchangeCodecTest#testMessageLengthGreaterThanMessageActualLength",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_StringSPersonListMap",
            "org.apache.dubbo.common.utils.PojoUtilsTest#test_Loop_Map",
            "org.apache.dubbo.remoting.PerformanceClientCloseTest#testClient",
            "org.apache.dubbo.config.AbstractInterfaceConfigTest#testOwner",
            "org.apache.dubbo.rpc.protocol.redis.RedisProtocolTest#testExport",
            "org.apache.dubbo.rpc.cluster.StickyTest#testStickyForceCheck",
            "org.apache.dubbo.registry.support.AbstractRegistryFactoryTest#testRegistryFactoryCache",
            "org.apache.dubbo.common.URLTest#test_Localhost",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_longArray",
            "org.apache.dubbo.common.serialize.serialization.NativeJavaSerializationTest#test_floatArray",
            "org.apache.dubbo.common.serialize.serialization.Hessian2SerializationTest#test_Double",
            "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest#test_Async_Future_Ex",
            "org.apache.dubbo.common.io.UnsafeByteArrayOutputStreamTest#testWrite",
            "org.apache.dubbo.remoting.handler.ConnectChannelHandlerTest#test_Caught_Biz_Error",
            "org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBufferTest#copyBoundaryCheck2",
            "org.apache.dubbo.remoting.buffer.DynamicChannelBufferTest#readerIndexBoundaryCheck3",
            "org.apache.dubbo.cache.filter.CacheFilterTest#testNull[1]",
            "org.apache.dubbo.config.spring.ConfigTest#org.apache.dubbo.config.spring.ConfigTest",
            "org.apache.dubbo.common.serialize.serialization.KyroSerializationTest#test_MultiObject",
            "org.apache.dubbo.config.spring.schema.DubboNamespaceHandlerTest#testMonitor",
            "org.apache.dubbo.common.beanutil.JavaBeanSerializeUtilTest#testDeserializeBean",
            "org.apache.dubbo.common.extension.ExtensionLoader_Adaptive_UseJdkCompiler_Test#test_urlHolder_getAdaptiveExtension_noExtension",
            "org.apache.dubbo.common.utils.CollectionUtilsTest#testSort"
        ],
        "passed_tests": [],
        "failed_tests": [
            "org.apache.dubbo.remoting.transport.netty.NettyClientTest#testServerClose",
            "org.apache.dubbo.remoting.transport.netty.ThreadNameTest#testThreadName",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testServerHeartbeat",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testClientHeartbeat",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testHeartbeat"
        ],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeName",
            "org.apache.dubbo.remoting.transport.netty.ThreadNameTest#testThreadName",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testServerHeartbeat",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testHeartbeat",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListDefault",
            "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest#testPerm",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testSelect_multiInvokers",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvokeDefaultSService",
            "org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandlerTest#testClientHeartbeat",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangeSimpleName",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testListService",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest#testList",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest#testChangePath",
            "org.apache.dubbo.rpc.protocol.dubbo.ExplicitCallbackTest#TestCallbackMultiInstans",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testCustomedPort",
            "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest#testBindingAttachment",
            "org.apache.dubbo.registry.multicast.MulticastRegistryTest#testGetCustomPort",
            "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest#testInvokeAutoFindMethod",
            "org.apache.dubbo.common.concurrent.ExecutionListTest#testAddNullRunnable"
        ],
        "tests": [],
        "od_tests": []
    },
    "zxing-zxing": {
        "total_tests": [
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCardEscape",
            "com.google.zxing.client.result.TelParsedResultTestCase#testTel",
            "com.google.zxing.qrcode.QRCodeBlackBox3TestCase#testBlackBox",
            "com.google.zxing.common.reedsolomon.ReedSolomonTestCase#testAztec",
            "com.google.zxing.oned.EAN8BlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_3",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testSummary",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testQuotedPrintable",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testC40EncodationSpecialCases1",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask4",
            "com.google.zxing.oned.EAN13WriterTestCase#testEncode",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testVCard",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testAttendees",
            "com.google.zxing.qrcode.decoder.DecodedBitStreamParserTestCase#testSimpleByteMode",
            "com.google.zxing.datamatrix.encoder.SymbolInfoTestCase#testSymbolInfo",
            "com.google.zxing.qrcode.decoder.ModeTestCase#testCharacterCount",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testX12Encodation",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testNumBytes",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testTel",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testC40EncodationSpecExample",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testDuration",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testURI",
            "com.google.zxing.pdf417.PDF417BlackBox3TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_11",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_13",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testEmbedDataBits",
            "com.google.zxing.oned.rss.expanded.BinaryUtilTest#testBuildBitArrayFromStringWithoutSpaces",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testToString",
            "com.google.zxing.oned.UPCEANExtensionBlackBox1TestCase#testBlackBox",
            "com.google.zxing.qrcode.decoder.DecodedBitStreamParserTestCase#testSimpleSJIS",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendAlphanumericBytes",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testC40EncodationBasic1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedStackedBlackBox1TestCase#testBlackBox",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCardFullN2",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask0",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendKanjiBytes",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testUPCA",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendModeInfo",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3103_DecoderTest#test01_3103_invalid",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testUnlatchingFromText",
            "com.google.zxing.pdf417.PDF417BlackBox1TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testFindMSBSet",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testStart",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask1",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testEmbedTypeInfo",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testSimpleUTF8ECI",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode2",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_1",
            "com.google.zxing.oned.EAN13BlackBox4TestCase#testBlackBox",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode10",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_16",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testMMSTO",
            "com.google.zxing.datamatrix.DataMatrixWriterTestCase#testDataMatrixWriter",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testUnlatchingFromC40",
            "com.google.zxing.common.StringUtilsTestCase#testMixedShiftJIS_1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_21",
            "com.google.zxing.negative.FalsePositivesBlackBoxTestCase#testBlackBox",
            "com.google.zxing.client.result.URIParsedResultTestCase#testBookmarkDocomo",
            "com.google.zxing.qrcode.encoder.QRCodeTestCase#test",
            "com.google.zxing.common.PerspectiveTransformTestCase#testQuadrilateralToQuadrilateral",
            "com.google.zxing.qrcode.decoder.DecodedBitStreamParserTestCase#testECI",
            "com.google.zxing.qrcode.encoder.QRCodeTestCase#testToString2",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3103_DecoderTest#test01_3103_1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_1",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testAllDayValueDate",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_10",
            "com.google.zxing.qrcode.decoder.FormatInformationTestCase#testDecode",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testVEvent",
            "com.google.zxing.oned.rss.expanded.BitArrayBuilderTest#testBuildBitArray1",
            "com.google.zxing.qrcode.QRCodeWriterTestCase#testRegressionTest",
            "com.google.zxing.oned.UPCEBlackBox1TestCase#testBlackBox",
            "com.google.zxing.qrcode.QRCodeBlackBox2TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testBugInBitVectorNumBytes",
            "com.google.zxing.common.StringUtilsTestCase#testShortISO88591_1",
            "com.google.zxing.client.result.EmailAddressParsedResultTestCase#testSMTP",
            "com.google.zxing.datamatrix.DataMatrixBlackBox2TestCase#testBlackBox",
            "com.google.zxing.qrcode.decoder.VersionTestCase#testGetProvisionalVersionForDimension",
            "com.google.zxing.oned.EAN13BlackBox1TestCase#testBlackBox",
            "com.google.zxing.datamatrix.decoder.DecodedBitStreamParserTestCase#testAsciiStandardDecode",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testBase256Encodation",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testTerminateBits",
            "com.google.zxing.oned.rss.expanded.RSSExpandedStackedInternalTestCase#testDecodingRowByRow",
            "com.google.zxing.client.result.WifiParsedResultTestCase#testWep",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testEmbedBasicPatterns2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_2",
            "com.google.zxing.aztec.detector.DetectorTest#testErrorInParameterLocatorZeroZero",
            "com.google.zxing.oned.UPCEBlackBox3ReflectiveTestCase#testBlackBox",
            "com.google.zxing.qrcode.QRCodeBlackBox4TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_20",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode23",
            "com.google.zxing.common.BitArrayTestCase#testGetNextSet3",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCardCaseInsensitive",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_320X_15_1",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testMakeTypeInfoInfoBits",
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testMaxErrors",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testAddressBookType",
            "com.google.zxing.qrcode.QRCodeBlackBox6TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppend8BitBytes",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testMacroCharacters",
            "com.google.zxing.oned.Code128BlackBox2TestCase#testBlackBox",
            "com.google.zxing.datamatrix.DataMatrixBlackBox1TestCase#testBlackBox",
            "com.google.zxing.negative.UnsupportedBlackBoxTestCase#testBlackBox",
            "com.google.zxing.oned.UPCABlackBox5TestCase#testBlackBox",
            "com.google.zxing.qrcode.decoder.VersionTestCase#testVersionForNumber",
            "com.google.zxing.common.BitMatrixTestCase#testGetSet",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode31",
            "com.google.zxing.aztec.encoder.EncoderTest#testHighLevelEncode",
            "com.google.zxing.oned.rss.RSS14BlackBox2TestCase#testBlackBox",
            "com.google.zxing.oned.ITFBlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_2",
            "com.google.zxing.client.result.URIParsedResultTestCase#testURLTO",
            "com.google.zxing.client.result.ProductParsedResultTestCase#testProduct",
            "com.google.zxing.aztec.detector.DetectorTest#testErrorInParameterLocatorNotCompact",
            "com.google.zxing.client.result.WifiParsedResultTestCase#testNoPassword",
            "com.google.zxing.qrcode.encoder.MaskUtilTestCase#testGetDataMaskBit",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask5",
            "com.google.zxing.client.result.URIParsedResultTestCase#testExotic",
            "com.google.zxing.common.BitArrayTestCase#testGetNextSet5",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_15",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testLocation",
            "com.google.zxing.qrcode.decoder.FormatInformationTestCase#testDecodeWithBitDifference",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testGeo",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_12",
            "com.google.zxing.common.BitArrayTestCase#testGetNextSet2",
            "com.google.zxing.qrcode.QRCodeBlackBox5TestCase#testBlackBox",
            "com.google.zxing.aztec.AztecBlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.UPCABlackBox6BlurryTestCase#testBlackBox",
            "com.google.zxing.client.result.ISBNParsedResultTestCase#testISBN",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3202_3203_DecoderTest#test01_3203_1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_7",
            "com.google.zxing.oned.UPCABlackBox4TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_13",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testBizcard",
            "com.google.zxing.qrcode.decoder.ModeTestCase#testForBits",
            "com.google.zxing.qrcode.encoder.QRCodeTestCase#testIsValidMaskPattern",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask3",
            "com.google.zxing.aztec.encoder.EncoderTest#testUserSpecifiedLayers",
            "com.google.zxing.pdf417.PDF417BlackBox2TestCase#testBlackBox",
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testNoError",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_26",
            "com.google.zxing.qrcode.encoder.MaskUtilTestCase#testApplyMaskPenaltyRule2",
            "com.google.zxing.client.result.GeoParsedResultTestCase#testGeo",
            "com.google.zxing.common.BitMatrixTestCase#testSetRegion",
            "com.google.zxing.common.BitArrayTestCase#testClear",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode5",
            "com.google.zxing.aztec.encoder.EncoderTest#testHighLevelEncodePairs",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_31",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testUPCE",
            "com.google.zxing.client.result.WifiParsedResultTestCase#testWpa",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3202_3203_DecoderTest#test01_3202_1",
            "com.google.zxing.common.reedsolomon.ReedSolomonTestCase#testDataMatrix",
            "com.google.zxing.datamatrix.encoder.PlacementTestCase#testPlacement",
            "com.google.zxing.negative.FalsePositives2BlackBoxTestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_320X_13_1",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode1",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testAddressBookDocomo",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testBug3048549",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testURLTOType",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_310X_17_1",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testEscapedVCard",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask6",
            "com.google.zxing.common.BitMatrixTestCase#testGetRow",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_4",
            "com.google.zxing.oned.rss.expanded.RSSExpandedInternalTestCase#testRetrieveNextPairPatterns",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_30",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_3",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_14",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_646FNC1",
            "com.google.zxing.oned.Code128BlackBox3TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testEncode",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_29",
            "com.google.zxing.oned.rss.expanded.RSSExpandedBlackBox3TestCase#testBlackBox",
            "com.google.zxing.aztec.encoder.EncoderTest#testBorderCompact4Case",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_19",
            "com.google.zxing.client.result.URIParsedResultTestCase#testURI",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testAddressBookAU",
            "com.google.zxing.client.result.SMSMMSParsedResultTestCase#testSMS",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_11",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testAppendBit",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testGetAlphanumericCode",
            "com.google.zxing.common.BitMatrixTestCase#testRectangularMatrix",
            "com.google.zxing.common.StringUtilsTestCase#testShortShiftJIS_1",
            "com.google.zxing.aztec.AztecBlackBox2TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testGenerateECBytes",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testAddressBookAUType",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testASCIIEncodation",
            "com.google.zxing.oned.UPCEBlackBox2TestCase#testBlackBox",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testOrganizer",
            "com.google.zxing.oned.Code39ExtendedBlackBox2TestCase#testBlackBox",
            "com.google.zxing.pdf417.detector.DetectorTest#testMirror",
            "com.google.zxing.oned.rss.expanded.RSSExpandedBlackBox2TestCase#testBlackBox",
            "com.google.zxing.oned.EAN13BlackBox5BlurryTestCase#testBlackBox",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testEAN",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_320X_17_1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedStackedBlackBox2TestCase#testBlackBox",
            "com.google.zxing.datamatrix.decoder.DecodedBitStreamParserTestCase#testAsciiDoubleDigitDecode",
            "com.google.zxing.common.BitSourceTestCase#testSource",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testMakeVersionInfoBits",
            "com.google.zxing.aztec.detector.DetectorTest#testErrorInParameterLocatorCompact",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncode2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_18",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendLengthInfo",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_20",
            "com.google.zxing.qrcode.decoder.DecodedBitStreamParserTestCase#testHanzi",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_4",
            "com.google.zxing.aztec.encoder.EncoderTest#testHighLevelEncodeBinary",
            "com.google.zxing.oned.EAN13BlackBox2TestCase#testBlackBox",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testEDIFACTEncodation",
            "com.google.zxing.oned.UPCABlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_21",
            "com.google.zxing.common.BitMatrixTestCase#testRectangularSetRegion",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_310X_13_1",
            "com.google.zxing.oned.EAN8WriterTestCase#testEncode",
            "com.google.zxing.common.BitArrayTestCase#testGetSet",
            "com.google.zxing.common.BitArrayTestCase#testSetBulk",
            "com.google.zxing.client.result.URIParsedResultTestCase#testIsPossiblyMalicious",
            "com.google.zxing.oned.Code39BlackBox3TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_16",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask7",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_5",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testDescription",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode3",
            "com.google.zxing.aztec.encoder.EncoderTest#testStuffBits",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testMMS",
            "com.google.zxing.common.BitArrayTestCase#reverseAlgorithmTest",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testBizcard",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testChooseMode",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testEmailType",
            "com.google.zxing.common.BitArrayTestCase#testGetNextSet4",
            "com.google.zxing.client.result.SMSMMSParsedResultTestCase#testMMS",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2resultTestCase#testDecodeRow2result_2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_18",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testGetNumDataBytesAndNumECBytesForBlockID",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testC40EncodationBasic2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_22",
            "com.google.zxing.oned.rss.expanded.RSSExpandedInternalTestCase#testDecodeCheckCharacter",
            "com.google.zxing.qrcode.QRCodeBlackBox1TestCase#testBlackBox",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testEmailAddressType",
            "com.google.zxing.oned.Code39BlackBox1TestCase#testBlackBox",
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testTooManyErrors",
            "com.google.zxing.oned.UPCAWriterTestCase#testAddChecksumAndEncode",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_17",
            "com.google.zxing.qrcode.decoder.FormatInformationTestCase#testBitsDiffering",
            "com.google.zxing.client.result.URIParsedResultTestCase#testGarbage",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testBuildMatrix",
            "com.google.zxing.client.result.ExpandedProductParsedResultTestCase#test_RSSExpanded",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_15",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncode1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedStackedInternalTestCase#testCompleteDecode",
            "com.google.zxing.oned.rss.expanded.decoders.FieldParserTest#testParseField",
            "com.google.zxing.qrcode.encoder.MaskUtilTestCase#testApplyMaskPenaltyRule4",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_22",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testAt",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_310X_1X_endDate",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testBookmarkType",
            "com.google.zxing.oned.rss.expanded.decoders.FieldParserTest#testParseField2",
            "com.google.zxing.qrcode.QRCodeWriterTestCase#testQRCodeWriter",
            "com.google.zxing.aztec.encoder.EncoderTest#testEncodeDecode4",
            "com.google.zxing.oned.ITFBlackBox2TestCase#testBlackBox",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testTextEncodation",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testEmbedVersionInfo",
            "com.google.zxing.oned.CodabarBlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_28",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testTextType",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_14",
            "com.google.zxing.qrcode.encoder.MaskUtilTestCase#testApplyMaskPenaltyRule1",
            "com.google.zxing.qrcode.decoder.DataMaskTestCase#testMask2",
            "com.google.zxing.client.result.EmailAddressParsedResultTestCase#testEmailDocomo",
            "com.google.zxing.oned.CodaBarWriterTestCase#testEncode",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testStartEnd",
            "com.google.zxing.common.BitArrayTestCase#testGetNextSet1",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testVEventEscapes",
            "com.google.zxing.oned.rss.expanded.RSSExpandedInternalTestCase#testDecodeDataCharacter",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testSMS",
            "com.google.zxing.oned.UPCABlackBox2TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testAppendBits",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testHelloWorld",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testSMSTO",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_3",
            "com.google.zxing.aztec.encoder.EncoderTest#testAztecWriter",
            "com.google.zxing.oned.Code93BlackBox1TestCase#testBlackBox",
            "com.google.zxing.qrcode.decoder.VersionTestCase#testDecodeVersionInformation",
            "com.google.zxing.oned.rss.expanded.BinaryUtilTest#testBuildBitArrayFromString",
            "com.google.zxing.oned.rss.expanded.ExpandedInformationDecoderTest#testNoAi",
            "com.google.zxing.aztec.encoder.EncoderTest#testGenerateModeMessage",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testGeo",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_1",
            "com.google.zxing.qrcode.decoder.ErrorCorrectionLevelTestCase#testForBits",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_32",
            "com.google.zxing.common.reedsolomon.ReedSolomonTestCase#testQRCode",
            "com.google.zxing.datamatrix.encoder.ErrorCorrectionTestCase#testRS",
            "com.google.zxing.oned.Code128BlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_320X_11_1",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testAppendBitVector",
            "com.google.zxing.datamatrix.DataMatrixWriterTestCase#testDataMatrixTooSmall",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_310X_11_1",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendBytes",
            "com.google.zxing.oned.rss.expanded.RSSExpandedInternalTestCase#testFindFinderPatterns",
            "com.google.zxing.oned.rss.RSS14BlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3X0X_1X_DecoderTest#test01_310X_15_1",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_5",
            "com.google.zxing.common.BitArrayTestCase#testIsRange",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testXOR",
            "com.google.zxing.oned.rss.expanded.RSSExpandedBlackBox1TestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_10",
            "com.google.zxing.common.PerspectiveTransformTestCase#testSquareToQuadrilateral",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testInterleaveWithECBytes",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_alphaFNC1",
            "com.google.zxing.client.result.URIParsedResultTestCase#testNotURI",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testCalculateBCHCode",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_19",
            "com.google.zxing.oned.UPCAWriterTestCase#testEncode",
            "com.google.zxing.pdf417.PDF417BlackBox4TestCase#testBlackBox",
            "com.google.zxing.client.result.CalendarParsedResultTestCase#testNoVCalendar",
            "com.google.zxing.oned.EAN13BlackBox3TestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.QRCodeTestCase#testToString1",
            "com.google.zxing.qrcode.encoder.BitVectorTestCase#testXOR2",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testC40EncodationSpecialCases2",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_27",
            "com.google.zxing.oned.UPCABlackBox3ReflectiveTestCase#testBlackBox",
            "com.google.zxing.qrcode.encoder.EncoderTestCase#testAppendNumericBytes",
            "com.google.zxing.client.result.ParsedReaderResultTestCase#testISBN",
            "com.google.zxing.qrcode.encoder.MaskUtilTestCase#testApplyMaskPenaltyRule3",
            "com.google.zxing.negative.PartialBlackBoxTestCase#testBlackBox",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_12",
            "com.google.zxing.common.BitArrayTestCase#testGetArray",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2stringTestCase#testDecodeRow2string_25",
            "com.google.zxing.oned.EANManufacturerOrgSupportTest#testLookup",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testSeveralAddresses",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCardFullN3",
            "com.google.zxing.datamatrix.DataMatrixWriterTestCase#testDataMatrixImageWriter",
            "com.google.zxing.datamatrix.encoder.HighLevelEncodeTestCase#testBug1664266",
            "com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoderTest#testAnyAIDecoder_numericFNC1_secondDigit",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testClearMatrix",
            "com.google.zxing.qrcode.decoder.FormatInformationTestCase#testDecodeWithMisread",
            "com.google.zxing.client.result.EmailAddressParsedResultTestCase#testEmailAddress",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testEmbedBasicPatterns1",
            "com.google.zxing.qrcode.encoder.MatrixUtilTestCase#testToString",
            "com.google.zxing.pdf417.detector.DetectorTest#testRotate180",
            "com.google.zxing.oned.rss.expanded.decoders.AI01_3103_DecoderTest#test01_3103_2",
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testOneError",
            "com.google.zxing.oned.rss.expanded.RSSExpandedImage2binaryTestCase#testDecodeRow2binary_17",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCard",
            "com.google.zxing.client.result.AddressBookParsedResultTestCase#testVCardFullN"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testTooManyErrors"
        ],
        "flaky_tests": [
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testTooManyErrors",
            "com.google.zxing.aztec.encoder.EncoderTest#testAztecWriter"
        ],
        "tests": [],
        "od_tests": [
            "com.google.zxing.aztec.encoder.EncoderTest#testAztecWriter"
        ],
        "config_only_sleep_decrease": [],
        "config_only_random_max": [],
        "config_only_sleep_increase": [],
        "config_only_time_round": [],
        "config_only_random_fix": [],
        "config_only_locale_fix": [],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [],
        "config_only_time_relative": [],
        "config_only_random_min": [
            "com.google.zxing.pdf417.decoder.ec.ErrorCorrectionTestCase#testTooManyErrors"
        ],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [],
        "config_only_fix_date": [],
        "config_only_date_bk": []
    },
    "apache-httpcore": {
        "total_tests": [
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testSuffixPatternOverPrefixPatternMatch",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityContentTypeAndEncoding",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostFallbackFailure",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testResetParser",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithTransferEncoding",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.TestHttpHost#testConstructor",
            "org.apache.http.impl.nio.codecs.TestIdentityEncoder#testInvalidConstructor",
            "org.apache.http.impl.TestNoConnectionReuseStrategy#testNullResponse",
            "org.apache.http.protocol.TestHttpService#testProtocolException",
            "org.apache.http.message.TestBasicLineFormatter#testHttpVersionFormattingInvalidInput",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithChunkTransferEncoding",
            "org.apache.http.impl.io.TestResponseParser#testMessageParsingTimeout",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentEntityContentLengthDelimitedHTTP11",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithMultipleContentLengthSomeWrong",
            "org.apache.http.impl.io.TestMessageParser#testEmptyDataStream",
            "org.apache.http.pool.TestRouteSpecificPool#testWaitingThreadQueuing",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testMultibyteCodedReadWriteLine",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testDecodingFromSessionBuffer1",
            "org.apache.http.nio.pool.TestNIOConnPool#testReleaseUnknownEntry",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testInvalidHEArguments",
            "org.apache.http.util.TestEntityUtils#testNoCharsetContentToString",
            "org.apache.http.impl.io.TestIdentityOutputStream#testBasicWrite",
            "org.apache.http.message.TestBasicHeaderValueParser#testNVParseAll",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueIgnoreNonenclosingRequests",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseExpired",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testMalformedChunkEndingDecoding",
            "org.apache.http.message.TestBasicHeaderIterator#testAllSame",
            "org.apache.http.impl.TestSessionBuffers#testInit",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedInputStreamLargeBuffer",
            "org.apache.http.impl.nio.TestContentChannel#testContentDecoder",
            "org.apache.http.nio.pool.TestNIOConnPool#testInternalLeaseRequest",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingInvalidRequestLine",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithContentLength",
            "org.apache.http.util.TestCharArrayBuffer#testEnsureCapacity",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostMissingHostHTTP11",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueGenerated",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamMissingLF",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentNullTypeAndEncoding",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadByteBuffer",
            "org.apache.http.entity.TestByteArrayEntity#testIllegalConstructorNullByteArray",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestDateGenerated",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithContentLength",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpGets",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionNoResponseBody",
            "org.apache.http.nio.pool.TestNIOConnPool#testStatefulConnectionRedistributionOnPerRouteMaxLimit",
            "org.apache.http.message.TestRequestLine#testCloning",
            "org.apache.http.message.TestHeader#testBasicConstructor",
            "org.apache.http.entity.TestEntityTemplate#testgetContent",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testEndOfStreamConditionReadingLastChunk",
            "org.apache.http.TestHttpHost#testCloning",
            "org.apache.http.entity.TestStringEntity#testIllegalConstructor",
            "org.apache.http.message.TestBasicTokenIterator#testSingleHeader",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testFutureHTTP",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.entity.TestBufferedHttpEntity#testWriteToWrapped",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testWriteBeyondFileSize",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestUserAgentMissingUserAgent",
            "org.apache.http.TestHttpHost#testSerialization",
            "org.apache.http.pool.TestConnPool#testReleaseUnknownEntry",
            "org.apache.http.nio.util.TestBuffers#testBufferInfo",
            "org.apache.http.pool.TestConnPool#testLeaseCacnel",
            "org.apache.http.util.TestCharArrayBuffer#testSetLength",
            "org.apache.http.message.TestBasicTokenIterator#testWrongProtected",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadToChannel",
            "org.apache.http.util.TestCharArrayBuffer#testSetInvalidLength",
            "org.apache.http.message.TestHeaderElement#testCloning",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsWithContentLength",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestConnControlConnectMethod",
            "org.apache.http.protocol.TestBasicHttpProcessor#testAddFirstRequestInterceptorNull",
            "org.apache.http.params.TestDefaultedHttpParams#testgetNames",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityUnknownContentLength",
            "org.apache.http.impl.io.TestIdentityOutputStream#testConstructor",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadByteBufferWithMaxLen",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testChunkExceed",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testBasicDecodingSmallBuffer",
            "org.apache.http.entity.TestSerializableEntity#testWriteToDirect",
            "org.apache.http.util.TestEncodingUtils#testBytesToString",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpHeads",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testReadingWitSmallBuffer",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlClientRequest",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingBeyondContentLimit",
            "org.apache.http.TestHttpHost#testHashCode",
            "org.apache.http.entity.TestByteArrayEntity#testIllegalConstructorBadOff2",
            "org.apache.http.protocol.TestHttpRequestExecutor#testBasicExecution",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostNotGenerated",
            "org.apache.http.pool.TestConnPool#testShutdown",
            "org.apache.http.impl.TestBasicRequest#testRequestLine",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testHttpCore239",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testSuccessfulConnect",
            "org.apache.http.entity.TestHttpEntityWrapper#testBasics",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionIOException",
            "org.apache.http.impl.io.TestIdentityOutputStream#testClosedCondition",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens5",
            "org.apache.http.impl.io.TestContentLengthInputStream#testTruncatedContent",
            "org.apache.http.message.TestBasicMessages#testDefaultEntityEnclosingRequestConstructors",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlEntityChunked",
            "org.apache.http.util.TestCharArrayBuffer#testAppendNullByteArrayBuffer",
            "org.apache.http.util.TestCharArrayBuffer#testAppendCharArrayBuffer",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentEntityChunkedHTTP11",
            "org.apache.http.util.TestByteArrayBuffer#testAppendCharArrayAsAscii",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testWildCardMatching1",
            "org.apache.http.protocol.TestHttpService#testExecutionEntityEclosingRequestWithExpectContinue",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithNegativeContentLength",
            "org.apache.http.protocol.TestProtocolIntegration#testSimpleHttpPostsChunked",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testComplexReadWriteLine",
            "org.apache.http.pool.TestConnPool#testSetMaxInvalid",
            "org.apache.http.message.TestBufferedHeader#testCloning",
            "org.apache.http.impl.nio.codecs.TestIdentityEncoder#testCodingEmptyBuffer",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testLeaseReleaseStateful",
            "org.apache.http.pool.TestConnPool#testLeaseIllegal",
            "org.apache.http.nio.pool.TestNIOConnPool#testShutdown",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseDateNotGenerated",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsContentNotConsumed",
            "org.apache.http.impl.io.TestChunkCoding#testResumeOnSocketTimeoutInData",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens3",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityContentEncoding",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamTruncatedChunk",
            "org.apache.http.entity.TestAbstractHttpEntity#testChunkingFlag",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithChunkTransferEncoding",
            "org.apache.http.message.TestHeaderGroup#testCloning",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithMultipleContentLengthAllWrong",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testInvalidContentLength",
            "org.apache.http.message.TestBasicHeaderIterator#testInterspersed",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentEntityChunkedHTTP10",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncCompleted",
            "org.apache.http.nio.util.TestBuffers#testOutputBufferOperations",
            "org.apache.http.message.TestNameValuePair#testEquals",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithInvalidChunkEncodingAndHTTP10",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityChunkedHTTP10",
            "org.apache.http.pool.TestPoolEntry#testExpiry",
            "org.apache.http.entity.TestEntityTemplate#testIllegalConstructor",
            "org.apache.http.impl.nio.reactor.TestDefaultListeningIOReactor#testEndpointUpAndDown",
            "org.apache.http.impl.nio.codecs.TestIdentityEncoder#testBasicCoding",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testWriteBeyondFileSize",
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.util.TestCharArrayBuffer#testInvalidCharArrayAppend",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testEndOfStreamConditionReadingFooters",
            "org.apache.http.impl.nio.pool.TestBasicNIOConnPool#testNullConstructor",
            "org.apache.http.util.TestCharArrayBuffer#testAppendISOByteArray",
            "org.apache.http.protocol.TestProtocolIntegration#testHttpContent",
            "org.apache.http.message.TestHeaderGroup#testIterator",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testDecodingFromSessionBuffer",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testBrokenConnectionDirective1",
            "org.apache.http.util.TestCharArrayBuffer#testSubstring",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionEntityEnclosingRequestWithExpectContinueSuccess",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestDateNotGenerated",
            "org.apache.http.util.TestByteArrayBuffer#testAppendOneByte",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsHTTP10",
            "org.apache.http.concurrent.TestBasicFuture#testCancelled",
            "org.apache.http.util.TestByteArrayBuffer#testInvalidAppendCharArrayAsAscii",
            "org.apache.http.protocol.TestHttpService#testInvalidInitialization",
            "org.apache.http.protocol.TestHttpService#testExecutionEntityEclosingRequest",
            "org.apache.http.message.TestAbstractMessage#testParameters",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlEntityContentLength",
            "org.apache.http.message.TestBasicTokenIterator#testEmpty",
            "org.apache.http.entity.TestBufferedHttpEntity#testWriteToBuffered",
            "org.apache.http.message.TestNameValuePair#testHashCode",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.TestHttpVersion#testHttpVersionComparison",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpGets",
            "org.apache.http.message.TestHeaderGroup#testSerialization",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testConnectTimeout",
            "org.apache.http.util.TestEntityUtils#testMaxIntContentToByteArray",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseServerInvalidInput",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testRegisterNull",
            "org.apache.http.util.TestCharArrayBuffer#testAppendNullCharArrayBuffer",
            "org.apache.http.entity.TestFileEntity#testWriteTo",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamMissingCRLF",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionEntityEnclosingRequestUnsupportedIntermediateResponse",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testLineLimitForHeader",
            "org.apache.http.TestHttpHost#testToString",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentNoEntity",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testParamsFormatting",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testIllegalContextArg",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentStatusNotModified",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlEntityUnknownContentLengthHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpException",
            "org.apache.http.impl.io.TestContentLengthOutputStream#testBasics",
            "org.apache.http.message.TestHeaderGroup#testSetHeaders",
            "org.apache.http.TestHttpHost#testToHostString",
            "org.apache.http.message.TestBasicTokenIterator#testWrongPublic",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testIllegalResponseArg",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testHttpPostsWithExpectationVerification",
            "org.apache.http.entity.TestByteArrayEntity#testWriteTo",
            "org.apache.http.params.TestBasicHttpParams#testgetNames",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testWriteByteBuffer",
            "org.apache.http.params.TestDefaultedHttpParams#testAddRemoveParam",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testZeroLengthDecoding",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncTimeout",
            "org.apache.http.message.TestBasicLineParser#testHttpVersionParsingUsingCursor",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingIncompleteHeader",
            "org.apache.http.message.TestBasicLineParser#testSLParseFailure",
            "org.apache.http.impl.io.TestRequestParser#testConnectionClosedException",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRelease",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedOutputStreamClose",
            "org.apache.http.protocol.TestProtocolIntegration#testHttpPostsWithExpectContinue",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlHostInvalidInput",
            "org.apache.http.message.TestBasicHeaderIterator#testRemaining",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsChunked",
            "org.apache.http.entity.TestHttpEntityWrapper#testWriteTo",
            "org.apache.http.TestHttpVersion#testSerialization",
            "org.apache.http.entity.TestFileEntity#testIllegalConstructor",
            "org.apache.http.message.TestBufferedHeader#testInvalidName",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlEntityUnknownContentLength",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testLeaseRelease",
            "org.apache.http.impl.entity.TestEntitySerializer#testIllegalGenerateArg",
            "org.apache.http.protocol.TestHttpService#testExecutionExceptionInCustomExpectationVerifier",
            "org.apache.http.message.TestHeaderGroup#testClear",
            "org.apache.http.impl.nio.TestContentChannel#testContentEncoder",
            "org.apache.http.protocol.TestProtocolIntegration#testSimpleHttpPostsWithContentLength",
            "org.apache.http.util.TestByteArrayBuffer#testIndexOf",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testInvalidInput",
            "org.apache.http.nio.pool.TestNIOConnPool#testGetStatsInvalid",
            "org.apache.http.impl.io.TestContentLengthInputStream#testBasics",
            "org.apache.http.nio.util.TestBuffers#testInputBufferOperations",
            "org.apache.http.pool.TestConnPool#testLeaseRelease",
            "org.apache.http.message.TestNameValuePair#testInvalidName",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens4",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testDecodingWithSmallBuffer",
            "org.apache.http.impl.io.TestResponseParser#testInvalidConstructorInput",
            "org.apache.http.impl.io.TestRequestParser#testInvalidConstructorInput",
            "org.apache.http.impl.pool.TestBasicConnPool#testNullConstructor",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testMalformedChunkSizeDecoding",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestDateInvalidInput",
            "org.apache.http.impl.nio.reactor.ExceptionEventTest#testGetCause",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testInvalidNegativeContentLength",
            "org.apache.http.impl.nio.pool.TestBasicNIOConnPool#testCreateConnection",
            "org.apache.http.protocol.TestBasicHttpProcessor#testAddFirstRequestInterceptor",
            "org.apache.http.message.TestHeaderGroup#testConstructor",
            "org.apache.http.util.TestCharArrayBuffer#testExpandAppend",
            "org.apache.http.protocol.TestProtocolIntegration#testHttpPostsWithExpectationVerification",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testMultipleContentLength",
            "org.apache.http.entity.TestBufferedHttpEntity#testWrappingEntity",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestConnControlInvalidInput",
            "org.apache.http.entity.TestByteArrayEntity#testIllegalConstructorBadLen",
            "org.apache.http.impl.io.TestIdentityInputStream#testClosedCondition",
            "org.apache.http.message.TestBasicTokenIterator#testInvalid",
            "org.apache.http.entity.TestStringEntity#testBasics",
            "org.apache.http.TestHttpExceptions#testConstructor",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testShutdown",
            "org.apache.http.impl.io.TestIdentityOutputStream#testBasics",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostConnectHttp11",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionHead",
            "org.apache.http.impl.nio.reactor.ExceptionEventTest#testGetTimestamp",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithExpectationVerification",
            "org.apache.http.nio.pool.TestNIOConnPool#testMaxLimits",
            "org.apache.http.entity.TestContentType#testParse",
            "org.apache.http.impl.TestSessionBuffers#testReadWriteBytes",
            "org.apache.http.message.TestHeaderGroup#testHeaderRemove",
            "org.apache.http.message.TestHeader#testSerialization",
            "org.apache.http.impl.io.TestMessageParser#testInvalidInput",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseDateGenerated",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentInvalidInput",
            "org.apache.http.impl.TestSessionBuffers#testComplexReadWriteLine",
            "org.apache.http.util.TestByteArrayBuffer#testSetInvalidLength",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoRequestHandler",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlClientRequest2",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testWildCardMatchingWithQuery",
            "org.apache.http.message.TestBasicLineParser#testRLParseSuccess",
            "org.apache.http.impl.io.TestContentLengthInputStream#testClose",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostGenerated",
            "org.apache.http.pool.TestRouteSpecificPool#testReleaseInvalidEntry",
            "org.apache.http.message.TestHeaderGroup#testFirstLastHeaders",
            "org.apache.http.pool.TestRouteSpecificPool#testLeaseReleaseStateful",
            "org.apache.http.entity.TestStringEntity#testDefaultContent",
            "org.apache.http.protocol.TestHttpService#testConnectionKeepAlive",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testDecodingFileWithBufferedSessionData",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentIgnoreNonenclosingRequests",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testNoContentLengthResponseHttp1_0",
            "org.apache.http.message.TestBasicHeaderValueParser#testNVParseUsingCursor",
            "org.apache.http.message.TestHeaderElement#testConstructor3",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testDecodingFileWithOffsetAndBufferedSessionData",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingInvalidHeader",
            "org.apache.http.util.TestEntityUtils#testKnownLengthContentToByteArray",
            "org.apache.http.message.TestBasicHeaderValueParser#testNVParse",
            "org.apache.http.nio.pool.TestNIOConnPool#testTimeoutConnect",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadLineChunks",
            "org.apache.http.protocol.TestHttpExecutionContext#testContextOperations",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testCodingBeyondContentLimit",
            "org.apache.http.entity.TestSerializableEntity#testBasicsDirect",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseIllegal",
            "org.apache.http.message.TestHeader#testHeaderElements",
            "org.apache.http.message.TestBasicLineFormatter#testRLFormattingInvalidInput",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentStatusNoContent",
            "org.apache.http.impl.TestSessionBuffers#testNonAsciiReadWriteLine",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityNoContentDelimiter",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithIdentityTransferEncoding",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedConsistence",
            "org.apache.http.entity.TestEntityTemplate#testBasics",
            "org.apache.http.impl.entity.TestEntityDeserializer#testIllegalGenerateArg",
            "org.apache.http.message.TestHeaderElement#testHashCode",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseDateInvalidInput",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionEntityEnclosingRequestWithExpectContinueNoResponse",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlStatusCode",
            "org.apache.http.entity.TestByteArrayEntity#testBasicOffLen",
            "org.apache.http.impl.nio.reactor.TestDefaultListeningIOReactor#testEndpointAlreadyBoundNonFatal",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostConnectHttp10",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testReleaseInvalid",
            "org.apache.http.util.TestLangUtils#testNullObjectHash",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingIncompleteRequestLine",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntitySerialization",
            "org.apache.http.message.TestBufferedHeader#testSerialization",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithMultipleContentLength",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testBasicDecoding",
            "org.apache.http.pool.TestRouteSpecificPool#testRemove",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testRemove",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithContentLength",
            "org.apache.http.nio.pool.TestNIOConnPool#testInvalidConstruction",
            "org.apache.http.pool.TestConnPool#testGetStatsInvalid",
            "org.apache.http.message.TestHeaderElement#testEquals",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithIdentityTransferEncoding",
            "org.apache.http.message.TestBasicLineFormatter#testHeaderFormatting",
            "org.apache.http.message.TestRequestLine#testConstructorInvalidInput",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testDecodingFileWithOffsetAndBufferedSessionData",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedInputStreamNoClosingChunk",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestConnControlCustom",
            "org.apache.http.message.TestNameValuePair#testToString",
            "org.apache.http.util.TestByteArrayBuffer#testEnsureCapacity",
            "org.apache.http.message.TestStatusLine#testSerialization",
            "org.apache.http.message.TestStatusLine#testConstructor",
            "org.apache.http.impl.io.TestContentLengthOutputStream#testClose",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseServerNotGenerated",
            "org.apache.http.message.TestBasicTokenIterator#testValueEnd",
            "org.apache.http.util.TestCharArrayBuffer#testAppendString",
            "org.apache.http.message.TestBasicHeaderValueParser#testHEFringeCase3",
            "org.apache.http.impl.nio.reactor.TestDefaultIOReactors#testHandledRuntimeException",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens1",
            "org.apache.http.protocol.TestHttpService#testMethodNotSupported",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testNVPFormatting",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingEmptyFoldedHeader",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityNeitherContentLengthNorTransferEncoding",
            "org.apache.http.params.TestBasicHttpParams#testRemoveParam",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueNotGenerated",
            "org.apache.http.message.TestHeaderElement#testConstructor2",
            "org.apache.http.protocol.TestHttpExecutionContext#testEmptyContextOperations",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testExecutorTermination",
            "org.apache.http.message.TestBasicLineFormatter#testHeaderFormattingInvalidInput",
            "org.apache.http.pool.TestConnPool#testStatefulConnectionRedistributionOnPerRouteMaxLimit",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadToChannelWithMaxLen",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingBeyondContentLimitFromFile",
            "org.apache.http.nio.protocol.TestTruncatedChunks#testTruncatedChunkException",
            "org.apache.http.util.TestEncodingUtils#testAsciiStringToBytes",
            "org.apache.http.impl.nio.pool.TestBasicNIOConnPool#testCreateEntry",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testLineLimitForStatus",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testDecodingFileWithBufferedSessionData",
            "org.apache.http.message.TestNameValuePair#testCloning",
            "org.apache.http.impl.io.TestChunkCoding#testResumeOnSocketTimeoutInChunk",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testInvalidConstructor",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testDetectLineLimitEarly",
            "org.apache.http.message.TestBasicLineFormatter#testSLFormatting",
            "org.apache.http.pool.TestRouteSpecificPool#testShutdown",
            "org.apache.http.entity.TestContentType#testExtract",
            "org.apache.http.pool.TestPoolEntry#testBasics",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpGets",
            "org.apache.http.impl.io.TestMessageParser#testMaxHeaderCount",
            "org.apache.http.protocol.TestProtocolIntegration#testSimpleBasicHttpRequests",
            "org.apache.http.impl.nio.reactor.TestDefaultListeningIOReactor#testEndpointAlreadyBoundFatal",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testSimpleParsing",
            "org.apache.http.message.TestHeader#testCloning",
            "org.apache.http.util.TestCharArrayBuffer#testConstructor",
            "org.apache.http.entity.TestContentType#testExtractNullContentType",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testRemoveInvalid",
            "org.apache.http.impl.TestSessionBuffers#testBasicReadWriteLine",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingCompleted",
            "org.apache.http.impl.TestEnglishReasonPhraseCatalog#testReasonPhrases",
            "org.apache.http.impl.TestSessionBuffers#testMultibyteCodedReadWriteLine",
            "org.apache.http.util.TestCharArrayBuffer#testSimpleAppend",
            "org.apache.http.message.TestBasicHeaderElementIterator#testFringeCases",
            "org.apache.http.util.TestByteArrayBuffer#testInvalidAppend",
            "org.apache.http.entity.TestContentType#testParseInvalidInput",
            "org.apache.http.util.TestCharArrayBuffer#testAppendNullString",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithInvalidTransferEncoding",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testEmptyPool",
            "org.apache.http.message.TestBasicMessages#testExpectContinue",
            "org.apache.http.entity.TestSerializableEntity#testBasicsBuff",
            "org.apache.http.entity.TestAbstractHttpEntity#testContentEncoding",
            "org.apache.http.protocol.TestHttpService#testBasicExecutionHTTP10",
            "org.apache.http.pool.TestConnPool#testCreateNewIfExpired",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testBasicDecoding",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithUnsupportedTransferEncoding",
            "org.apache.http.impl.nio.pool.TestBasicNIOConnPool#testNullConstructor2",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityChunked",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostInvalidInput",
            "org.apache.http.util.TestCharArrayBuffer#testIndexOf",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedInputStreamSmallBuffer",
            "org.apache.http.impl.entity.TestEntityDeserializer#testChunkedTransferEncodingMustBeLast",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testChunkedTransferEncodingMustBeLast",
            "org.apache.http.protocol.TestHttpExecutionContext#testContextInvalidInput",
            "org.apache.http.util.TestLangUtils#testBasicEquality",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.message.TestBasicHeaderValueParser#testNVParseEscaped",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testBasicCoding",
            "org.apache.http.message.TestBasicLineFormatter#testSLFormattingInvalidInput",
            "org.apache.http.message.TestHeaderGroup#testCondensedHeader",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testDecodingFromSessionBuffer2",
            "org.apache.http.nio.pool.TestNIOConnPool#testSetMaxInvalid",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestUserAgentInvalidInput",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testBasicReadWriteLine",
            "org.apache.http.impl.TestBasicRequest#testRequestLine2",
            "org.apache.http.message.TestHeaderGroup#testUpdateHeader",
            "org.apache.http.entity.TestBasicHttpEntity#testContent",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpHeads",
            "org.apache.http.entity.TestSerializableEntity#testIllegalConstructor",
            "org.apache.http.impl.nio.reactor.TestDefaultIOReactors#testGracefulShutdown",
            "org.apache.http.pool.TestConnPool#testCloseExpired",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithInvalidContentLength",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamInvalidFooter",
            "org.apache.http.pool.TestPoolEntry#testInvalidExpiry",
            "org.apache.http.util.TestCharArrayBuffer#testInvalidAppendAsciiByteArray",
            "org.apache.http.message.TestBasicHeaderValueParser#testHEFringeCase1",
            "org.apache.http.impl.io.TestChunkCoding#testAvailable",
            "org.apache.http.entity.TestBasicHttpEntity#testBasics",
            "org.apache.http.protocol.TestHttpRequestExecutor#testInvalidInput",
            "org.apache.http.impl.pool.TestBasicConnPool#testHttpCreateEntry",
            "org.apache.http.message.TestBasicLineParser#testInvalidHttpVersionParsing",
            "org.apache.http.nio.pool.TestNIOConnPool#testCreateNewIfExpired",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityContentLenghtDelimited",
            "org.apache.http.nio.protocol.TestTruncatedChunks#testIgnoreTruncatedChunkException",
            "org.apache.http.message.TestNameValuePair#testConstructor",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingInvalidStatusLine",
            "org.apache.http.util.TestEntityUtils#testNullEntityToByteArray",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentTypeAndEncoding",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentEntityUnknownLengthHTTP10",
            "org.apache.http.util.TestEntityUtils#testDefaultCharsetContentToString",
            "org.apache.http.util.TestEncodingUtils#testAsciiBytesToString",
            "org.apache.http.entity.TestByteArrayEntity#testWriteToOffLen",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testNoContentLengthResponseHttp1_1",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentNullEntity",
            "org.apache.http.util.TestEntityUtils#testKnownLengthContentToString",
            "org.apache.http.impl.TestSessionBuffers#testBasicBufferProperties",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testIgnoreInvalidKeepAlive",
            "org.apache.http.entity.TestContentType#testExtractNullInput",
            "org.apache.http.pool.TestRouteSpecificPool#testLeaseRelease",
            "org.apache.http.nio.pool.TestNIOConnPool#testEmptyPool",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionSkipIntermediateResponses",
            "org.apache.http.message.TestBasicLineParser#testRLParseFailure",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testInvalidConstructor",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens6",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingFromFileSmaller",
            "org.apache.http.impl.TestSessionBuffers#testBasicReadWriteLineLargeBuffer",
            "org.apache.http.message.TestHeader#testBasicConstructorNullValue",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testExplicitClose",
            "org.apache.http.entity.TestByteArrayEntity#testIllegalConstructorBadOff1",
            "org.apache.http.entity.TestContentType#testBasis",
            "org.apache.http.TestHttpVersion#testHttpVersionEquality",
            "org.apache.http.impl.io.TestIdentityOutputStream#testClose",
            "org.apache.http.impl.io.TestChunkCoding#testConstructors",
            "org.apache.http.impl.io.TestContentLengthInputStream#testSkip",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testInputThrottling",
            "org.apache.http.util.TestLangUtils#testBasicHash",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithInvalidContentLength",
            "org.apache.http.concurrent.TestBasicFuture#testFailed",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testComplexDecoding",
            "org.apache.http.pool.TestRouteSpecificPool#testAdd",
            "org.apache.http.impl.io.TestResponseParser#testBasicMessageParsing",
            "org.apache.http.message.TestBasicHeaderValueParser#testParseHEEscaped",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testMalformedFooters",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdle",
            "org.apache.http.impl.io.TestIdentityOutputStream#testConstructors",
            "org.apache.http.protocol.TestBasicHttpProcessor#testAddTailRequestInterceptorNull",
            "org.apache.http.protocol.TestBasicHttpProcessor#testAddTailRequestInterceptor",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamNegativeSize",
            "org.apache.http.pool.TestConnPool#testLeaseTimeout",
            "org.apache.http.nio.pool.TestNIOConnPool#testCencelledConnect",
            "org.apache.http.message.TestBasicLineParser#testHttpVersionParsing",
            "org.apache.http.util.TestEntityUtils#testEmptyContentToByteArray",
            "org.apache.http.impl.nio.reactor.TestDefaultIOReactors#testRuntimeException",
            "org.apache.http.pool.TestRouteSpecificPool#testEmptyPool",
            "org.apache.http.entity.TestContentType#testExtractNoCharset",
            "org.apache.http.message.TestBasicMessages#testSetRequestEntity",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testCodingEmptyBuffer",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testFoldedFooters",
            "org.apache.http.impl.io.TestRequestParser#testBasicMessageParsing",
            "org.apache.http.util.TestByteArrayBuffer#testSetLength",
            "org.apache.http.pool.TestPoolEntry#testInvalidConstruction",
            "org.apache.http.entity.TestHttpEntityWrapper#testConsumeContent",
            "org.apache.http.util.TestEncodingUtils#testUnsupportedEncoding",
            "org.apache.http.entity.TestByteArrayEntity#testBasics",
            "org.apache.http.entity.TestBufferedHttpEntity#testBufferingEntity",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoServiceHandler",
            "org.apache.http.util.TestByteArrayBuffer#testSimpleAppend",
            "org.apache.http.message.TestBasicMessages#testSetResponseEntity",
            "org.apache.http.message.TestHeaderElement#testParamByName",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithUnsupportedTransferEncoding",
            "org.apache.http.impl.io.TestMessageParser#testParsingMalformedFirstHeader",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithIdentityTransferEncoding",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testInvalidInput",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestConnControlGenerated",
            "org.apache.http.message.TestRequestLine#testConstructor",
            "org.apache.http.protocol.TestHttpService#testUnsupportedHttpVersionException",
            "org.apache.http.entity.TestEntityTemplate#testWriteTo",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentEntityUnknownLengthHTTP11",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncFailed",
            "org.apache.http.message.TestBasicLineFormatter#testRLFormatting",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentEntityNoContentTypeAndEncoding",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testMaxHeaderCount",
            "org.apache.http.util.TestByteArrayBuffer#testAppendNullCharArrayBuffer",
            "org.apache.http.util.TestByteArrayBuffer#testAppendNullCharArray",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testReadOneByte",
            "org.apache.http.message.TestStatusLine#testConstructorInvalidInput",
            "org.apache.http.util.TestCharArrayBuffer#testAppendNullByteArray",
            "org.apache.http.impl.io.TestIdentityInputStream#testBasicRead",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testHEFormatting",
            "org.apache.http.util.TestCharArrayBuffer#testAppendAsciiByteArray",
            "org.apache.http.pool.TestConnPool#testMaxLimits",
            "org.apache.http.util.TestByteArrayBuffer#testExpandAppend",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testChunkNoExceed",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdleInvalid",
            "org.apache.http.impl.TestNoConnectionReuseStrategy#testNullContext",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testRegisterUnregister",
            "org.apache.http.message.TestAbstractMessage#testBasicHeaderOps",
            "org.apache.http.nio.util.TestBuffers#testDirectByteBufferAllocator",
            "org.apache.http.pool.TestPoolEntry#testValidInfinitely",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithInvalidChunkEncodingAndHTTP10",
            "org.apache.http.impl.io.TestChunkCoding#testCorruptChunkedInputStreamInvalidSize",
            "org.apache.http.util.TestEntityUtils#testContentWithContentTypeToString",
            "org.apache.http.nio.pool.TestNIOConnPool#testFailedConnect",
            "org.apache.http.message.TestHeaderElement#testToString",
            "org.apache.http.util.TestEncodingUtils#testStringToBytesToString",
            "org.apache.http.entity.TestInputStreamEntity#testIllegalConstructor",
            "org.apache.http.TestHttpVersion#testHttpVersionInvalidConstructorInput",
            "org.apache.http.entity.TestBufferedHttpEntity#testIllegalConstructor",
            "org.apache.http.nio.util.TestBuffers#testHeapByteBufferAllocator",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostWithNoEntities",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testInputMatchesBufferLength",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testTruncatedContent",
            "org.apache.http.message.TestBasicHeaderElementIterator#testMultiHeader",
            "org.apache.http.impl.nio.codecs.TestIdentityEncoder#testCodingCompleted",
            "org.apache.http.impl.TestSessionBuffers#testReadWriteByte",
            "org.apache.http.pool.TestConnPool#testInvalidConstruction",
            "org.apache.http.message.TestBasicMessages#testDefaultResponseConstructors",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testInvalidConstructor",
            "org.apache.http.impl.pool.TestBasicConnPool#testHttpsCreateConnection",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentInvalidInput",
            "org.apache.http.message.TestBasicLineFormatter#testHttpVersionFormatting",
            "org.apache.http.nio.util.TestBuffers#testOutputBufferNullInput",
            "org.apache.http.protocol.TestHttpService#testExecutionEntityEclosingRequestCustomExpectationVerifier",
            "org.apache.http.util.TestByteArrayBuffer#testSerialization",
            "org.apache.http.pool.TestConnPool#testConnectionRedistributionOnTotalMaxLimit",
            "org.apache.http.entity.TestContentType#testLowCaseText",
            "org.apache.http.params.TestDefaultedHttpParams#testEmptyParams",
            "org.apache.http.pool.TestConnPool#testEmptyPool",
            "org.apache.http.util.TestByteArrayBuffer#testConstructor",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testWriteLineChunks",
            "org.apache.http.util.TestCharArrayBuffer#testSerialization",
            "org.apache.http.util.TestEntityUtils#testNullEntityToString",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncNegativeTimeout",
            "org.apache.http.message.TestBasicHeaderIterator#testInvalid",
            "org.apache.http.nio.util.TestBuffers#testInputBufferNullInput",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testIncompleteChunkDecoding",
            "org.apache.http.pool.TestConnPool#testLeaseIOException",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithInvalidContentLength",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionEntityEnclosingRequest",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueHTTP10",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokensInvalid",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithMultipleContentLengthAllWrong",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testConnectionTokens2",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testInvalidConstructor",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostFallback",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testBasicDecodingFile",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpException",
            "org.apache.http.protocol.TestHttpService#testBasicExecution",
            "org.apache.http.util.TestEntityUtils#testMaxIntContentToString",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityNeitherContentLengthNorTransferEncoding",
            "org.apache.http.util.TestLangUtils#testArrayEquals",
            "org.apache.http.entity.TestHttpEntityWrapper#testIllegalConstructor",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testBasicDecoding",
            "org.apache.http.nio.pool.TestNIOConnPool#testConnectionRedistributionOnTotalMaxLimit",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testLineLimitForFoldedHeader",
            "org.apache.http.entity.TestInputStreamEntity#testBasics",
            "org.apache.http.impl.io.TestMessageParser#testBasicHeaderParsing",
            "org.apache.http.util.TestCharArrayBuffer#testSubstringIndexOfOutBound",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentInvalidResponseState",
            "org.apache.http.concurrent.TestBasicFuture#testCompletedWithTimeout",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithTransferEncoding",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingEmptyBuffer",
            "org.apache.http.message.TestBasicHeaderValueParser#testNVParseAllWithCursor",
            "org.apache.http.util.TestEntityUtils#testUnknownLengthContentToByteArray",
            "org.apache.http.message.TestBasicHeaderValueParser#testParseHeaderElements",
            "org.apache.http.message.TestHeaderGroup#testAddRemoveHeader",
            "org.apache.http.entity.TestFileEntity#testBasics",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testCodingBeyondContentLimitFile",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithMultipleContentLength",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentOverwriteHeaders",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testInvalidNVArguments",
            "org.apache.http.pool.TestRouteSpecificPool#testRemoveInvalid",
            "org.apache.http.message.TestBufferedHeader#testHeaderElements",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testChunkedContent",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestUserAgentNotGenerated",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityWithIdentityTransferEncoding",
            "org.apache.http.message.TestBasicHeaderElementIterator#testMultiHeaderSameLine",
            "org.apache.http.message.TestAbstractMessage#testInvalidInput",
            "org.apache.http.message.TestHeader#testToString",
            "org.apache.http.entity.TestAbstractHttpEntity#testContentType",
            "org.apache.http.impl.TestEnglishReasonPhraseCatalog#testStatusInvalid",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testMalformedCharacters",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testTruncatedContentWithFile",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testHTTP11Default",
            "org.apache.http.message.TestBasicHeaderValueFormatter#testElementsFormatting",
            "org.apache.http.impl.TestNoConnectionReuseStrategy#testGoodcall",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseServerMissing",
            "org.apache.http.impl.io.TestMessageParser#testMaxHeaderCountForFoldedHeader",
            "org.apache.http.util.TestEntityUtils#testUnknownLengthContentToString",
            "org.apache.http.impl.io.TestMessageParser#testParsingInvalidHeaders",
            "org.apache.http.entity.TestStringEntity#testWriteTo",
            "org.apache.http.message.TestAbstractMessage#testBasicProperties",
            "org.apache.http.util.TestLangUtils#testBooleanHash",
            "org.apache.http.util.TestCharArrayBuffer#testAppendSingleChar",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testExplicitKeepAlive",
            "org.apache.http.impl.entity.TestLaxContentLengthStrategy#testEntityWithMultipleContentLengthSomeWrong",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionRuntimeException",
            "org.apache.http.impl.io.TestIdentityInputStream#testConstructor",
            "org.apache.http.impl.io.TestChunkCoding#testEmptyChunkedInputStream",
            "org.apache.http.message.TestHeaderElement#testInvalidName",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedOutputStreamLargeChunk",
            "org.apache.http.impl.io.TestIdentityInputStream#testAvailable",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityNoContentDelimiter",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedDecoder#testInvalidInput",
            "org.apache.http.message.TestBasicMessages#testSetResponseStatus",
            "org.apache.http.message.TestStatusLine#testCloning",
            "org.apache.http.message.TestBasicMessages#testDefaultRequestConstructors",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingChunkedMessages",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testMalformedChunkTruncatedChunk",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithInvalidContentLength",
            "org.apache.http.message.TestRequestLine#testSerialization",
            "org.apache.http.pool.TestRouteSpecificPool#testReleaseInvalid",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentStatusResetContent",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncCancelled",
            "org.apache.http.impl.io.TestResponseParser#testConnectionClosedException",
            "org.apache.http.nio.pool.TestNIOConnPool#testSuccessfulConnect",
            "org.apache.http.message.TestBasicTokenIterator#testValueStart",
            "org.apache.http.concurrent.TestBasicFuture#testCompleted",
            "org.apache.http.entity.TestContentType#testCreateInvalidInput",
            "org.apache.http.impl.TestSessionBuffers#testMultibyteCodedReadWriteLongLine",
            "org.apache.http.protocol.TestHttpRequestExecutor#testExecutionEntityEnclosingRequestWithExpectContinueFailure",
            "org.apache.http.message.TestBasicTokenIterator#testMultiHeader",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedOutputStream",
            "org.apache.http.impl.io.TestRequestParser#testMessageParsingTimeout",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testBrokenConnectionDirective2",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedOutputStreamSmallChunk",
            "org.apache.http.impl.entity.TestStrictContentLengthStrategy#testEntityWithInvalidTransferEncoding",
            "org.apache.http.protocol.TestHttpRequestHandlerRegistry#testWildCardMatching2",
            "org.apache.http.impl.io.TestContentLengthInputStream#testConstructors",
            "org.apache.http.TestHttpVersion#testCloning",
            "org.apache.http.entity.TestBasicHttpEntity#testWriteTo",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseContentAddHeaders",
            "org.apache.http.util.TestByteArrayBuffer#testAppendEmptyCharArray",
            "org.apache.http.impl.nio.codecs.TestChunkEncoder#testCodingCompleted",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testFailedConnect",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingBadlyFoldedFirstHeader",
            "org.apache.http.impl.nio.reactor.TestDefaultIOReactors#testUnhandledRuntimeException",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testBasicCoding",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingEmptyFile",
            "org.apache.http.message.TestHeader#testInvalidName",
            "org.apache.http.TestHttpHost#testEquals",
            "org.apache.http.impl.nio.codecs.TestChunkDecoder#testInvalidConstructor",
            "org.apache.http.impl.io.TestMessageParser#testBufferedHeader",
            "org.apache.http.impl.TestDefaultConnectionReuseStrategy#testHTTP10Default",
            "org.apache.http.impl.entity.TestEntitySerializer#testEntityWithContentLength",
            "org.apache.http.pool.TestConnPool#testCloseIdleInvalid",
            "org.apache.http.impl.nio.reactor.ExceptionEventTest#testToString",
            "org.apache.http.message.TestBasicLineParser#testSLParseSuccess",
            "org.apache.http.impl.pool.TestBasicConnPool#testHttpCreateConnection",
            "org.apache.http.impl.io.TestContentLengthOutputStream#testConstructors",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestContentProtocolException",
            "org.apache.http.impl.TestEnglishReasonPhraseCatalog#testStatusAll",
            "org.apache.http.message.TestBasicHeaderValueParser#testHEFringeCase2",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testCancelledConnect",
            "org.apache.http.protocol.TestBasicHttpProcessor#testClearByClass",
            "org.apache.http.impl.entity.TestEntityDeserializer#testEntityContentType",
            "org.apache.http.impl.io.TestContentLengthInputStream#testAvailable",
            "org.apache.http.message.TestBasicTokenIterator#testTokenChar",
            "org.apache.http.message.TestBufferedHeader#testBasicConstructor",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testCodingCompletedFromFile",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestUserAgentGenerated",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseConnControlNoEntity",
            "org.apache.http.impl.TestSessionBuffers#testInvalidCharArrayBuffer",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueZeroContent",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestExpectContinueInvalidInput",
            "org.apache.http.protocol.TestStandardInterceptors#testResponseServerGenerated",
            "org.apache.http.protocol.TestProtocolIntegration#testSimpleHttpPostsHTTP10",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedInputStreamClose",
            "org.apache.http.impl.nio.codecs.TestLengthDelimitedEncoder#testInvalidConstructor",
            "org.apache.http.protocol.TestHttpService#testBasicProtocolDowngrade",
            "org.apache.http.util.TestEntityUtils#testEmptyContentToString",
            "org.apache.http.impl.nio.reactor.TestSessionInOutBuffers#testWriteFromChannel",
            "org.apache.http.impl.TestBasicRequest#testConstructor",
            "org.apache.http.protocol.TestStandardInterceptors#testRequestTargetHostMissingHostHTTP10",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testBasicDecodingFile",
            "org.apache.http.message.TestBasicHeaderIterator#testFirstLastOneNone",
            "org.apache.http.impl.io.TestChunkCoding#testChunkedInputStreamOneByteRead",
            "org.apache.http.impl.nio.codecs.TestIdentityDecoder#testInvalidInput",
            "org.apache.http.nio.pool.TestRouteSpecificPool#testReleaseInvalidEntry",
            "org.apache.http.entity.TestInputStreamEntity#testWriteTo",
            "org.apache.http.message.TestStatusLine#testToString",
            "org.apache.http.impl.nio.codecs.TestHttpMessageParser#testParsingFoldedHeaders",
            "org.apache.http.entity.TestSerializableEntity#testWriteToBuff",
            "org.apache.http.impl.TestSessionBuffers#testLineLimit"
        ],
        "passed_tests": [],
        "failed_tests": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "chaos_failed_tests": [
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdle",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpException",
            "org.apache.http.nio.pool.TestNIOConnPool#testCreateNewIfExpired",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpGets",
            "org.apache.http.pool.TestConnPool#testLeaseTimeout",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpException",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoRequestHandler",
            "org.apache.http.pool.TestConnPool#testStatefulConnectionRedistributionOnPerRouteMaxLimit",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.pool.TestConnPool#testCreateNewIfExpired",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostWithNoEntities",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoServiceHandler",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncTimeout",
            "org.apache.http.nio.pool.TestNIOConnPool#testSuccessfulConnect",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsContentNotConsumed",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpGets",
            "org.apache.http.pool.TestPoolEntry#testBasics",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpGets",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseExpired",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpHeads",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout",
            "org.apache.http.pool.TestConnPool#testCloseExpired",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpHeads",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsChunked",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testInputThrottling",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.pool.TestPoolEntry#testExpiry"
        ],
        "flaky_tests": [
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpException",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.pool.TestConnPool#testLeaseTimeout",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpException",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoRequestHandler",
            "org.apache.http.pool.TestConnPool#testStatefulConnectionRedistributionOnPerRouteMaxLimit",
            "org.apache.http.pool.TestConnPool#testCreateNewIfExpired",
            "org.apache.http.impl.pool.TestBasicConnPool#testHttpCreateConnection",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostWithNoEntities",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoServiceHandler",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpGets",
            "org.apache.http.nio.protocol.TestNIOSSLHttp#testHttpPostsWithContentLength",
            "org.apache.http.impl.nio.reactor.TestDefaultIOReactors#testGracefulShutdown",
            "org.apache.http.pool.TestConnPool#testCloseExpired",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsChunked",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testInputThrottling",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsChunked"
        ],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [
            "org.apache.http.pool.TestConnPool#testCloseExpired",
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdle",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseExpired",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.concurrent.TestBasicFuture#testAsyncTimeout",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout"
        ],
        "config_only_random_max": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_sleep_increase": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_time_round": [
            "org.apache.http.pool.TestConnPool#testCloseExpired",
            "org.apache.http.pool.TestConnPool#testCreateNewIfExpired",
            "org.apache.http.nio.pool.TestNIOConnPool#testSuccessfulConnect",
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdle",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.nio.pool.TestNIOConnPool#testCreateNewIfExpired",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseExpired",
            "org.apache.http.pool.TestPoolEntry#testExpiry",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout"
        ],
        "config_only_random_fix": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_locale_fix": [
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_date_relative": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_socket_0.1": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_clock_relative": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_time_increment": [
            "org.apache.http.pool.TestConnPool#testCloseIdle",
            "org.apache.http.nio.pool.TestNIOConnPool#testCloseIdle",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpException",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpGets",
            "org.apache.http.pool.TestConnPool#testLeaseTimeout",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpException",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoRequestHandler",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostWithNoEntities",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testNoServiceHandler",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.nio.pool.TestNIOConnPool#testSuccessfulConnect",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsContentNotConsumed",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsHTTP10",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithContentLength",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpGets",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpGets",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpHeads",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout",
            "org.apache.http.pool.TestPoolEntry#testExpiry",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpHeads",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testSimpleHttpPostsChunked",
            "org.apache.http.nio.protocol.TestBufferingNHttpHandlers#testHttpPostsWithExpectContinue",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testDelayedHttpGets",
            "org.apache.http.nio.protocol.TestThrottlingNHttpHandlers#testInputThrottling",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsChunked",
            "org.apache.http.nio.protocol.TestAsyncNHttpHandlers#testHttpPostsWithExpectContinue"
        ],
        "config_only_time_relative": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.pool.TestPoolEntry#testBasics",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout",
            "org.apache.http.pool.TestPoolEntry#testExpiry"
        ],
        "config_only_random_min": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_sleep_random": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.pool.TestConnPool#testStatefulConnectionRedistributionOnPerRouteMaxLimit"
        ],
        "config_only_zone_fix": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_time_speedup": [
            "org.apache.http.nio.pool.TestNIOConnPool#testSuccessfulConnect",
            "org.apache.http.pool.TestConnPool#testLeaseTimeout",
            "org.apache.http.pool.TestPoolEntry#testExpiry",
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout"
        ],
        "config_only_time_slow": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput",
            "org.apache.http.pool.TestPoolEntry#testBasics",
            "org.apache.http.nio.pool.TestNIOConnPool#testLeaseRequestTimeout",
            "org.apache.http.pool.TestPoolEntry#testExpiry"
        ],
        "config_only_fix_date": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ],
        "config_only_date_bk": [
            "org.apache.http.impl.nio.reactor.TestBaseIOReactorSSL#testBufferedInput"
        ]
    },
    "hector-client-hector": {
        "total_tests": [
            "me.prettyprint.hom.ClassCacheMgrTest#testInheritanceOfNonEntity",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.ConfigurableConsistencyLevelTest#testReadWriteSame",
            "me.prettyprint.cassandra.connection.RoundRobinBalancingPolicyTest#testGetPoolOk",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.serializers.DateSerializerTest#testConversions",
            "me.prettyprint.cassandra.serializers.BytesArraySerializerTest#testConversions",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "com.mycompany.furniture.FurnitureTest#",
            "me.prettyprint.hom.ClassCacheMgrTest#testInheritanceOfEntity",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.hom.HectorObjectMapperTest#testCreateInstance",
            "me.prettyprint.cassandra.serializers.ObjectSerializerTest#testConversions",
            "me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactoryTest#",
            "me.prettyprint.cassandra.model.AbstractSliceQueryTest#testGetSetPredicate_columnNames",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testHostnameOnlyDefaultPort",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testCassandraHostSetupSplit",
            "me.prettyprint.cassandra.model.ColumnSliceTest#testConstruction",
            "me.prettyprint.hector.api.HFactoryTest#testCreateClockResolution",
            "me.prettyprint.hom.ClassCacheMgrTest#testInheritanceOfEntityWithNoProperties",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSuperSlicesQuery",
            "me.prettyprint.hom.ContainerInitalizationTest#",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperInsertGetRemove",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[5]",
            "me.prettyprint.cassandra.connection.LeastActiveBalancingPolicyTest#testSkipExhausted",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperCountQuery",
            "me.prettyprint.hom.ClassCacheMgrTest#testInheritanceWithMultiLevels",
            "me.prettyprint.hom.annotations.AnnotationScannerTest#testScanForAnnotation",
            "me.prettyprint.cassandra.model.AbstractSliceQueryTest#testGetSetPredicate_range",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.connection.RoundRobinBalancingPolicyTest#testSkipExhausted",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSubSlicesQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testInsertGetRemove",
            "me.prettyprint.cassandra.model.ConfigurableConsistencyLevelTest#testDefaults",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoadCustomId",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubColumnQuery",
            "me.prettyprint.hom.ClassCacheMgrTest#testBadIdGetterSetter",
            "me.prettyprint.hom.EntityManagerFactoryTest#",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperSliceQuery",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testHostnameOnlyDefaultPortMultipleHosts",
            "me.prettyprint.hom.EntityManagerTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testConfiguratorClockResolution",
            "me.prettyprint.hom.HectorObjectMapperTest#testCreateInstanceCustomIdType",
            "me.prettyprint.cassandra.serializers.TypeInferringSerializerTest#testByteConversions",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testConfiguratorPort",
            "me.prettyprint.hector.api.ApiV2SystemTest#testCountQuery",
            "me.prettyprint.hector.api.ClockResolutionTest#testMicrosecondsSync",
            "me.prettyprint.hom.ClassCacheMgrTest#testBadPojo",
            "me.prettyprint.cassandra.serializers.TypeInferringSerializerTest#testConversions",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCloseEntityManagerFactory",
            "me.prettyprint.hom.HectorObjectMapperTest#testIsNotSerializable",
            "me.prettyprint.cassandra.service.BatchMutationTest#testAddInsertion",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubCountQuery",
            "me.prettyprint.hom.HectorObjectMapperTest#testCreateColumnSet",
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.serializers.ObjectSerializerTest#testEmptyByteArray_shouldReturnNull",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSliceQuery",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[4]",
            "me.prettyprint.hom.ClassCacheMgrTest#testGetColFamMapDefByClassAnonymousSubclassNotOK",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubSliceQuery",
            "me.prettyprint.cassandra.connection.LeastActiveBalancingPolicyTest#testGetPoolOk",
            "me.prettyprint.hector.api.ApiV2SystemTest#testBatchInsertGetRemove",
            "me.prettyprint.cassandra.service.CassandraAuthTest#",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[3]",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[0]",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.serializers.BooleanSerializerTest#testConversions",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testConfigValuesPropogated",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ClassCacheMgrTest#testGetColFamMapDefByClass",
            "me.prettyprint.cassandra.serializers.UUIDSerializerTest#testConversions",
            "me.prettyprint.hom.ClassCacheMgrTest#testDupeEntityColumnFamilyMapping",
            "me.prettyprint.cassandra.serializers.ObjectSerializerTest#testMalformedObject_shouldThrow",
            "me.prettyprint.cassandra.serializers.IntegerSerializerTest#testConversions",
            "me.prettyprint.cassandra.model.SuperColumnSliceTest#testConstruction",
            "me.prettyprint.hom.HectorObjectMapperTest#testIsSerializable",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[2]",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSubSliceQuery",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSlicesQuery",
            "me.prettyprint.cassandra.model.ConfigurableConsistencyLevelTest#testSetRuntimeCl",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDAsByteArray",
            "me.prettyprint.hom.ClassCacheMgrTest#testGetColFamMapDefByClassSubclassNotOK",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testSimpleCassandraHostSetup",
            "me.prettyprint.cassandra.service.CassandraHostConfiguratorTest#testApplyConfig",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDAsByteBuffer",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSuperSliceQuery",
            "me.prettyprint.cassandra.service.BatchMutationTest#testAddDeletion",
            "me.prettyprint.cassandra.serializers.StringSerializerTest#test[1]",
            "me.prettyprint.hom.ClassCacheMgrTest#testGetColFamMapDefByClassAnonymousClassOK",
            "me.prettyprint.cassandra.serializers.LongSerializerTest#testConversions",
            "me.prettyprint.cassandra.service.BatchMutationTest#testAddSuperInsertion"
        ],
        "passed_tests": [],
        "failed_tests": [
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.hom.EntityManagerTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#"
        ],
        "chaos_failed_tests": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "flaky_tests": [
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperInsertGetRemove",
            "me.prettyprint.hector.api.ApiV2SystemTest#testCountQuery",
            "me.prettyprint.cassandra.model.MutatorTest#testSubDelete",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#testInsertGetDelete",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetSlice",
            "me.prettyprint.cassandra.model.MutatorTest#testRowDeletion",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetCount",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperCountQuery",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSubSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubCountQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSuperSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testInsertGetRemove",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSliceQuery",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testInsertAndGetAndRemove",
            "me.prettyprint.cassandra.model.MutatorTest#testBatchMutationManagement",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSlice",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSuperSlice",
            "me.prettyprint.cassandra.service.KeyspaceTest#testInsertAndGetAndRemove",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchMutateBatchMutation",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubSliceQuery",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchMutate",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#testMultiInsertGetDelete",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubColumnQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testBatchInsertGetRemove",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperSliceQuery",
            "me.prettyprint.cassandra.service.KeyspaceTest#testInsertSuper",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#testMultigetCount",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#testInsertGetDelete",
            "me.prettyprint.cassandra.model.MutatorTest#testInsert",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchUpdateInsertAndDelOnSame"
        ],
        "tests": [],
        "od_tests": [
            "me.prettyprint.cassandra.service.CassandraClusterTest#testAddDropKeyspace",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetSuperColumn",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchInsertColumn",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testAddDropKeyspace",
            "me.prettyprint.cassandra.model.MutatorTest#testInsertSuper",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testDescribeKeyspaces",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testEditKeyspace",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSlice",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSuperSlice",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSuperSlicesQuery",
            "me.prettyprint.cassandra.service.KeyspaceTest#testInsertSuper",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#testMultigetCount",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#testInsertGetDelete",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperInsertGetRemove",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testInsertAndGetAndRemoveBadAuth",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetSlice",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribeKeyspace",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperCountQuery",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetCount",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetSlice_1",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSubSlicesQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testInsertGetRemove",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testAddDropColumnFamily",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetSuperSlice",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#testMultiClause",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testInsertAndGetAndRemove",
            "me.prettyprint.cassandra.model.MutatorTest#testBatchMutationManagement",
            "me.prettyprint.cassandra.service.KeyspaceTest#testInsertAndGetAndRemove",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchMutateBatchMutation",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSuperRangeSlice",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubColumnQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSuperSliceQuery",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#testEqClauseMiss",
            "me.prettyprint.hector.api.ApiV2SystemTest#testCountQuery",
            "me.prettyprint.cassandra.model.MutatorTest#testSubDelete",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testEditColumnFamily",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetRangeSlice",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#testKeysOnlyPredicate",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCloseEntityManagerFactory",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#testBorrowRelease",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetCount",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubCountQuery",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribeKeyspaces",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#testSpinUp",
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSuperRangeSlices",
            "me.prettyprint.cassandra.connection.HThriftClientTest#testFailOnDoubleOpen",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSliceQuery",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#testRemoveHost",
            "me.prettyprint.hector.api.ApiV2SystemTest#testSubSliceQuery",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#testMultiInsertGetDelete",
            "me.prettyprint.hector.api.ApiV2SystemTest#testBatchInsertGetRemove",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribeThriftVersion",
            "me.prettyprint.cassandra.model.MutatorTest#testInsert",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchUpdateInsertAndDelOnSame",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#testShutdown",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testDescribeKeyspacesBadAuth",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetRangeSlices",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#testInsertGetRemove",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#testRowCountLimit",
            "me.prettyprint.cassandra.connection.HThriftClientTest#testGetCassandraNotOpen",
            "me.prettyprint.cassandra.service.KeyspaceTest#testMultigetColumn",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#testInsertGetDelete",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testAddDropColumnFamily",
            "me.prettyprint.cassandra.model.MutatorTest#testRowDeletion",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribePartitioner",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#testAddCassandraHostFail",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSubSliceQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testRangeSlicesQuery",
            "me.prettyprint.hector.api.ApiV2SystemTest#testMultigetSuperSliceQuery",
            "me.prettyprint.cassandra.service.CassandraAuthTest#testDescribeKeyspace",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetConsistencyLevel",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetSuperColumn",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribeClusterName",
            "me.prettyprint.cassandra.service.KeyspaceTest#testBatchMutate",
            "me.prettyprint.cassandra.connection.HThriftClientTest#testOpenAndClose",
            "me.prettyprint.cassandra.service.CassandraClusterTest#testDescribeRing",
            "me.prettyprint.cassandra.service.KeyspaceTest#testGetKeyspaceName"
        ],
        "config_only_sleep_decrease": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_random_max": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_sleep_increase": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_time_round": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_random_fix": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_locale_fix": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_date_relative": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_socket_0.1": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_clock_relative": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_time_increment": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_time_relative": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_random_min": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_sleep_random": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_zone_fix": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_time_speedup": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_time_slow": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_fix_date": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.hom.EntityManagerFactoryTest#testCreateEntityManager",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ],
        "config_only_date_bk": [
            "me.prettyprint.hom.EntityManagerTest#testInitializeSaveLoad",
            "me.prettyprint.cassandra.model.IndexedSlicesQueryTest#",
            "com.mycompany.furniture.FurnitureTest#testFurniture",
            "me.prettyprint.cassandra.connection.ConcurrentHClientPoolTest#",
            "me.prettyprint.cassandra.model.MutatorTest#",
            "me.prettyprint.cassandra.model.RangeSlicesQueryTest#",
            "me.prettyprint.cassandra.utils.TimeUUIDUtilsTest#testTimeUUIDWithClockResolution",
            "me.prettyprint.cassandra.connection.HConnectionManagerTest#",
            "me.prettyprint.cassandra.connection.HThriftClientTest#",
            "me.prettyprint.cassandra.examples.ExampleDaoV2Test#",
            "me.prettyprint.cassandra.service.CassandraClusterTest#",
            "me.prettyprint.cassandra.service.KeyspaceTest#",
            "me.prettyprint.hom.ContainerInitalizationTest#testInjectEntityManager",
            "me.prettyprint.cassandra.dao.SimpleCassandraDaoTest#",
            "me.prettyprint.cassandra.model.MultigetCountQueryTest#",
            "me.prettyprint.cassandra.service.CassandraAuthTest#"
        ]
    },
    "ninjaframework-ninja": {
        "total_tests": [
            "ninja.session.SessionCookieTest#testHttpOnlyWorks",
            "ninja.utils.NinjaPropertiesImplTest#testReferenciningOfPropertiesWorks",
            "ninja.template.TemplateEngineJsonPTest#testBadCallbackNameFlow",
            "ninja.i18n.MessagesImplTest#testiParameterized18nWithContextAndResult",
            "ninja.utils.HttpHeaderUtilsTest#testGetContentTypeFromContentTypeAndCharacterSetting",
            "ninja.ResultTest#testSetAndGetTemplate",
            "ninja.utils.ResultHandlerTest#testContentNegotiation",
            "ninja.ResultTest#testRenderEntryAndMakeSureMapIsCreated",
            "ninja.params.ControllerMethodInvokerTest#validationFailedWithTwoAnnotations",
            "controllers.ApiControllerTest#testGetAndPostArticleViaJson",
            "ninja.RouteBuilderImplTest#testBasicGETRoute",
            "ninja.servlet.ContextImplTest#testGetParameterAsInteger",
            "ninja.session.FlashCookieTest#testThatFlashCookieClearOfOutgoingWorks",
            "ninja.SecureFilterTest#testSessionIsNotReturingWhenUserNameMissing",
            "ninja.params.ControllerMethodInvokerTest#doubleValidationShouldWork",
            "example.ExampleIntegrationTest#testThatStaticAssetsWork",
            "ninja.utils.NinjaModeHelperTest#testNinjaModeHelperWorksWithDevSet",
            "ninja.params.ControllerMethodInvokerTest#floatParamShouldHandleNull",
            "ninja.utils.NinjaConstantTest#testAllConstants",
            "ninja.jpa.JpaInitializerTest#testStop",
            "ninja.params.ControllerMethodInvokerTest#booleanParamShouldBeParsedToBoolean",
            "conf.RoutesTest#testRoutes",
            "ninja.i18n.MessagesImplTest#testAgainstCorrectParsingOfDelimitersInPropertiesFiles",
            "ninja.utils.HttpHeaderUtilsTest#testGetCharacterSetOfContentTypeOrUtf8",
            "ninja.params.ControllerMethodInvokerTest#primBooleanParamShouldBeParsedToBoolean",
            "ninja.params.ControllerMethodInvokerTest#booleanParamShouldHandleNull",
            "controllers.UploadControllerTest#testThatUploadWorks",
            "ninja.params.ControllerMethodInvokerTest#customArgumentExtractorWithGuiceShouldBeInstantiated",
            "ninja.utils.SwissKnifeTest#testGetRealClassNameLowerCamelCase",
            "ninja.utils.CookieDataCodecTest#decode_values_of_the_previously_supported_format",
            "ninja.template.TemplateEngineManagerImplTest#testOverrideJson",
            "ninja.utils.ResultHandlerTest#testRenderPlainStringLeavesExplicitlySetContentTypeUntouched",
            "ninja.session.FlashCookieTest#testThatFlashCookieKeepWorks",
            "ninja.AssetsControllerTest#testAssetsController404",
            "ninja.ResultTest#testRenderMultipleObjects",
            "controllers.ApiControllerTest#testGetAndPostArticleViaXml",
            "ninja.ResultsTest#testResultsForbidden",
            "ninja.template.TemplateEngineManagerImplTest#testGetJsonP",
            "controllers.PersonControllerTest#testPostPersonJson",
            "ninja.params.ControllerMethodInvokerTest#integerParamShouldHandleNull",
            "example.ExampleApiTest#testThatInjectorAccessibleFromNinjaTestIsTheApplicationInjector",
            "ninja.utils.ResultHandlerTest#testThatNoHttpBodyWorks",
            "ninja.template.TemplateEngineManagerImplTest#testGetFreemarker",
            "ninja.ResultsTest#testResultsRedirectTemporary",
            "ninja.cache.CacheProviderTest#testEhCacheDefaulLoadingWorks",
            "ninja.session.SessionCookieTest#testSessionCookieSettingWorks",
            "ninja.servlet.ContextImplTest#testContentTypeWithNullEncodingGetsConvertedProperlyUponFinalize",
            "ninja.servlet.ContextImplTest#testGetAcceptEncoding",
            "ninja.scheduler.SchedulerSupportTest#schedulableShouldUsePropertyConfig",
            "ninja.utils.CookieDataCodecTest#flash_cookies_should_bake_in_a_header_and_value",
            "controllers.UploadControllerTest#testHtmlEscapingInTeamplateWorks",
            "ninja.utils.ResultHandlerTest#testCacheControlDoesNotGetTouchedWhenSet",
            "ninja.ResultTest#testRenderRenderable",
            "ninja.ResultTest#testAndAddHeaders",
            "ninja.ResultsTest#testResultsStatus",
            "ninja.session.FlashCookieTest#testFlashCookieSettingWorks",
            "ninja.ResultTest#testUtf8IsUsedAsDefaultCharset",
            "ninja.ResultsTest#testResultsNoContent",
            "ninja.servlet.ContextImplTest#testAddCookieViaResult",
            "controllers.ApplicationControllerTest#testThatRedirectWorks",
            "ninja.ResultTest#testSettingOfCharsetWorks",
            "ninja.utils.ResultHandlerTest#testAddingOfDefaultHeadersWorks",
            "ninja.RouteBuilderImplTest#testBasicRoutesWithRegex",
            "ninja.params.ControllerMethodInvokerTest#primBooleanParamShouldHandleNull",
            "ninja.params.ControllerMethodInvokerTest#sessionParamAnnotatedArgumentShouldBePassed",
            "ninja.ResultsTest#testResultsBadRequest",
            "ninja.i18n.MessagesImplTest#testiSimple18n",
            "conf.RoutesTest#testTestRoutesAreHiddenFromProduction",
            "ninja.i18n.LangImplTest#testClearLanguage",
            "controllers.ApplicationControllerTest#testFlashErrorWorks",
            "ninja.ResultTest#testConstructor",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldBeStartedIfExplicitlyBoundAndSingleton",
            "ninja.utils.NinjaPropertiesImplTest#testGetBooleanWithDefault",
            "ninja.params.ControllerMethodInvokerTest#pathParamAnnotatedArgumentShouldBePassed",
            "ninja.session.SessionCookieTest#testSessionDoesNotGetWrittenToResponseWhenEmptyAndOnlySentWhenChanged",
            "ninja.servlet.ContextImplTest#testGetInputStreamEnforcingOfCorrectEncoding",
            "ninja.ResultsTest#testResultsHtml",
            "conf.RoutesTest#testReverseRoutingWithMap",
            "controllers.ApplicationControllerTest#testFlashAnyWorks",
            "ninja.ResultsTest#testResultsAsync",
            "ninja.servlet.ContextImplTest#testGetPathParameter",
            "ninja.lifecycle.LifecycleSupportTest#providedSingletonDisposableShouldBeDisposed",
            "ninja.utils.NinjaPropertiesImplTest#testLoadingOfExternalConfigurationFileWorksAndPrefixedConfigurationsSetRead",
            "ninja.utils.NinjaPropertiesImplTest#testGetBooleanOrDie",
            "ninja.RouteBuilderImplTest#testPointsInRegexDontCrashRegexInTheMiddleOfTheRoute",
            "ninja.servlet.ContextImplTest#testGetReaderEnforcingOfCorrectEncoding",
            "ninja.params.ControllerMethodInvokerTest#customArgumentExtractorWithNoArgsShouldBeInstantiated",
            "controllers.RoutesTest#testThatSetupIsNotAccessibleInProd",
            "controllers.ApplicationControllerTest#makeSureSessionsGetSentToClient",
            "ninja.session.FlashCookieTest#testFlashScopeDoesNothingWhenFlashCookieEmpty",
            "ninja.params.ControllerMethodInvokerTest#noParameterMethodShouldBeInvoked",
            "ninja.SecureFilterTest#testSecureFilter",
            "ninja.utils.DateUtilImplTest#testParseHttpDateFormatToDateTime",
            "ninja.AssetsControllerTest#testAssetsControllerNormalOperationModifiedNoCaching",
            "ninja.ResultsTest#testResultsJson",
            "ninja.params.ControllerMethodInvokerTest#longParamShouldHandleNull",
            "ninja.params.ControllerMethodInvokerTest#longParamShouldBeParsedToLong",
            "ninja.lifecycle.LifecycleSupportTest#providedSingletonStartableShouldBeStarted",
            "ninja.cache.CacheProviderTest#testThatSettingWrongCacheImplementationYieldsException",
            "ninja.RouteBuilderImplTest#testBasicPOSTRoute",
            "controllers.ApiControllerMockTest#testThatPostArticleReturnsOkWhenArticleDaoReturnsTrue",
            "ninja.ResultTest#testGetRenderable",
            "ninja.params.ControllerMethodInvokerTest#contextShouldBePassed",
            "ninja.i18n.MessagesImplTest#testi18nGetAllWithContextAndResult",
            "ninja.CookieTest#testThatBuilderRejectsNullKeys",
            "controllers.AssetsControllerTest#testThatAssetsWork",
            "ninja.params.ControllerMethodInvokerTest#validationFailedRange",
            "ninja.ResultTest#testSetAndGetStatus",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplTest#testCreateListOfAddresses",
            "ninja.ResultTest#testRenderRaw",
            "controllers.ApiControllerDocTest#testGetAndPostArticleViaJson",
            "ninja.servlet.ContextImplTest#testGetParameter",
            "ninja.servlet.ContextImplTest#testParseBodyWithUnkownContentTypeWorks",
            "ninja.utils.DateUtilImplTest#testFormatForHttpHeaderLong",
            "ninja.RouteBuilderImplTest#testBasicPlaceholersParametersAndRegex",
            "ninja.params.ControllerMethodInvokerTest#validationShouldBeAppliedInCorrectOrderPostFail",
            "ninja.template.TemplateEngineManagerImplTest#testGetJson",
            "ninja.utils.CookieDataCodecTest#bake_in_a_header_an_empty_value",
            "ninja.servlet.ContextImplTest#testGetPathParameterDecodingWorks",
            "ninja.params.ControllerMethodInvokerTest#integerParamShouldBeParsedToInteger",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldBeStartedIfAccessedAfterLifecycleServiceIsStarted",
            "controllers.LoginLogoutControllerTest#testLogingLogout",
            "ninja.ResultsTest#testResultsJsonWithObjectToRender",
            "ninja.servlet.ContextImplTest#testGetRequestPathWorksAsExpectedWithOutContext",
            "ninja.params.ControllerMethodInvokerTest#doubleParamShouldHandleNull",
            "ninja.servlet.ContextImplTest#testGetAcceptContentType",
            "ninja.utils.CookieDataCodecTest#specifically_exclude_control_chars",
            "ninja.utils.MimeTypesTest#testLoadingWorks",
            "ninja.ResultTest#testGetContentType",
            "ninja.params.ControllerMethodInvokerTest#intParamShouldHandleNull",
            "ninja.session.SessionCookieTest#testThatCookieSavingAndInitingWorks",
            "ninja.params.ControllerMethodInvokerTest#primFloatValidationShouldWork",
            "controllers.I18nControllerTest#testThatExplicitLangSettingWorks",
            "ninja.utils.NinjaPropertiesImplTest#testGetIntegerWithDefault",
            "ninja.i18n.MessagesImplTest#testiSimple18nWithContextResult",
            "ninja.ResultTest#testRedirect",
            "controllers.NotFoundTest#testThatNotFoundWorks",
            "ninja.params.ControllerMethodInvokerTest#validationWithNullObject",
            "ninja.servlet.ContextImplTest#testContentTypeGetsConvertedProperlyUponFinalize",
            "ninja.lifecycle.LifecycleSupportTest#nonSingletonServicesShouldBeInstantiatedForEachInstance",
            "ninja.RouteBuilderImplTest#testPointsInRegexDontCrashRegexAtEnd",
            "ninja.utils.NinjaModeHelperTest#testNinjaModeHelperWorksWithProdSet",
            "ninja.utils.NinjaPropertiesImplTest#testGetIntegerDie",
            "ninja.params.ControllerMethodInvokerTest#primDoubleParamShouldBeParsedToDouble",
            "ninja.params.ControllerMethodInvokerTest#primLongValidationShouldWork",
            "ninja.params.ControllerMethodInvokerTest#primDoubleValidationShouldWork",
            "ninja.utils.HttpCacheToolkitImplTest#testIsModified",
            "ninja.scheduler.SchedulerSupportTest#schedulableAddedAfterStartShouldBeScheduledImmediately",
            "ninja.servlet.ContextImplTest#testGetAcceptLanguage",
            "ninja.utils.DateUtilImplTest#testParseHttpDateFormat",
            "ninja.params.ControllerMethodInvokerTest#attributeAnnotatedArgumentShouldBePassed",
            "ninja.ResultsTest#testResultsOk",
            "ninja.params.ControllerMethodInvokerTest#integerValidationShouldWork",
            "controllers.I18nControllerTest#testThatI18nWorksEn",
            "controllers.AssetsControllerTest#testThatSettingOfMimeTypeWorks",
            "controllers.ApplicationControllerTest#testThatValidationWorks",
            "ninja.utils.CookieDataCodecTest#specifically_exclude_special_cookie_chars",
            "ninja.utils.SecretGeneratorTest#testGenerateSecret",
            "ninja.servlet.ContextImplTest#testParseBodyJsonWorks",
            "ninja.params.ControllerMethodInvokerTest#paramAnnotatedArgumentShouldBePassed",
            "ninja.params.ControllerMethodInvokerTest#floatValidationShouldWork",
            "ninja.params.ControllerMethodInvokerTest#validationShouldBeAppliedInCorrectOrderPreFail",
            "example.ExampleApiTest#testThatStaticAssetsWork",
            "ninja.i18n.LangImplTest#testChangeLanguage",
            "ninja.RouteBuilderImplTest#testBasicPUTRoute",
            "ninja.utils.NinjaPropertiesImplToolTest#testMissingSecretCreatesNewOneInDevMode",
            "controllers.ApplicationControllerTest#testThatSetupInitializationCreatesTheTestUsers",
            "ninja.servlet.ContextImplTest#getCookieTest",
            "ninja.session.SessionCookieTest#testNoHttpsOnlyWorks",
            "ninja.i18n.MessagesImplTest#testiParameterized18n",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplGreenmailIntegrationTest#testCommonsMailer",
            "ninja.template.TemplateEngineManagerImplTest#testGetNonExistingProducesNoNPE",
            "ninja.params.ControllerMethodInvokerTest#primFloatParamShouldBeParsedToFloat",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldBeStartedWhenLifecycleServiceIsStarted",
            "ninja.utils.NinjaPropertiesImplTest#testGetOrDie",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldNotBeStartedBeforeLifecycleServiceIsStarted",
            "ninja.utils.TimeUtilTest#test",
            "ninja.utils.HttpHeaderUtilsTest#testGetCharacterSetOfContentType",
            "ninja.utils.NinjaPropertiesImplToolTest#testProdThrowsError",
            "controllers.PersonControllerTest#testPostPersonXml",
            "ninja.utils.NinjaModeHelperTest#testNinjaModeHelperWorksWithTestSet",
            "ninja.params.ControllerMethodInvokerTest#primLongParamShouldHandleNull",
            "ninja.jpa.JpaInitializerTest#testStart",
            "ninja.params.ControllerMethodInvokerTest#validationFailedLength",
            "ninja.utils.NinjaPropertiesImplTest#testUft8Works",
            "ninja.servlet.ContextImplTest#testGetRequestUri",
            "ninja.ResultTest#testRedirectTemporary",
            "ninja.utils.CookieDataCodecTest#bake_in_multiple_headers_and_values",
            "ninja.ResultsTest#testResultsInternalServerError",
            "ninja.params.ControllerMethodInvokerTest#intValidationShouldWork",
            "ninja.params.ControllerMethodInvokerTest#primDoubleParamShouldHandleNull",
            "controllers.I18nControllerTest#testThatImplicitParameterWorks",
            "ninja.ResultTest#testRenderingOfStringObjectPairsWorks",
            "ninja.session.FlashCookieTest#testThatFlashCookieWorksAndIsActiveOnlyOneTime",
            "ninja.params.ControllerMethodInvokerTest#sessionShouldBePassed",
            "ninja.servlet.ContextImplTest#testParseBodyXmlWorks",
            "controllers.RoutesTest#testRouting",
            "ninja.session.SessionCookieTest#testHttpsOnlyWorks",
            "ninja.utils.DateUtilImplTest#testFormatForHttpHeaderDate",
            "ninja.cache.CacheProviderTest#testMemcachedLoadingWorks",
            "example.ExampleIntegrationTest#testIndexRoute",
            "ninja.RouteBuilderImplTest#testRegexInRouteWorksWithoutSlashAtTheEnd",
            "ninja.ResultTest#testAndAddCookies",
            "ninja.params.ControllerMethodInvokerTest#doubleParamShouldBeParsedToDouble",
            "conf.RoutesTest#testReverseRoutingWithMapAndQueryParameter",
            "ninja.scheduler.SchedulerSupportTest#schedulableShouldNotBeScheduledBeforeStart",
            "ninja.params.ControllerMethodInvokerTest#validationFailedWithThreeFields",
            "ninja.params.ControllerMethodInvokerTest#bodyShouldBeParsedIntoLeftOverParameter",
            "ninja.utils.CookieDataCodecTest#bake_in_an_empty_map",
            "ninja.session.FlashCookieTest#testThatFlashCookieClearWorks",
            "ninja.scheduler.SchedulerSupportTest#schedulableShouldThrowExceptionWhenNoPropertyFound",
            "ninja.postoffice.common.MailImplUnitTest#testThatMailImplWorksAsExpected",
            "controllers.AssetsControllerTest#testThatStaticAssetsDoNotSetNinjaCookies",
            "ninja.servlet.ContextImplTest#testGetRequestPathWorksAsExpectedWithContext",
            "ninja.session.SessionCookieTest#testNoHttpOnlyWorks",
            "ninja.lifecycle.LifecycleSupportTest#disposablesShouldBeDisposedOf",
            "ninja.i18n.MessagesImplTest#testi18nGetAll",
            "ninja.RouteBuilderImplTest#testBasicPlaceholersAndParameters",
            "ninja.utils.NinjaPropertiesImplTest#testGetIntegerParsing",
            "ninja.params.ControllerMethodInvokerTest#primFloatParamShouldHandleNull",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplTest#testCreateValidEmailFromString",
            "ninja.template.TemplateEngineManagerImplTest#testOverrideHtml",
            "ninja.ResultTest#testUnsetCookie",
            "ninja.RouteBuilderImplTest#testBasicRoutes",
            "ninja.ResultsTest#testResultsTODO",
            "ninja.ResultsTest#testResultsRedirect",
            "ninja.CookieTest#testThatBuilderWorks",
            "ninja.servlet.ContextImplTest#testGetPathParameterAsInteger",
            "ninja.utils.ResultHandlerTest#testRenderPlainStringAndSetDefaultContentType",
            "ninja.params.ControllerMethodInvokerTest#validationShouldBeAppliedInCorrectOrderPass",
            "ninja.RouteBuilderImplTest#testParametersDontCrossSlashes",
            "controllers.ApplicationControllerTest#testThatPathParamParsingWorks",
            "ninja.params.ControllerMethodInvokerTest#tooManyBodiesShouldBeFlagged",
            "ninja.utils.HttpCacheToolkitImplTest#testAddETag",
            "ninja.template.TemplateEngineManagerImplTest#testGetCustom",
            "ninja.utils.CookieDataCodecTest#decode_values_of_the_previously_supported_format_with_the_new_delimiters_in_them",
            "ninja.params.ControllerMethodInvokerTest#customArgumentExtractorWithClassArgShouldBeInstantiated",
            "ninja.params.ControllerMethodInvokerTest#primLongParamShouldBeParsedToLong",
            "ninja.utils.CookieDataCodecTest#encode_values_such_that_no_extra_keys_can_be_created",
            "ninja.i18n.MessagesImplTest#testI18nAcceptLanguageHttpHeaderWithQualityScores",
            "ninja.params.ControllerMethodInvokerTest#floatParamShouldBeParsedToFloat",
            "controllers.ApplicationControllerTest#testCachingWorks",
            "controllers.ApiControllerMockTest#testThatPostArticleReturnsNotFoundWhenArticleDaoReturnsFalse",
            "ninja.utils.CookieDataCodecTest#bake_in_a_header_a_Unicode_value",
            "ninja.params.ControllerMethodInvokerTest#invalidValidatorShouldBeFlagged",
            "ninja.utils.ResultHandlerTest#testRenderPictureFromBytes",
            "ninja.servlet.ContextImplTest#getCookiesTest",
            "ninja.servlet.ContextImplTest#testGetRequestContentType",
            "controllers.I18nControllerTest#testThatI18nWorksDe",
            "ninja.ResultsTest#testResultsHtmlWithStatusCode",
            "ninja.ResultsTest#testResultsContentType",
            "controllers.ApplicationControllerTest#testThatHomepageWorks",
            "ninja.SecureFilterTest#testWorkingSessionWhenUsernameIsThere",
            "ninja.lifecycle.LifecycleSupportTest#singletonServiceShouldNotBeStartedTwice",
            "ninja.template.TemplateEngineJsonPTest#testMissingCallbackVariableFlow",
            "example.ExampleIntegrationTest#testThatInvalidStaticAssetsAreNotFound",
            "ninja.servlet.ContextImplTest#hasCookieTest",
            "ninja.RouteBuilderImplTest#testRouteWithUrlEncodedSlashGetsChoppedCorrectly",
            "ninja.utils.NinjaModeHelperTest#testNinjaModeHelperWorksWithNoModeSet",
            "controllers.ApplicationControllerTest#testPostFormParsingWorks",
            "ninja.params.ControllerMethodInvokerTest#validationShouldPassWhenGoodRequest",
            "ninja.utils.NinjaPropertiesImplTest#testPropertiesBoundInGuice",
            "ninja.scheduler.SchedulerSupportTest#schedulableShouldBeScheduledAfterStart",
            "ninja.postoffice.mock.PostofficeMockImplTest#testSending",
            "ninja.params.ControllerMethodInvokerTest#validationFailedRegex",
            "ninja.session.SessionCookieTest#testSessionCookieDelete",
            "ninja.params.ControllerMethodInvokerTest#validationPassed",
            "conf.RoutesTest#testReverseRoutingWithoutMap",
            "controllers.ApplicationControllerTest#testHtmlEscapingInTeamplateWorks",
            "ninja.utils.NinjaPropertiesImplTest#testGetStringArrayWorks",
            "ninja.utils.NinjaPropertiesImplTest#testExernalConfigLoadingBreaksWhenFileDoesNotExist",
            "controllers.ApplicationControllerTest#testJsonPWorks",
            "ninja.utils.CryptoTest#testSigning",
            "controllers.ApplicationControllerTest#testFlashSuccessWorks",
            "ninja.servlet.ContextImplTest#testParseBodyWithUnknownRequestContentTypeWorks",
            "ninja.ResultTest#testJson",
            "ninja.utils.NinjaPropertiesImplTest#testGetWithDefault",
            "ninja.utils.CookieDataCodecTest#decode_values_with_gibberish_in_them",
            "ninja.servlet.ContextImplTest#testParseBodyPostWorks",
            "ninja.i18n.LangImplTest#testGetLanguage",
            "ninja.AssetsControllerTest#testAssetsController304NotModified",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldNotBeStartedIfExplicitlyBoundAndNotSingleton",
            "ninja.utils.NinjaPropertiesImplTest#testGetBooleanParsing",
            "controllers.AssetsControllerTest#testThatMetaInfIntegrationWorks",
            "ninja.utils.NinjaPropertiesImplTest#testLoadingOfExternalConfFile",
            "controllers.ApplicationControllerFluentLeniumTest#testThatHomepageWorks",
            "ninja.params.ControllerMethodInvokerTest#validationShouldFailWhenBadRequest",
            "ninja.ResultsTest#testResultsXml",
            "ninja.servlet.ContextImplTest#testGetAcceptCharset",
            "ninja.params.ControllerMethodInvokerTest#multipleDifferentExtractorsShouldWorkFine",
            "ninja.CookieTest#testThatBuilderRejectsNullValues",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplTest#testDoPopulateMultipartMailWithContent",
            "ninja.params.ControllerMethodInvokerTest#longValidationShouldWork",
            "ninja.lifecycle.LifecycleSupportTest#serviceShouldBeStartedIfExplicitlyBoundAsSingleton",
            "ninja.ResultTest#testRenderSingleObject",
            "ninja.utils.NinjaPropertiesImplTest#testSkippingThroughModesWorks",
            "ninja.ResultTest#testHtml",
            "ninja.ResultsTest#testResultsNotFound",
            "ninja.session.FlashCookieTest#testThatCorrectMethodOfNinjaPropertiesIsUsedSoThatStuffBreaksWhenPropertyIsAbsent",
            "ninja.params.ControllerMethodInvokerTest#intParamShouldBeParsedToInteger",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplTest#testCreateMultiPartEmailWithContent",
            "ninja.postoffice.commonsmail.CommonsMailHelperImplTest#testDoSetServerParameter",
            "ninja.params.ControllerMethodInvokerTest#flashArgumentShouldBePassed",
            "ninja.template.TemplateEngineJsonPTest#testCorrectFlow",
            "ninja.i18n.LangImplTest#testIsLanguageDirectlySupportedByThisApplication",
            "ninja.utils.NinjaPropertiesImplToolTest#testNothingHappensWhenApplicationSecretIsThere",
            "ninja.session.SessionCookieTest#testThatCorrectMethodOfNinjaPropertiesIsUsedSoThatStuffBreaksWhenPropertyIsAbsent"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "ninja.utils.SecretGeneratorTest#testGenerateSecret",
            "controllers.ApplicationControllerTest#testCachingWorks",
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "flaky_tests": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "tests": [],
        "od_tests": [
            "controllers.ApiControllerTest#testGetAndPostArticleViaJson",
            "controllers.ApplicationControllerTest#testThatSetupInitializationCreatesTheTestUsers",
            "controllers.ApiControllerTest#testGetAndPostArticleViaXml"
        ],
        "config_only_sleep_decrease": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "config_only_random_max": [
            "ninja.utils.SecretGeneratorTest#testGenerateSecret"
        ],
        "config_only_sleep_increase": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "config_only_time_round": [],
        "config_only_random_fix": [
            "ninja.utils.SecretGeneratorTest#testGenerateSecret"
        ],
        "config_only_locale_fix": [],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "config_only_time_increment": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks",
            "controllers.ApplicationControllerTest#testCachingWorks"
        ],
        "config_only_time_relative": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "config_only_random_min": [
            "ninja.utils.SecretGeneratorTest#testGenerateSecret"
        ],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [
            "controllers.ApplicationControllerTest#testCachingWorks"
        ],
        "config_only_time_slow": [],
        "config_only_fix_date": [
            "controllers.ApplicationControllerTest#testThatHomepageWorks"
        ],
        "config_only_date_bk": []
    },
    "doanduyhai-Achilles": {
        "total_tests": [
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_object",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_exception_when_asking_partition_key_on_non_embedded_id_field",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_return_null_when_no_first",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_index_of",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_added_column_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.table.TableNameNormalizerTest#should_exception_when_even_class_name_exceeeds_48_characters",
            "info.archinnov.achilles.internal.interceptor.DefaultBeanValidationInterceptorTest#should_list_intercepted_events",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_ensure_proxy",
            "info.archinnov.achilles.type.CounterBuilderTest#should_incr",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_update_with_options",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_simple_field_for_entity",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_execute",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_field_by_batch_value_for_counter_type",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_with_consistency",
            "info.archinnov.achilles.internal.metadata.parsing.context.EntityParsingContextTest#should_determine_schema_update_status_for_table_from_map",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_add_element_to_set",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_derive_setter",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_extract_partition_and_clustering_components_for_simple_clustered_entity",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_exception_when_partition_components_not_same_size_as_previously",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_by_id",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_proxy_from_entity",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_event_interceptors_for_specific_event",
            "info.archinnov.achilles.query.typed.TypedQueryValidatorTest#should_exception_when_wrong_table",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_string_null",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_incorrect_type",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_exception_when_counter_consistency_is_any_for_write",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_table_not_found",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_not_prepare_statement_to_set_element_at_index_from_list",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_test",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_encode_null_components",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_update",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_raw_typed_query",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_initialize_list_of_entities",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_delegate_method_call_to_the_target",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_map_value_from_row",
            "info.archinnov.achilles.internal.persistence.operations.OptionsValidatorTest#should_validate_options_for_update",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_insert_strategy",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_cql3_column_name",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_null_when_bean_validation_not_configured",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_exception_when_invoking_map_getter_from_row",
            "info.archinnov.achilles.internal.statement.wrapper.SimpleStatementWrapperTest#should_get_bound_statement",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_update_fields_with_clustered_id_ps",
            "info.archinnov.achilles.schemabuilder.CompressionOptionsTest#should_create_snappy_compressions_options",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_exception_when_partition_component_count_doest_not_match",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_decrement_n_from_null_delta",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_set_non_counter_properties_to_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.builder.MapWrapperBuilderTest#should_build",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_select_classloader_from_current",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_increment_simple_counter",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_fail_if_not_same_column_name",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_when_not_exists",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_remove_entry_from_map_with_cas_condition",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_bind_for_removal",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_fqcn_column_bad_type",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_false_for_is_embedded_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_list_property",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_get_partition_component_names_and_classes",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_eager_load_entity",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_create_table_for_counter",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_force_decode_to_json_string_type",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_exception_when_not_clustered_counter",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_default_one_level_when_no_parameter",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_renamed_column_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_exception_when_persisting_null_clustered_counters",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_infer_entity_class_from_interceptor",
            "info.archinnov.achilles.persistence.BatchTest#should_init_persistence_context_with_primary_key",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_primary_key",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_clustered_counter_queries",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_primitive",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_bounding_mode",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_set_value_to_clustered_counter_entity",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_persist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getLast",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_remove_all_when_no_match",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_force_update",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_exception_when_invoking_set_getter_from_row",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_insert",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_managed_entity_after_persist",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_persist_with_options",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_validate_enum_as_index",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove_with_default_params",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_component_names",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_timestamp",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_fail_if_serial_consistency_level_not_found_alone",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_overwrite_existing_values_on_persist",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_recover_from_exception_and_reinit_consistency_level",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_added_entries_with_bind_marker",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entity_for_typed_query_with_bound_values",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_embedded_id",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_force_decode_from_json_to_type",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_clustering_and_simple_column",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_keys",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_remove_from_keySet_iterator",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_not_have_annotation",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_from_packages_and_entities_list",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_list_value_with_bind_marker",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_encode_value",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_get_value_from_initial_value",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_return_null_when_no_value",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_set_value_from_row",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_when_unsupported_type_for_decoding_is_not_string",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_find",
            "info.archinnov.achilles.internal.context.PersistenceContextFactoryTest#should_create_new_context_for_slice_query",
            "info.archinnov.achilles.internal.metadata.transcoding.SimpleTranscoderTest#should_encode",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_ttl",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_not_set_value_when_null_field",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_write_level_from_entity_meta",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_creating_table_with_static_columns_and_compact_storage",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_list_with_default_empty_when_null",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_batch_level_by_runtime_value_for_slice_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_find",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaBuilderTest#should_build_meta_with_column_family_name",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_not_get_inherited_field_by_annotation_and_name_when_no_match",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_fixed_components_when_start_more_than_end",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_with_time_uuid",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_true_for_contains_all",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_return_null_when_no_clustered_counter_value",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_simple_counter_delete",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_build_counter_with_null_initial_value",
            "info.archinnov.achilles.test.integration.tests.EntityLessIT#should_bootstrap_achilles_without_entity_package_for_native_query",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_retain_all_when_all_match",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_exception_when_adding_at_index",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_skipping_null_entity",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_and_return_simple_property",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_exception_when_components_are_not_equal_case1",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_all_fields",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_list_at_index_with_cas_condition",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_read_level_from_context_rather_than_entity_meta",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_load_counter_properties_into_object",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_field_by_getter",
            "info.archinnov.achilles.persistence.BatchTest#should_start_batch",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_setting_id",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_false_for_is_clustered_counter_if_value_less",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getLast",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_set",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_compare_simple_type",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_persist",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_abstract_class",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_set",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_remove_entity_having_counter",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_index_type_not_allowed",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_null_collection",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_write_consistency_level_map",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_set_field_for_entity",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_fail_if_found_serial_but_not_normal_consistency_levels",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_missing_parameter_for_map",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_return_null_if_no_ordering_component",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_simple_counter_increment_decrement",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_decode",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_component_classes",
            "info.archinnov.achilles.schemabuilder.CompressionOptionsTest#should_create_deflate_compressions_options",
            "info.archinnov.achilles.internal.context.PersistenceContextFactoryTest#should_create_new_context_for_entity_with_consistency_and_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_duplicate",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_default_write_consistency_level",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_decrement_n",
            "info.archinnov.achilles.internal.statement.wrapper.BoundStatementWrapperTest#should_get_bound_statement",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_not_override_runtime_value_if_no_batch",
            "info.archinnov.achilles.query.cql.NativeQueryTest#should_execute_upserts",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_element",
            "info.archinnov.achilles.internal.proxy.ProxyClassFactoryTest#should_reuse_created_proxy_class_from_cache",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_return_last_non_null_index_when_some_components_are_null",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_encoded_list_change_at_index",
            "info.archinnov.achilles.internal.metadata.parsing.validator.EntityParsingValidatorTest#should_exception_when_no_id_meta",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_return_entity_meta_entry_set",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_derive_getter",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_when_clear_on_empty_map",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_set_value_to_field",
            "info.archinnov.achilles.internal.metadata.util.AlreadyLoadedTransformerTest#should_transform",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_remove",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_counters",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_remove_at_index",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_add_entries_to_map",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_validate_counter_table",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_contain_value",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_increment_n_with_initial_value",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_all_when_no_match",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_set_of_entities",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_map_row_to_entity_with_primary_key",
            "info.archinnov.achilles.internal.persistence.operations.SliceQueryExecutorTest#should_get_clustered_entities",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_cas_error_on_native_query",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_lazy_properties",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_first_n_with_clustering_components",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_remove_non_existing_from_entrySet",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_exception_when_no_setter",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_bind_clustered_counter_delete_with_runtime_consistency",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove",
            "info.archinnov.achilles.type.CounterBuilderTest#should_decr",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_get_cache_for_clustered_id",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_return_empty_list_when_no_row",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.persistence.BatchTest#should_clean_batch",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_exception_when_null_bounding",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_counter_table",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_clustering_and_static_column",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_empty_condition_exception_for_indexed_query",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key_and_clustering_keys",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_force_encode_to_json_string_type",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_increment_n",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_counter_field",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_not_load_simple_entity_when_not_found",
            "info.archinnov.achilles.internal.persistence.operations.CounterLoaderTest#should_load_counter",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_key",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_clear",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_empty_list_when_no_component_setters",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_allMetasExceptCounters_for_columnsMetaToLoad",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_ignore_null_varargs_for_bounded_values",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_build_null_proxy",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_on_cas_update_failure",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_return_last_non_null_index_when_all_components_not_null",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_return_long_as_compatible_java_type",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_and_notify_cas_listener_on_success",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_same_number_of_components_ascending",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_null_for_cql_ordering_component_if_no_multikey",
            "info.archinnov.achilles.query.cql.NativeQueryTest#should_return_null_when_no_row",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_null_if_no_counter_id_meta",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_return_null_when_no_simple_counter_value",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_read_level_from_context_rather_than_property_meta",
            "info.archinnov.achilles.type.OptionsTest#should_duplicate_with_new_timestamp",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_partition_key",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column_with_insert_and_update",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_allowed_type_property",
            "info.archinnov.achilles.internal.persistence.operations.OptionsValidatorTest#should_exception_when_updating_with_timestamp_and_cas_condition",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_create_leveled_compaction_option",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_remove_related_counters",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_map",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_prepare_statement",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_refresh",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_insert_ps_with_clustered_id_and_options",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_merge_with_consistency",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_infer_column_family_from_default_name_when_empty_annotation_name",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_get_clustered_counter",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_get_null_clustered_counter_column_when_not_found",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_refresh",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_remove_from_keySet",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_clear",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_exception_when_infering_value_type_from_raw_list",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_true_when_value_less",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_by_id_with_consistency",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_get_interceptor_from_proxy",
            "info.archinnov.achilles.internal.statement.wrapper.BoundStatementWrapperTest#should_execute",
            "info.archinnov.achilles.type.CounterBuilderTest#should_decr_n",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_not_get_inherited_field_by_annotation_when_no_match",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_return_IMMEDIATE_type",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_proxy_for_set_of_entities",
            "info.archinnov.achilles.type.TypedMapTest#should_get_typed_when_present",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_cql_functions_for_native_query",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_consistency_level_from_map_overriding_default",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_return_null_when_not_found",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_simple_property_and_override_name",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_fixed_components_when_start_same_as_end",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_exception_when_adding_all_at_index",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_entity_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_null_map",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_max_prepared_statements_cache_size",
            "info.archinnov.achilles.internal.persistence.operations.OptionsValidatorTest#should_exception_when_inserting_with_timestamp_and_cas_condition",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_entity_class",
            "info.archinnov.achilles.internal.context.DaoContextFactoryTest#should_get_clustered_counter_ps_transformer",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_first",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_exception_when_no_keyspace_name_param",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_instanciate_entity_from_class",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_select_field_ps",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_append_elements_to_list",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_unsopported_type_to_json",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_first_with_clustering_components",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_indices_scripts_with_custom_name",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_class",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_initialize",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_get_proxy",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_fail_if_not_same_list_parameter_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_decode",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_default_cql_consistency_level",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_exception_when_components_are_not_equal_case2",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_if_not_exists",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_removed_key",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_push_update",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_clustering_component_classes",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_list_field_for_entity",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_find",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_initialize_entity",
            "info.archinnov.achilles.internal.persistence.operations.EntityPersisterTest#should_persist",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_last_with_clustering_components",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_same_number_of_components_descending",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_add_elements_to_map_with_timestamp",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_ensure_not_proxy",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_decode_value",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_blank",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_null_when_bean_validation_disabled",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_get_clustered_counter_column",
            "info.archinnov.achilles.type.TypedMapTest#should_not_get_typed_when_absent",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_primitive_property",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_return_empty_list_when_no_column",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_select_star",
            "info.archinnov.achilles.test.integration.tests.CacheSizeIT#should_re_prepare_statements_when_cache_size_exceeded",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_map",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_trying_to_modify_primary_key",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_get_indexed_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_over_clusterings_components",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_mark_dirty_on_put_all",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_default_force_update_to_false",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_persisting_with_two_consistency",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_empty_map",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_partition_key",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_and_ttl_because_already_exist",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_enum_type",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_reinit_consistency_level_after_exception",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_all",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_update",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_exception_when_empty_list_of_partition_component_provided",
            "info.archinnov.achilles.internal.persistence.operations.CounterLoaderTest#should_not_load_clustered_counters_when_not_found",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_empty_clustering_component_classes",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_value_column_bad_type",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_encode",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_getter_from_boolean_as_getOld",
            "info.archinnov.achilles.internal.persistence.operations.CounterLoaderTest#should_load_clustered_counters",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_generate_insert_prepared_statement_when_not_found_in_cache",
            "info.archinnov.achilles.test.integration.tests.CQLEmbeddedServerIT#should_return_same_factory_for_same_keyspace",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_set",
            "info.archinnov.achilles.internal.reflection.FieldAccessorTest#should_set_field_when_no_setter_available",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_retain_all",
            "info.archinnov.achilles.internal.context.DaoContextFactoryTest#should_get_select_eager_ps_transformer",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_check_consistencies_in_order",
            "info.archinnov.achilles.iterator.SliceQueryIteratorTest#should_exception_when_calling_remove",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_ordering_component",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_byte_array_type",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_validate_consistency_level_for_counter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_clustering_order",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_set_value_to_field",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_entities_list",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_init_and_remove_proxy_for_set_of_entities",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_first_n_with_clustering_components",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_insert_strategy",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_object_byte_type",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_partition_key_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_set_field",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value_to_null",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_last_components_when_end_more_than_start",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_invoke_on_row_for_type",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_typed_query",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_milli_secs",
            "info.archinnov.achilles.type.CounterBuilderTest#should_be_able_to_serialize_and_deserialize_null_counter",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_iterator_remove",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_ordering",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_succeed_if_more_found_consistencies_than_expected",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_iterate_by_slice_query",
            "info.archinnov.achilles.internal.reflection.FieldAccessorTest#should_get_field_when_no_getter_available",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_mapping_on_field_for_counter_type",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_scheme_update_enabled",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_empty_entity_packages",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_map_rows_with_set",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table_with_clustering_order",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_build_dao_context",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_get_inherited_field_by_annotation",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getFirst",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_write_level_from_context_rather_than_entity_meta",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_has_inconsistent_compound_partition_key",
            "info.archinnov.achilles.integration.spring.PersistenceManagerFactoryBeanTest#should_build_with_minimum_parameters",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_execute_query",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_fail_if_serial_consistency_level_not_found_but_normal_consistencies_found",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_exception_when_incorrect_type_of_partition_component_provided",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_read_repair_chance_negative",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_decrement_with_initial_value",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_validate_not_clustered_counter",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_persist",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_return_raw_typed_query_builder",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_prepend_elements_to_list",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_with_only_pk_in_where_clause",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_enum",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_static_column_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_bind_simple_counter_delete",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_decrement_n_with_initial_value",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_initialize_set",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_collection_and_map_update",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_encode_to_null_components",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_heap_byte_buffer",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_encode",
            "info.archinnov.achilles.schemabuilder.DropTest#should_fail_if_table_name_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_set_null_to_entity_when_no_value_from_row",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorBuilderTest#should_build_interceptor_with_no_eager_fields",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_exception_when_too_many_start_components",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.internal.context.DaoFacadeTest#should_push_counter_statement_wrapper",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_map_field_for_entity",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_default_empty_list_as_value",
            "info.archinnov.achilles.type.CounterBuilderTest#should_incr_n",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_key",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_element_add",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_get_ordering_component",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_get_insert_strategy_on_entity",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_simple_id",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_set_property",
            "info.archinnov.achilles.internal.statement.wrapper.SimpleStatementWrapperTest#should_execute",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_exception_when_too_many_values_for_clustering_components",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_get_proxy",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_remove_all_collection_and_map_with_options",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_encode_to_components",
            "info.archinnov.achilles.internal.persistence.operations.OptionsValidatorTest#should_validate_options_for_insert",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_extract_partition_and_clustering_components_for_non_cluster_compound_partition_key",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_prepend_element_to_list",
            "info.archinnov.achilles.type.OptionsTest#should_duplicate_without_ttl_and_timestamp",
            "info.archinnov.achilles.internal.context.DaoContextFactoryTest#should_get_remove_ps_transformer",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_map_with_object_as_key",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_modifications",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_set",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_compound_key",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_empty_event_interceptor_list_when_empty_list_parameter",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_clustered_counter",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_update_fields_ps",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_update_modifications",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_id_and_column_annotation_on_same_field",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_persist_counter",
            "info.archinnov.achilles.type.TypedMapTest#should_return_null_when_null_value",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_components_name",
            "info.archinnov.achilles.internal.proxy.wrapper.builder.SetWrapperBuilderTest#should_build",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_first",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_get_type",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_indexed_simple_field",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_find_with_consistency",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_return_native_query_builder",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_session",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_when_no_match",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_consistency_level",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_simple_with_object_as_value",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_counter_fields",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_null_field",
            "info.archinnov.achilles.schemabuilder.DropTest#should_drop_table",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_runtime_value_on_batch_mode_for_normal_type",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_more_components_for_start_descending",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_remove_list_element",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_get_string_value_from_row",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_index_not_allowed_on_primary_key",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_encode_bound_values_for_enum_type",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_no_pulic_default_constructor",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_fail_if_not_same_column_type",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_remove_element_at_index_to_list",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_collection_of_entities",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_add_all",
            "info.archinnov.achilles.internal.persistence.operations.EntityRefresherTest#should_refresh",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_contain_key",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_pk_column_not_matching",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_true_on_is_empty",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_false_for_is_component_time_uuid_if_not_embedded_id",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_get_real_object_from_proxy",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_update",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_get_reversed_component",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_appended_elements",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_return_null_when_force_encode_null",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_entry",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_remove_list_element_with_bind_marker",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_limit",
            "info.archinnov.achilles.junit.AchillesTestResourceTest#should_trigger_only_before_when_steps_is_before",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_of_list_iterator_at_index",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_map_value_with_bind_marker",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_persist_interceptors",
            "info.archinnov.achilles.internal.helper.LoggerHelperTest#should_transform_field_list_to_field_name_list",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_map",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_default_object_factory_mapper",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_convert_java_to_CQL_type",
            "info.archinnov.achilles.internal.consistency.ConsistencyConverterTest#should_get_CQL_level_from_achilles_level",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_remove_entity_having_single_key",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_empty_clustering_component_names",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_map_row_to_entity",
            "info.archinnov.achilles.internal.context.DaoContextFactoryTest#should_build_dao_context_without_counter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_empty_list_when_no_component_getters",
            "info.archinnov.achilles.type.OptionsTest#should_duplicate_with_new_consistency_level",
            "info.archinnov.achilles.persistence.BatchTest#should_init_persistence_context_with_entity",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_component_setters",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_insert",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_force_update_map",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_exception_trying_to_encode_non_supported_type_for_typed_query",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_validate_achilles_counter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_map_value_from_field",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_partition_and_clustering_column",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_achilles_counter_table",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add_at_index",
            "info.archinnov.achilles.internal.metadata.holder.PropertyTypeTest#should_test_is_counter",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.schemabuilder.CreateIndexTest#should_create_index",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_empty_consistency_map_when_no_parameter",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_no_counter_value_column",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_none",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_remove_interceptors",
            "info.archinnov.achilles.internal.metadata.holder.PropertyTypeTest#should_test_is_id",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_find_entities_for_indexed_enum_query",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_get_native_session_from_parameter",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_object_mapper_factory_from_mapper",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_removed_key_with_bind_marker",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_map_value",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_remove",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_partition_components",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_interface",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_several_entities",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_set_wrapper",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array_with_argument",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_bounded_values",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_remove_element_at_index_to_list_update",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_keyspace_name_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_empty_target",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_simple_property",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_simple_property",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_clustered_counter_delete",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_key_when_invoking_id_getter",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_rename_column",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table",
            "info.archinnov.achilles.embedded.CassandraEmbeddedServerBuilderTest#should_bootstrap_only_one_instance_per_keyspace",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_list",
            "info.archinnov.achilles.internal.persistence.operations.SliceQueryExecutorTest#should_remove_clustered_entities",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_last_components_when_start_same_as_end",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_get_cache_for_entity_insert",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_allMetasExceptIdAndCounters_for_columnsMetaToInsert",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_not_encode_null_varargs",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_get_native_session",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_select_star",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_set",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_entryset_containing_proxy",
            "info.archinnov.achilles.type.TypedMapTest#should_build_typed_map_from_source",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_append_element_to_list",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_validate_index",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_raw_entity",
            "info.archinnov.achilles.test.integration.tests.CQLEmbeddedServerIT#should_return_same_manager_for_same_keyspace",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_clustering_order_column_does_not_match_declared_clustering_keys",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_byte_array_type",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_throw_exception_if_tombstone_threshold_out_of_range",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_determine_assignabled_from_native_types",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_instanciate_embedded_id_with_partition_key_using_default_constructor",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_compact_storage",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_has_no_annotation",
            "info.archinnov.achilles.internal.utils.UUIDGenTest#should_generate_distinct_microseconds",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_return_null_when_loading_property",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_list_of_entities",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove_all",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_ttl",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_refresh_with_consistency",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_create_sized_tiered_compaction_options",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_mark_dirty_on_put",
            "info.archinnov.achilles.internal.context.StateHolderFacadeTest#should_get_state",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_validate_clustering_components",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_create_resources_once",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value_to_null",
            "info.archinnov.achilles.internal.context.PersistenceContextFactoryTest#should_create_new_context_for_entity",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_clustered_entity_for_typed_query_with_select_star",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_retrieve_not_null_properties_meta_for_insert",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_config_context",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_not_null_field_overriding_global_config",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_only_fields_that_are_not_null",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_exception_when_null_ordering",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_incorrect_size_map",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_execute_immediate_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_default_params",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_compound_id",
            "info.archinnov.achilles.test.integration.tests.SerializationIT#should_serialized_proxified_entity_with_Jackson",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_set_value_from_field",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_first_n",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_validate_clustered_id",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_list_value_from_row",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_set",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_decrement_simple_counter",
            "info.archinnov.achilles.internal.metadata.transcoding.SetTranscoderTest#should_decode",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_retain_all_when_all_match",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaBuilderTest#should_build_meta",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_simple_field",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update_with_ttl",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_exception_when_component_not_comparable_for_clustering_component",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update_for_cluster_counter",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_remove_non_existing",
            "info.archinnov.achilles.internal.helper.LoggerHelperTest#should_transform_class_list_to_canonical_class_name_list",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_remove_element_from_set",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_null_field_by_getter",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_prepended_elements",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_forceCFCreation",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_wide_row",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_refresh",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_value_from_field",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_value_from_field_by_getter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_default_empty_set_as_value",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_empty_list_value_from_row",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_initialize_set_of_entities",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_get_clustered_counter",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_map_not_parameterized",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_appended_element_with_bind_marker",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_slice_query",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_map",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_remove_all",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_be_empty_and_get_size",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_push_for_collection_and_map_update",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_list_iterator_add",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_added_elements",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_do_nothing_when_flush_is_called",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_exception_when_components_not_in_correct_order_for_ascending",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_copy_of_list_iterator",
            "info.archinnov.achilles.internal.interceptor.DefaultBeanValidationInterceptorTest#should_raise_exception_when_bean_validation_error_for_property",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_extract_partition_and_clustering_components_for_compound_partition_clustered_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_element_prepend",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_map_rows",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_match_embedded_id",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_persist_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_exception_when_varying_components_for_remove",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_read_consistency_level_map",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_target",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_trace_query",
            "info.archinnov.achilles.internal.metadata.parsing.context.PropertyParsingContextTest#should_set_primaryKey_to_true_when_embedded_id",
            "info.archinnov.achilles.query.slice.SliceQueryTest#should_return_true_when_no_component",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_pk_column_bad_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_custom_params",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_first_n",
            "info.archinnov.achilles.persistence.BatchTest#should_end_batch",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_load_property",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_get_element_at_index",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_clustering_key_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_exception_when_setter_returning_wrong_type",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_getter_from_boolean_as_isOld",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_add_event_interceptors_to_entity_metas",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_raw_list_changes",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_duplicate_without_ttl",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_setting_value_to_field",
            "info.archinnov.achilles.type.TypedMapTest#should_get_typed_or_default",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_primary_key",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_has_counter",
            "info.archinnov.achilles.type.OptionsBuilderTest#should_create_options_with_all_parameters",
            "info.archinnov.achilles.schemabuilder.CompressionOptionsTest#should_build_compressions_options_for_lz4",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_execute_batch",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorBuilderTest#should_build_interceptor_with_eager_fields_already_loaded",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_meta",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_bounding",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_table_options",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_find_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_set_on_iterator_remove",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_check_consistency_annotation",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_clustered_entity_for_raw_query_with_simple_select",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_partition_key_field",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_all_property_metas_for_columnsMetaToLoad",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_push_clustered_counter_increment",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_list",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query_with_bound_values",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_consistency_level_from_map_overriding_entity",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_get_inherited_fields",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_refresh",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_end_batch_with_logged_batch",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_encode_index_condition_value",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_last_components_when_start_more_than_end",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_find_by_slice_query",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_consistency_level",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptors",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_persist",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_exception_when_incorrect_getter",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_determine_allowed_native_types",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_element_add",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_notify_listener_on_cas_error",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_default_read_consistency_level",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_primary_key",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_when_error_on_force_decode_from_json",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_list",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_find_index",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_with_ttl",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_managed_entity",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_type_not_allowed",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_remove_all_with_bind_marker",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_more_components_for_end_descending",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_serialize_to_json",
            "info.archinnov.achilles.internal.context.PersistenceContextTest#should_duplicate_for_new_entity",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_push_insert",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_load_property",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_update_interceptors",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_push_interceptor_to_list",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_exception_when_preparing_select_for_counter_type",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_simple_property_of_time_uuid_type",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_forceCFCreation_to_default_value",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_object_mapper_factory",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_retain_all",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_duplicate_property_meta",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_instantiate_class_without_public_constructor",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_remove_from_entrySet",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_decrement_from_null_delta",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_read_level_from_property_meta",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_return_slice_query_builder",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_flush",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_serialize_as_json",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_exception_when_proxy",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_normal_select",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_refresh_with_consistency",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_override_consistency_by_map",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_setting_null_to_primitive_type",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_detect_constrained_class",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_map_wrapper",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_when_error_on_force_encode_to_json",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_n",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_removed_element_with_bind_marker",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value",
            "info.archinnov.achilles.query.slice.SliceQueryTest#should_build_new_slice_query",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_not_matching_counter_fqcn_column",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_add_column",
            "info.archinnov.achilles.internal.table.TableNameNormalizerTest#should_normalize_canonical_classname",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_event_interceptor_list",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_encode_components",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_last_n_with_clustering_components",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_simple_value_from_row",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value",
            "info.archinnov.achilles.internal.proxy.wrapper.builder.ListWrapperBuilderTest#should_build",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_fetch_table_metas",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_proxy_true",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_clustering_component_names",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_with_compound_partition_key",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_simple_indexed_field_for_entity",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_remove",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_empty_consistency_map_when_empty_map_parameter",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_with_custom_consistency_level",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_clustered_counter_increment_decrement",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_simple_and_static_column",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_write_level_from_property_meta",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_validate_simple_id",
            "info.archinnov.achilles.iterator.SliceQueryIteratorTest#should_return_false_for_has_next_when_no_more_data",
            "info.archinnov.achilles.query.typed.TypedQueryValidatorTest#should_exception_when_missing_id_column",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_to_list_of_components",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_validate",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_retain_all",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_table_name_is_a_reserved_keyword",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_exception_when_components_not_in_correct_order_for_descending",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_true_for_is_component_time_uuid",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_return_null_when_no_column_found",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_remove_all_from_collection_and_map",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_not_update_if_schema_update_disabled",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_build_proxy_with_all_fields_loaded",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_no_counter_fqcn_column",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_iterator_remove",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_last_n",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_list_field",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_last",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_to_string",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_achilles_ordering",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_return_typed_query_builder",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_to_string",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_counter_value",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_no_clustering_order_provided",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_remove_entity_having_clustered_key",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_creating_table_without_partition_key",
            "info.archinnov.achilles.test.integration.tests.CQLEmbeddedServerIT#should_exception_when_embedded_already_started_with_another_thrift_port",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_enum_property",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_simple_counter_field",
            "info.archinnov.achilles.internal.persistence.operations.EntityValidatorTest#should_exception_when_no_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_reverse_ordering",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_simple_value",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_decode_from_components_with_injection_by_setters",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_last_n_with_clustering_components",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_new_renamed_column_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_getReference_with_consistency",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_ttl_and_timestamp_for_native_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_element_add",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_iterator_with_batch_size_and_components",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_validate_partition_components",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_last_components_when_same_size",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_get_simple_counter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_null_if_no_fqcn",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_get_null_value_from_delta_value_only",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_get_bound_statement",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_set_counter_on_managed_entity",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_key_with_inheritance",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_exception_when_entity_has_duplicated_column_name",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_more_components_for_start_ascending",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_duplicate_with_no_data_vut_consistency_and_serial_consistency",
            "info.archinnov.achilles.query.slice.SliceQueryBuilderTest#should_set_partition_key_and_create_builder",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_mark_dirty_when_clear_on_full_map",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_select_classloader_from_osgi",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_remove_counter",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_increment_n_from_null_delta",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_list_field",
            "info.archinnov.achilles.internal.proxy.ProxyClassFactoryTest#should_create_proxy_class",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_empty_set_value_from_row",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_exception_when_invoking_getter_from_row",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_update_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resources_once",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_not_matching_pattern",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_select_classloader_from_entity",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_exception_when_not_proxy",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_supported_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_get_reference",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_inherited_bean",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.internal.statement.cache.StatementCacheKeyTest#should_be_equals",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_return_null_for_partition_key_if_not_embedded_id",
            "info.archinnov.achilles.query.typed.TypedQueryValidatorTest#should_skip_id_column_validation_when_select_star",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_get_provided_custom_validator",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_remove_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resource_with_a_distinct_keyspace",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_apply_right_interceptor_on_right_event",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_force_decode_from_json_simple_value",
            "info.archinnov.achilles.internal.metadata.parsing.validator.PropertyParsingValidatorTest#should_exception_when_index_not_allowed_on_embedded_id",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist_empty_entity",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_remove_element_at_index",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_index",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_use_equals_and_hashcode",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_throw_exception_if_cold_read_ration_negative",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_not_override_batch_mode_level_by_runtime_value_for_normal_type",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_remove",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_has_only_one_component",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_fqcn",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_encode_bound_values_for_native_type",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_match",
            "info.archinnov.achilles.internal.persistence.operations.EntityUpdaterTest#should_update_proxified_clustered_counter_entity",
            "info.archinnov.achilles.integration.spring.PersistenceManagerFactoryBeanTest#should_build_with_all_parameters",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_map_rows_with_list",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_decode_key",
            "info.archinnov.achilles.persistence.PersistenceManagerFactoryTest#should_bootstrap_persistence_manager_factory",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_proxy_for_list_of_entities",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_percentile",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_do_nothing_when_null_row",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_update",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_primary_key",
            "info.archinnov.achilles.internal.consistency.ConsistencyConverterTest#should_exception_when_no_CQL_level",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_proxy_false",
            "info.archinnov.achilles.internal.interceptor.DefaultBeanValidationInterceptorTest#should_validate_entity",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_set_element_at_index_to_list_with_cas_conditions",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_get_cache_for_simple_field",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_get_mapper_for_type",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_has_duplicate_order",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_property",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_component_getters",
            "info.archinnov.achilles.schemabuilder.DropTest#should_drop_table_with_keyspace_if_exists",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_null_and_not_wrapper_for_null_values",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_retain_all",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_accessors_from_counter_type",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_altered_column_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.persistence.operations.SliceQueryExecutorTest#should_create_iterator_for_clustered_entities",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_indices_scripts",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_clear",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_test",
            "info.archinnov.achilles.internal.metadata.holder.CounterPropertiesTest#should_to_string",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_collection_remove",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_iterator_with_components",
            "info.archinnov.achilles.internal.metadata.transcoding.SetTranscoderTest#should_encode",
            "info.archinnov.achilles.internal.metadata.transcoding.CompoundTranscoderTest#should_not_encode_to_null_components",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_limit",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_list",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_clustered_counter_select",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_update_modifications",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_exception_when_null_value_between_clustering_components",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_match_annotation",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_exception_when_null_consistency_level",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_map_size_does_not_match",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_return_true_when_type_supported",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_refresh",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_list_wrapper",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_value_from_field",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_accessors",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_add_all",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_iterator_remove",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_not_encode_null_value",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_exception_when_asking_primary_key_on_non_id_field",
            "info.archinnov.achilles.query.slice.SliceQueryBuilderTest#should_set_from_embedded_id_and_create_builder",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_assign_value_to_map",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_true_for_isCounter_when_type_is_counter",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_exception_when_no_clustering_component_provided",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_find_with_consistency",
            "info.archinnov.achilles.internal.context.PersistenceContextFactoryTest#should_create_new_context_with_primary_key",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_preprend_all",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_return_same_entity_when_calling_unproxy_on_non_proxified_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_empty_add_all",
            "info.archinnov.achilles.internal.context.DaoContextFactoryTest#should_build_dao_context_with_counter",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_simple",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_map_with_parameterized_value",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_return_String_as_compatible_java_type",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_empty_component_names",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_table_name_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_remove_key",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_not_persist_counters_if_null_counter",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_refresh_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_fail_bootstrapping_if_schema_update_forbidden_for_entity",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_update",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_start_batch",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_default_params",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_exception_when_no_getter",
            "info.archinnov.achilles.schemabuilder.DropTest#should_fail_if_keyspace_name_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_after_exception",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_set_element_at_index",
            "info.archinnov.achilles.junit.AchillesTestResourceTest#should_trigger_only_after_when_steps_is_after",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_remove_with_consistency",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_varying_component_name",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value_to_null",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_remove_all",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_table_name",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_list_value_from_field",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_throw_exception_if_cold_read_ration_out_of_range",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_and_consistency_after_exception",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_encoded_map_changes",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_osgi_classloader",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear_then_append",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_create_tables",
            "info.archinnov.achilles.query.typed.TypedQueryValidatorTest#should_exception_when_missing_component_column_for_embedded_id",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_fail_if_more_expected_consistencies_than_found",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_update_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_bind_for_simple_counter_removal",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_remove_entry_from_map",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_validate_for_entity",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_managed__entity_after_setting_value",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_read_consistency",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_trigger_interceptor_immediately_for_POST_LOAD_event",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_select_eager_ps_with_clustered_key",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_compare_set_type",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_not_implements_comparable",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_static_column",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_counter_property_with_consistency_level",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_assign_value_to_set",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.internal.persistence.operations.EntityRefresherTest#should_throw_exception_when_object_staled",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_map_property",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_list_value",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_from_components",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_not_prepare_statement_to_remove_element_at_index_from_list",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_empty_collection",
            "info.archinnov.achilles.internal.metadata.util.PropertyTypeFilterTest#should_filter_by_types",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_no_counter_pk_column",
            "info.archinnov.achilles.internal.metadata.holder.PropertyTypeTest#should_test_is_embedded_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_remove_element_from_list",
            "info.archinnov.achilles.junit.AchillesTestResourceTest#should_trigger_before_and_after_when_steps_is_both",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause_when_more_components_for_end_ascending",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_init_and_remove_proxy_for_list_of_entities",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_force_encode_to_json",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_retain_all",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_remove_by_slice_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_clear_when_empty",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_empty_add_all",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaBuilderTest#should_build_meta_with_consistency_levels",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_clear_when_empty",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_for_entity",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_bind_for_removal",
            "info.archinnov.achilles.internal.metadata.transcoding.SimpleTranscoderTest#should_decode",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_true_for_contains",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_drop_column",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_derive_base_class_from_transient",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_skip_validation_when_null_clustering_value",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_derive_base_class",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_init_and_remove_proxy_for_entity",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_staled_object_during_refresh",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_find_serial_consistency_level_only",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_sub_list_add",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_at_index",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_counter_id_meta",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_unsopported_type_to_json",
            "info.archinnov.achilles.query.slice.SliceQueryValidatorTest#should_return_last_non_null_index_when_hole_in_component",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_default_params",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_null_list_change_at_index",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_ordering_asc",
            "info.archinnov.achilles.internal.metadata.transcoding.ListTranscoderTest#should_decode",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_exception_when_calling_end_batch",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_property_column_bad_type",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_fail_when_consistency_not_in_order",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_accessors_from_collection_types",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_cql_consistency_level",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_find",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_bind_for_simple_counter_increment",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_return_default_validator",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_n",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_fail_if_not_same_table_name",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_get_default_empty_map_as_value",
            "info.archinnov.achilles.schemabuilder.CompactionOptionsTest#should_throw_exception_if_tombstone_threshold_negative",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_size",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_interceptors_before_flush_for_batch",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_get_string_value_from_row_for_object_type",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_increment",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_bind_simple_counter_increment",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_not_mark_dirty_on_set_value_from_entry",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_iterator",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_true_when_has_embedded_id",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_encoded_set_changes",
            "info.archinnov.achilles.internal.persistence.operations.EntityInitializerTest#should_initialize_and_set_counter_value_for_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_clustered_exception_for_indexed_query",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_slice_delete_query",
            "info.archinnov.achilles.internal.persistence.operations.NativeQueryMapperTest#should_map_rows_with_map",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_sub_list_remove",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaBuilderTest#should_build_map",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_write_level_from_context_rather_than_property_meta",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_bind_clustered_counter_delete",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_infer_value_class_from_list",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_set_value_with_bind_marker",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_achilles_counter",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_not_map_row_to_entity_with_primary_key_when_entity_null",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_override_runtime_value_by_batch_setting",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_counter_property",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_derive_getter_for_boolean_primitive",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_when_null",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_determine_allowed_types_null_safe",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_simple_counter_queries",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_enum_type",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_set_element_at_index_to_list",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_get_cache_for_fields_update",
            "info.archinnov.achilles.persistence.PersistenceManagerFactoryTest#should_deserialize_from_json",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_pre_remove_interceptors",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_list_set_at_index_update",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_refreshing_non_managed_entity",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_fail_if_drop_column_is_a_reserved_keyword",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_remove_elements_from_set",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_compare_map_type",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_match_annotation_and_name",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_refresh",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_get_all_metas",
            "info.archinnov.achilles.type.OptionsBuilderTest#should_create_no_options",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_as_compound_partition_key",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_merge_modifications",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_property_after_merge",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_update",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_valueset_retain_all",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_assign_value_to_list",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_count_for_native_query",
            "info.archinnov.achilles.persistence.PersistenceManagerFactoryTest#should_serialize_to_json",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_match_pattern",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find_unmapped_field",
            "info.archinnov.achilles.internal.context.DaoFacadeTest#should_execute_immediate",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_force_encode_to_json_object_type",
            "info.archinnov.achilles.test.integration.tests.SupportedTypesIT#should_persist_and_find_all_types",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_partition_and_simple_column",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_get_null_clustered_counter_column",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_same_partition_and_static_column",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_keyspace",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_eager_load_entity",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_partition_key",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_update_modifications",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_false_for_is_clustered_counter_if_not_counter_type",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_create_table_for_entity",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_return_entities_for_indexed_query",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_with_reversed_key",
            "info.archinnov.achilles.internal.metadata.util.PropertyTypeExcludeTest#should_exclude_by_types",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_exception_when_embedded_id_wrong_key_order",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_get_session",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_consistency_level_from_class",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_get_collection_and_map_operation_from_cache",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_list_remove_at_index_update",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_field",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_not_mark_dirty_on_remove_when_no_match",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getFirst",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_exception_when_entity_has_no_id",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_find_counter",
            "info.archinnov.achilles.internal.metadata.parsing.context.EntityParsingContextTest#should_determine_schema_update_status_for_table_from_default",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_refreshed_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_object",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_push_statement",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_exception_when_counter_consistency_is_any_for_read",
            "info.archinnov.achilles.internal.persistence.operations.EntityPersisterTest#should_remove_clustered_counter",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_force_decode_from_json_object_type",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_generate_select_prepared_statement_when_not_found_in_cache",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_remove_first_with_clustering_components",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_return_null_when_force_decode_null",
            "info.archinnov.achilles.internal.table.ColumnMetaDataComparatorTest#should_compare_list_type",
            "info.archinnov.achilles.persistence.BatchTest#should_start_batch_with_consistency_level",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.internal.persistence.operations.EntityUpdaterTest#should_update_proxified_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_supported_type",
            "info.archinnov.achilles.internal.context.PersistenceManagerFacadeTest#should_initialize_list",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_mark_dirty_on_element_add",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_iterator_with_batch_size",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_exception_when_calling_start_batch",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_iterator_remove",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_select_field_ps_for_clustered_id",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_get_value",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_activate_query_tracing",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_remove_elements_from_list",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_get_reference_with_consistency",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_with_default_params",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_id_for_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_decode_list",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_true_for_is_embedded_id",
            "info.archinnov.achilles.query.cql.NativeQueryTest#should_get",
            "info.archinnov.achilles.persistence.PersistenceManagerFactoryTest#should_create_batching_persistence_manager",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_set",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_update",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_return_null_when_null_row",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_validate_and_update_tables",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_remove_by_id",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_static_column_in_non_clustered_table",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_raw_entities",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_unproxy_real_entryset",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_validate_clustering_components",
            "info.archinnov.achilles.test.integration.tests.CQLEmbeddedServerIT#should_return_same_native_session",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_load_simple_entity",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_keyspace_name_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove_all",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_instanciate_a_bean",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_varying_components",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_create_empty_entity",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_prepended_element_with_bind_marker",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_exception_when_partition_components_do_not_match",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_added_elements_with_bind_marker",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_build_counter_with_initial_value",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_clustering_to",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_empty_map_value_from_row",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_map_field",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type_with_keyspace",
            "info.archinnov.achilles.test.integration.tests.CQLEmbeddedServerIT#should_exception_when_embedded_already_started_with_another_cql_port",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_refresh",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaBuilderTest#should_build_clustered_counter_meta",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_create_resources_once",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_exception_when_limit_set_for_remove",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_exception_when_null_partition_component_provided",
            "info.archinnov.achilles.integration.spring.PersistenceManagerFactoryBeanTest#should_exception_when_no_keyspace_name_set",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_entity_for_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_build_meta_data_without_bean_validation",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_load_properties_into_object",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_limit",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_find_consistency_level_by_default",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_not_match",
            "info.archinnov.achilles.internal.persistence.operations.EntityPersisterTest#should_persist_clustered_counter",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_push_clustered_counter_increment",
            "info.archinnov.achilles.internal.context.ConfigurationContextTest#should_not_detect_constrained_class_if_bean_validation_disabled",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_proxy_warmup",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_last_index_of",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_not_persist_counters_if_no_delta",
            "info.archinnov.achilles.internal.metadata.transcoding.MapTranscoderTest#should_encode_key",
            "info.archinnov.achilles.query.slice.SliceQueryBuilderTest#should_set_to_embedded_id_and_create_builder",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_increment_with_initial_value",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_retrieve_all_properties_meta_for_insert",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_get_target",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_ttl",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterBuilderTest#should_decrement",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_no_counter_property_column",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_loading_entity_with_three_consistency",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_remove",
            "info.archinnov.achilles.persistence.PersistenceManagerFactoryTest#should_create_persistence_manager",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_update",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_map_field",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_generate_update_prepared_statement_when_not_found_in_cache",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_empty_entities_list",
            "info.archinnov.achilles.internal.context.EntityFacadeTest#should_bind_for_clustered_counter_removal",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_persist",
            "info.archinnov.achilles.internal.context.ImmediateFlushContextTest#should_trigger_interceptor",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_increment_from_null_delta",
            "info.archinnov.achilles.internal.persistence.operations.EntityPersisterTest#should_remove",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_embedded_id",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_get_default_insert_strategy_on_entity",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entity_for_raw_typed_query_with_bound_values",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_assign_set_value",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_failing_cas_update",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_throw_exception_on_cas_error",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_added_entries",
            "info.archinnov.achilles.query.typed.TypedQueryValidatorTest#should_skip_component_column_validation_when_select_star",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyFilterTest#should_have_annotation",
            "info.archinnov.achilles.internal.validation.ValidatorTest#should_exception_array_type",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_infer_column_family_from_annotation",
            "info.archinnov.achilles.internal.context.DaoFacadeTest#should_push_statement_wrapper",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_infer_column_family_from_default_name",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_exception_when_setter_taking_wrong_type",
            "info.archinnov.achilles.internal.context.BatchingFlushContextTest#should_duplicate_with_no_data_but_consistency",
            "info.archinnov.achilles.internal.metadata.parsing.EntityIntrospectorTest#should_get_inherited_field_by_annotation_and_name",
            "info.archinnov.achilles.type.TypedMapTest#should_return_default",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_create_counter_table",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_simple_property_string",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_order",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_slice_select_query_without_ordering",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_exception_by_default_on_encode_to_components",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_persist_clustered_counters",
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_execute_cas_successfully",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_update_table_for_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_decode_primitive_byte_type",
            "info.archinnov.achilles.schemabuilder.CompressionOptionsTest#should_create_no_compressions_options",
            "info.archinnov.achilles.internal.metadata.holder.ClusteringComponentsTest#should_exception_when_wrong_type_provided_for_clustering_components",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_get_reference",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_infer_parameterized_value_class_from_list",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_select_star",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_get_value_from_initial_and_delta_values",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_raw_entity",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_get_encoded_list_changes",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_primitive_byte_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_find",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_blank_clustering_order_column_provided",
            "info.archinnov.achilles.configuration.ArgumentExtractorTest#should_init_entity_packages",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_set_with_cas_condition",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_exception_when_removal_ps_not_found_for_a_table",
            "info.archinnov.achilles.internal.context.DaoContextTest#should_get_simple_counter",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains",
            "info.archinnov.achilles.internal.metadata.transcoding.AbstractTranscoderTest#should_encode_object_byte_type",
            "info.archinnov.achilles.persistence.BatchTest#should_exception_when_persist_with_consistency",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_set_clustering_from",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_with_time_uuid_for_entity",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_statement_to_add_elements_to_set",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_last_with_clustering_components",
            "info.archinnov.achilles.internal.proxy.wrapper.MapWrapperTest#should_mark_dirty_on_remove_existing",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_last",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_null_when_no_partition_key_field",
            "info.archinnov.achilles.internal.consistency.ConsistencyOverriderTest#should_get_read_level_from_entity_meta",
            "info.archinnov.achilles.internal.metadata.holder.PropertyTypeTest#should_test_is_valid_clustered_value",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_set",
            "info.archinnov.achilles.internal.persistence.operations.InternalCounterImplTest#should_get_value_from_delta_value_only",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_map",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_merge",
            "info.archinnov.achilles.internal.persistence.operations.EntityLoaderTest#should_load_clustered_counter_entity",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_exception_when_counter_property_column_not_matching",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_find",
            "info.archinnov.achilles.internal.persistence.operations.CounterPersisterTest#should_persist_counters",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_null_fields",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_slice_select_query",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_transient_entity",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_false_for_is_clustered_counter_if_more_than_one_property",
            "info.archinnov.achilles.internal.persistence.operations.EntityMapperTest#should_set_compound_key_to_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_query_with_default_params",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_insert_ps",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_return_false_for_is_clustered_counter_if_not_clustered",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_return_object_when_get_real_object_called_on_non_proxified_entity",
            "info.archinnov.achilles.internal.metadata.transcoding.ListTranscoderTest#should_encode",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_all_entry",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementGeneratorTest#should_prepare_select_eager_ps_with_single_key",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_element_only_once",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_prepend",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_with_default_params",
            "info.archinnov.achilles.type.CounterBuilderTest#should_be_able_to_serialize_and_deserialize_counter_impl",
            "info.archinnov.achilles.internal.statement.cache.CacheManagerTest#should_prepare_message_for_collection_and_map_operation",
            "info.archinnov.achilles.query.cql.NativeQueryTest#should_get_one",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_encode_CAS_condition_value",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_get_id_value_from_row",
            "info.archinnov.achilles.internal.proxy.dirtycheck.DirtyCheckChangeSetTest#should_generate_update_for_removed_elements",
            "info.archinnov.achilles.internal.metadata.holder.PartitionComponentsTest#should_exception_when_no_partition_component_provided",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_all_options",
            "info.archinnov.achilles.schemabuilder.DropTest#should_drop_table_with_keyspace",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_set_field",
            "info.archinnov.achilles.internal.reflection.ObjectInstantiatorTest#should_instantiate_class_without_public_constructor",
            "info.archinnov.achilles.internal.context.SchemaContextTest#should_fetch_table_metas",
            "info.archinnov.achilles.persistence.PersistenceManagerTest#should_deserialize_from_json",
            "info.archinnov.achilles.query.slice.RootSliceQueryBuilderTest#should_get_last_n",
            "info.archinnov.achilles.test.integration.tests.RemoveProxyIT#should_remove_proxy_from_entity",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_return_null_when_cannot_map_entity",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_ordering_desc",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_table",
            "info.archinnov.achilles.internal.proxy.wrapper.ListWrapperTest#should_return_copy_of_iterator",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_exception_when_read_repair_chance_out_of_bound",
            "info.archinnov.achilles.internal.persistence.operations.CounterLoaderTest#should_load_clustered_counter_column",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_return_null_key_when_null_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains_all",
            "info.archinnov.achilles.internal.persistence.operations.EntityProxifierTest#should_return_null_when_unproxying_null",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_key_with_complicated_inheritance",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_exception_when_table_does_not_exist",
            "info.archinnov.achilles.iterator.SliceQueryIteratorTest#should_return_true_for_has_next",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_simple_counter_select",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_exception_when_achilles_counter_table_does_not_exist",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update",
            "info.archinnov.achilles.internal.cql.TypeMapperTest#should_convert_cql_to_java",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_calling_setter_on_counter",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_not_find_counter_if_not_long_type",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_set",
            "info.archinnov.achilles.internal.statement.SliceQueryStatementGeneratorTest#should_generate_where_clause",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_fail_if_simple_column_is_a_reserved_keyword",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_use_custom_bean_validator_interceptor",
            "info.archinnov.achilles.iterator.SliceQueryIteratorTest#should_get_next_clustered_entity",
            "info.archinnov.achilles.internal.metadata.discovery.AchillesBootstrapperTest#should_build_meta_data_with_field_level_constrained_bean",
            "info.archinnov.achilles.test.integration.utils.CassandraLogAsserterTest#should_find_serial_and_normal_consistency_levels",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove_all",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_value_from_field",
            "info.archinnov.achilles.internal.reflection.RowMethodInvokerTest#should_exception_when_invoking_list_getter_from_row",
            "info.archinnov.achilles.query.slice.CQLSliceQueryTest#should_get_fixed_components_when_same_size",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_at_same_index_twice",
            "info.archinnov.achilles.internal.metadata.holder.EmbeddedIdPropertiesTest#should_get_clustering_component_names_and_classes",
            "info.archinnov.achilles.internal.metadata.holder.PropertyMetaTest#should_return_empty_list_when_no_component_classes"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_size",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_primary_key",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_interceptors_before_flush_for_batch",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_find_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_set_on_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_clustered_exception_for_indexed_query",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_clustered_entity_for_raw_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_sub_list_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query_with_bound_values",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_field_by_batch_value_for_counter_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_refresh",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_insert_strategy",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value_to_null",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_find_by_slice_query",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_typed_query",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptors",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_persist",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_by_id",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_milli_secs",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_iterate_by_slice_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_element_add",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_pre_remove_interceptors",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_refreshing_non_managed_entity",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_list",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_mapping_on_field_for_counter_type",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_scheme_update_enabled",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_with_ttl",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_managed_entity",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table_with_clustering_order",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_as_compound_partition_key",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_update",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_update_interceptors",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_merge_modifications",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_property_after_merge",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getFirst",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_raw_typed_query",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_delegate_method_call_to_the_target",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_valueset_retain_all",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_count_for_native_query",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_enum",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_with_only_pk_in_where_clause",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_cql3_column_name",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find_unmapped_field",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_normal_select",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_override_consistency_by_map",
            "info.archinnov.achilles.test.integration.tests.SupportedTypesIT#should_persist_and_find_all_types",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_keyspace",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_heap_byte_buffer",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_map_wrapper",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_when_not_exists",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_return_entities_for_indexed_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_list_property",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_add_column",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_element_add",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_simple_id",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_set_property",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_with_compound_partition_key",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_get_proxy",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_field",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_timestamp",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_primary_key",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getFirst",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_with_custom_consistency_level",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_find_counter",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_refreshed_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_persist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getLast",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_insert",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_managed_entity_after_persist",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_retain_all",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_compound_key",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_clustered_counter",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove_with_default_params",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_timestamp",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_id_and_column_annotation_on_same_field",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_persist_counter",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_iterator_remove",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_list_field",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_overwrite_existing_values_on_persist",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_counter_value",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_recover_from_exception_and_reinit_consistency_level",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entity_for_typed_query_with_bound_values",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_embedded_id",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_indexed_simple_field",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_simple_counter_field",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_keys",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_when_no_match",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_reverse_ordering",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_simple_value",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_runtime_value_on_batch_mode_for_normal_type",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_ttl_and_timestamp_for_native_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_element_add",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_find",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_set_counter_on_managed_entity",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_set",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_exception_when_entity_has_duplicated_column_name",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_batch_level_by_runtime_value_for_slice_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_update",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_entry",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_remove_counter",
            "info.archinnov.achilles.test.integration.tests.EntityLessIT#should_bootstrap_achilles_without_entity_package_for_native_query",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_and_return_simple_property",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_update_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_all_fields",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_list_at_index_with_cas_condition",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resources_once",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove_all",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_persist_interceptors",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_get_reference",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_inherited_bean",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_setting_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_varying_components",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getLast",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_remove_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_map_field",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type_with_keyspace",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_create_resources_once",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resource_with_a_distinct_keyspace",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_apply_right_interceptor_on_right_event",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist_empty_entity",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_entity_for_typed_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_not_override_batch_mode_level_by_runtime_value_for_normal_type",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add_at_index",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_element",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_limit",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_none",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_remove_interceptors",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_find_entities_for_indexed_enum_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_ttl",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_percentile",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_counters",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_update",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_primary_key",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_loading_entity_with_three_consistency",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_remove",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_set_element_at_index_to_list_with_cas_conditions",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_several_entities",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_set_wrapper",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array_with_argument",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_bounded_values",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_remove_element_at_index_to_list_update",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_persist",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_property",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_all_when_no_match",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_null_and_not_wrapper_for_null_values",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_retain_all",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_embedded_id",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_empty_target",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_simple_property",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_cas_error_on_native_query",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_lazy_properties",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_simple_property",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_key_when_invoking_id_getter",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_clear",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entity_for_raw_typed_query_with_bound_values",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_list",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_failing_cas_update",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_counter_table",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_select_star",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_empty_condition_exception_for_indexed_query",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key_and_clustering_keys",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_update_modifications",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_order",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_list_wrapper",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_clear",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_raw_entity",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_ignore_null_varargs_for_bounded_values",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_on_cas_update_failure",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_add_all",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_and_notify_cas_listener_on_success",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_select_star",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_compact_storage",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_raw_entity",
            "info.archinnov.achilles.internal.utils.UUIDGenTest#should_generate_distinct_microseconds",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_empty_add_all",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column_with_insert_and_update",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_find",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_ttl",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_set_with_cas_condition",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_map",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_remove_key",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_refresh_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_fail_bootstrapping_if_schema_update_forbidden_for_entity",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_update",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_default_params",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_with_time_uuid_for_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_find",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_create_resources_once",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value_to_null",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_after_exception",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_clustered_entity_for_typed_query_with_select_star",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value_to_null",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_set",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_table_name",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_not_null_field_overriding_global_config",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_map",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_only_fields_that_are_not_null",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_merge",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_and_consistency_after_exception",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_find",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear_then_append",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_null_fields",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_transient_entity",
            "info.archinnov.achilles.test.integration.tests.SerializationIT#should_serialized_proxified_entity_with_Jackson",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_cql_functions_for_native_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_update_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_query_with_default_params",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_managed__entity_after_setting_value",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_entity_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_static_column",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_retain_all_when_all_match",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_simple_field",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update_with_ttl",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update_for_cluster_counter",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_all_entry",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_element_only_once",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_prepend",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_class",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_map_property",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_wide_row",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_if_not_exists",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_all_options",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.test.integration.tests.RemoveProxyIT#should_remove_proxy_from_entity",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_slice_query",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_retain_all",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_remove_by_slice_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_clear_when_empty",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_table",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_for_entity",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_return_null_key_when_null_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_select_star",
            "info.archinnov.achilles.test.integration.tests.CacheSizeIT#should_re_prepare_statements_when_cache_size_exceeded",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_persist_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_trying_to_modify_primary_key",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_target",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_calling_setter_on_counter",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_staled_object_during_refresh",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_set",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_at_index",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_over_clusterings_components",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_use_custom_bean_validator_interceptor",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_persisting_with_two_consistency",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_and_ttl_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_reinit_consistency_level_after_exception",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_all",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_update",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove_all",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_set",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_retain_all"
        ],
        "flaky_tests": [
            "info.archinnov.achilles.internal.statement.wrapper.RegularStatementWrapperTest#should_trace_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_with_ttl",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_return_entities_for_indexed_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_with_ttl"
        ],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_ttl"
        ],
        "config_only_random_max": [],
        "config_only_sleep_increase": [],
        "config_only_time_round": [
            "info.archinnov.achilles.internal.utils.UUIDGenTest#should_generate_distinct_microseconds"
        ],
        "config_only_random_fix": [],
        "config_only_locale_fix": [
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_size",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_get_primary_key",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_interceptors_before_flush_for_batch",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_find_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_set_on_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_clustered_exception_for_indexed_query",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_clustered_entity_for_raw_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_sub_list_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query_with_bound_values",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_field_by_batch_value_for_counter_type",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_refresh",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_insert_strategy",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value_to_null",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_find_by_slice_query",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_typed_query",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptors",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_persist",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_by_id",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_milli_secs",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_iterate_by_slice_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_element_add",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_pre_remove_interceptors",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_refreshing_non_managed_entity",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_list",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_mapping_on_field_for_counter_type",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_scheme_update_enabled",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_with_ttl",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_managed_entity",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table_with_clustering_order",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_as_compound_partition_key",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_field_update",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_update_interceptors",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_merge_modifications",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_property_after_merge",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getFirst",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_raw_typed_query",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_delegate_method_call_to_the_target",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_valueset_retain_all",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_count_for_native_query",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_enum",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_with_only_pk_in_where_clause",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_with_cas_conditions_using_cql3_column_name",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find_unmapped_field",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_normal_select",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_override_consistency_by_map",
            "info.archinnov.achilles.test.integration.tests.SupportedTypesIT#should_persist_and_find_all_types",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_keyspace",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_heap_byte_buffer",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_map_wrapper",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_when_not_exists",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_return_entities_for_indexed_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_list_property",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_add_column",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_element_add",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_set_value",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_simple_id",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_set_property",
            "info.archinnov.achilles.internal.metadata.parsing.EmbeddedIdParserTest#should_parse_embedded_id_with_compound_partition_key",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_get_proxy",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_field",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_timestamp",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_primary_key",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getFirst",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_with_custom_consistency_level",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_find_counter",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_refreshed_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_persist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_getLast",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_insert",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_managed_entity_after_persist",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_retain_all",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_compound_key",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_clustered_counter",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove_with_default_params",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_update_modifications",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_timestamp",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_id_and_column_annotation_on_same_field",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_persist_counter",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_iterator_remove",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_list_field",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_overwrite_existing_values_on_persist",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_counter_value",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_recover_from_exception_and_reinit_consistency_level",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entity_for_typed_query_with_bound_values",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_embedded_id",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_indexed_simple_field",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_bean_with_simple_counter_field",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_keys",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_when_no_match",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_consistency_level",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_reverse_ordering",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_simple_value",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_mapping_on_class_by_runtime_value_on_batch_mode_for_normal_type",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_ttl_and_timestamp_for_native_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_element_add",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_and_find",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_set_counter_on_managed_entity",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_set",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_ttl",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_exception_when_entity_has_duplicated_column_name",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_override_batch_level_by_runtime_value_for_slice_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.UnorderedBatchModeIT#should_not_order_batch_statements_for_update",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_entry",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_remove",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_remove_counter",
            "info.archinnov.achilles.test.integration.tests.EntityLessIT#should_bootstrap_achilles_without_entity_package_for_native_query",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_load_and_return_simple_property",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_update_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_all_fields",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_list_at_index_with_cas_condition",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resources_once",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_bootstrap_embedded_server_and_entity_manager",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove_all",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_persist_interceptors",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_get_reference",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_inherited_bean",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_setting_id",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_varying_components",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_getLast",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_remove_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_map_field",
            "info.archinnov.achilles.schemabuilder.AlterTest#should_alter_column_type_with_keyspace",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.test.integration.AchillesInternalCQLResourceTest#should_create_resources_once",
            "info.archinnov.achilles.junit.AchillesResourceBuilderTest#should_create_resource_with_a_distinct_keyspace",
            "info.archinnov.achilles.internal.metadata.holder.EntityMetaTest#should_apply_right_interceptor_on_right_event",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist_empty_entity",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_entity_for_typed_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelPriorityOrderingIT#should_not_override_batch_mode_level_by_runtime_value_for_normal_type",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_persist_and_find",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add_at_index",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_element",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_exception_when_remove_with_limit",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_none",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_remove_interceptors",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_find_entities_for_indexed_enum_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_ttl",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_speculative_retry_in_percentile",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_counters",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_update",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_exception_when_getting_primary_key",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_loading_entity_with_three_consistency",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithEnumCompoundKeyIT#should_remove",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_set_element_at_index_to_list_with_cas_conditions",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_batch_several_entities",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_set_wrapper",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array_with_argument",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_apply_null_bounded_values",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_persist_and_find_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.internal.statement.StatementGeneratorTest#should_generate_remove_element_at_index_to_list_update",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_persist",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_property",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_remove_all_when_no_match",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_return_null_and_not_wrapper_for_null_values",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_retain_all",
            "info.archinnov.achilles.internal.metadata.parsing.PropertyParserTest#should_parse_embedded_id",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_empty_target",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_simple_property",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_cas_error_on_native_query",
            "info.archinnov.achilles.test.integration.tests.InitializeIT#should_initialize_lazy_properties",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_simple_property",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_add",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_key_when_invoking_id_getter",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_set_clear",
            "info.archinnov.achilles.test.integration.tests.ValuelessEntityIT#should_persist_with_ttl",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_complete_table",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_keyset_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entity_for_raw_typed_query_with_bound_values",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_list",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_failing_cas_update",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_counter_table",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_select_star",
            "info.archinnov.achilles.test.integration.tests.SecondaryIndexIT#should_throw_empty_condition_exception_for_indexed_query",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key_and_clustering_keys",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_update_modifications",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_clustering_order",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_list_wrapper",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_clear",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_raw_entity",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_ignore_null_varargs_for_bounded_values",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_refresh",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_on_cas_update_failure",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_update_modifications",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_add_all",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_iterator_remove",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_insert_and_notify_cas_listener_on_success",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_refresh",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_all_managed_with_select_star",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_compact_storage",
            "info.archinnov.achilles.query.typed.TypedQueryTest#should_get_first_raw_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_empty_add_all",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_order_batch_operations_on_the_same_column_with_insert_and_update",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_persist_and_find",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_remove",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_ttl",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_update_set_with_cas_condition",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_with_map",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_remove_key",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_refresh_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_fail_bootstrapping_if_schema_update_forbidden_for_entity",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_class_update",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithReverseClusteringIT#should_query_with_default_params",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_with_time_uuid_for_entity",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_persist_and_find",
            "info.archinnov.achilles.junit.AchillesResourceTest#should_create_resources_once",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_list_value_to_null",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_after_exception",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_clustered_entity_for_typed_query_with_select_star",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_set_map_value_to_null",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_list_element_list_iterator_set",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_entity_with_table_name",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_not_null_field_overriding_global_config",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_map",
            "info.archinnov.achilles.test.integration.tests.InsertStrategyIT#should_insert_only_fields_that_are_not_null",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_merge",
            "info.archinnov.achilles.test.integration.tests.BatchModeIT#should_reinit_batch_context_and_consistency_after_exception",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_find",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_clear_then_append",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_remove",
            "info.archinnov.achilles.internal.statement.prepared.PreparedStatementBinderTest#should_bind_for_insert_with_null_fields",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove_transient_entity",
            "info.archinnov.achilles.test.integration.tests.SerializationIT#should_serialized_proxified_entity_with_Jackson",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_cql_functions_for_native_query",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT2#should_update_entity_having_compound_id_with_enum",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_rows_for_native_query",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_persist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_query_with_default_params",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_composite_partition_key",
            "info.archinnov.achilles.test.integration.tests.CounterIT#should_get_counter_from_managed__entity_after_setting_value",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_first_raw_entity_for_raw_typed_query_with_simple_select",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_static_column",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_retain_all_when_all_match",
            "info.archinnov.achilles.internal.table.TableUpdaterTest#should_update_table_with_new_simple_field",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update_with_ttl",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_array",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.SchemaUpdateIT#should_allow_dynamic_schema_update_for_cluster_counter",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_entrySet_remove_all_entry",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_element_only_once",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_remove_by_id",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_prepend",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_entities_for_typed_query_with_simple_select",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_remove_with_default_params",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_validate_entity_constrained_on_class",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_return_null_for_map_property",
            "info.archinnov.achilles.internal.metadata.parsing.EntityParserTest#should_parse_wide_row",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_refresh",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_remove",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_simple_table_if_not_exists",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_custom_params",
            "info.archinnov.achilles.schemabuilder.CreateTest#should_create_table_with_all_options",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_check_for_common_operation_on_found_clustered_entity_by_iterator",
            "info.archinnov.achilles.test.integration.tests.RemoveProxyIT#should_remove_proxy_from_entity",
            "info.archinnov.achilles.test.integration.tests.EventInterceptorIT#should_apply_post_load_interceptor_on_slice_query",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_retain_all",
            "info.archinnov.achilles.test.integration.tests.ValuelessClusteredEntityIT#should_remove_by_slice_query",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_not_mark_dirty_on_clear_when_empty",
            "info.archinnov.achilles.internal.table.TableCreatorTest#should_create_clustered_table",
            "info.archinnov.achilles.internal.table.TableValidatorTest#should_validate_embedded_id_for_entity",
            "info.archinnov.achilles.internal.reflection.ReflectionInvokerTest#should_return_null_key_when_null_entity",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_true_on_contains_all",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithObjectPropertyIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.QueryIT#should_return_raw_entities_for_raw_typed_query_with_select_star",
            "info.archinnov.achilles.test.integration.tests.CacheSizeIT#should_re_prepare_statements_when_cache_size_exceeded",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_find",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_persist_with_runtime_consistency_level_overriding_predefined_one",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_trying_to_modify_primary_key",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_failing_cas_update",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_return_target",
            "info.archinnov.achilles.internal.proxy.EntityInterceptorTest#should_exception_when_calling_setter_on_counter",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_exception_when_staled_object_during_refresh",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_set",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_list_element_remove_at_index",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_over_clusterings_components",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_default_params",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_use_custom_bean_validator_interceptor",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_query_with_custom_params",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_exception_when_trying_to_insert_with_cas_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_throw_exception_when_persisting_with_two_consistency",
            "info.archinnov.achilles.test.integration.tests.CASOperationsIT#should_notify_listener_when_trying_to_insert_with_cas_and_ttl_because_already_exist",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.ConsistencyLevelIT#should_reinit_consistency_level_after_exception",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCounterIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_map_put_all",
            "info.archinnov.achilles.test.integration.tests.BeanValidationIT#should_error_on_invalid_property_update",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_not_dirty_check_map_valueset_remove_all",
            "info.archinnov.achilles.test.integration.tests.PersistenceManagerOperationsIT#should_remove",
            "info.archinnov.achilles.test.integration.tests.EntityWithCompositePartitionKeyIT#should_persist_and_get_proxy",
            "info.archinnov.achilles.test.integration.tests.ClusteredEntityWithCompositePartitionKeyIT#should_iterate_with_default_params",
            "info.archinnov.achilles.test.integration.tests.DirtyCheckIT#should_dirty_check_assign_new_value_to_set",
            "info.archinnov.achilles.internal.proxy.wrapper.SetWrapperTest#should_mark_dirty_on_retain_all"
        ],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_map_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_set_with_timestamp",
            "info.archinnov.achilles.test.integration.tests.ExtendedDirtyCheckIT#should_add_elements_to_list_with_timestamp"
        ],
        "config_only_time_relative": [],
        "config_only_random_min": [],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [],
        "config_only_fix_date": [],
        "config_only_date_bk": []
    },
    "elasticjob-elastic-job-lite": {
        "total_tests": [
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertPersistOnlineForEnabledServer",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertTriggerWhenJobIsNotRunning",
            "io.elasticjob.lite.lifecycle.restful.RestfulExceptionTest#assertRestfulException",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindJobRegisterStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertStart",
            "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest#assertSharding3",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertGetShardingItemsWithEnabledServer",
            "io.elasticjob.lite.context.TaskContextTest#assertMetaInfoFromWithTaskIdWithoutShardingItems",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertAddTaskRunningStatistics",
            "io.elasticjob.lite.api.strategy.impl.OdevitySortByNameJobShardingStrategyTest#assertShardingByAsc",
            "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest#assertCronSettingChangedJobListenerWhenIsNotCronPath",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithInterruptedException",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest#assertGetFromCache",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertRegisterComplete",
            "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest#assertConnectionLostListenerWhenConnectionStateIsOther",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertIsNotCompletedRootNode",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertAfterJobExecuted",
            "io.elasticjob.lite.internal.sharding.ShardingNodeTest#assertGetRunningNode",
            "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest#assertStart",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertIsCompletedRootNode",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildWhenCronIsNull",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertBeforeJobExecuted",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertCompletedNodeRemovedJobListenerWhenIsRemovedAndCompletedNode",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertGetJobNodeData",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyForStreamingProcessAndMultipleShardingItems",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertToSimpleJobJson",
            "io.elasticjob.lite.context.TaskContextTest#assertGetTaskName",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertToJsonForScriptJob",
            "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest#assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertCheckMaxTimeDiffSecondsTolerable",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertDisableWithJobNameAndServerIp",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetFullPath",
            "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest#assertRemove",
            "io.elasticjob.lite.lifecycle.domain.ShardingStatusTest#assertGetShardingStatusWhenIsPending",
            "io.elasticjob.lite.exception.ExceptionUtilTest#assertTransformWithNull",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindJobRunningStatisticsWithDifferentFromDate",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertPersistSequential",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertIsStartedRootNode",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertAddConnectionStateListener",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertPauseJobSuccess",
            "io.elasticjob.lite.lifecycle.internal.operate.ShardingOperateAPIImplTest#assertEnableSharding",
            "io.elasticjob.lite.executor.type.WrongJobExecutorTest#assertWrongJobExecutorWithSingleItem",
            "io.elasticjob.lite.internal.sharding.ShardingNodeTest#assertGetItemByRunningItemPath",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceAndThrowExceptionForSingleShardingItem",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertToItemListForDuplicated",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertShardingNecessaryWhenMonitorExecutionDisabledAndDecreaseShardingTotalCount",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindJobRegisterStatisticsWithDifferentFromDate",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobOperateAPI",
            "io.elasticjob.lite.lifecycle.internal.statistics.ServerStatisticsAPIImplTest#assertGetJobsTotalCount",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsAllStarted",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertGetRegCenter",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertFromJsonForSimpleJob",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverIfUnnecessaryWhenServerIsNotReady",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithNoNodeException",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertRemoveWithServerIp",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertMisfireIfNotRunning",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertCreateJobNodeIfRootJobNodeIsNotExist",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertRescheduleJobSuccess",
            "io.elasticjob.lite.context.TaskContextTest#assertNew",
            "io.elasticjob.lite.internal.listener.ListenerManagerTest#assertStartAllListeners",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertBeforeJobExecutedWhenIsNotAllStartedAndNotTimeout",
            "io.elasticjob.lite.context.TaskContextTest#assertSetSlaveId",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertIsExisted",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertElectLeader",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithoutListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.executor.JobExecutorFactoryTest#assertGetJobExecutorForDataflowJob",
            "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest#io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest",
            "io.elasticjob.lite.api.JobSchedulerTest#assertInit",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertEligibleForJobRunningWhenNotNeedShardingAndStreamingProcess",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithNoNodeExistsException",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertNotHaveRunningItemsWithoutMonitorExecution",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertRemoveFailoverInfo",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertFillJobNode",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertGetCurrentShardingTotalCountIfNotNull",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetJobsTotalCount",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertAfterJobExecutedWhenIsAllCompletedAndNotTimeout",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterInitFailureTest#assertInitFailure",
            "io.elasticjob.lite.api.ShardingContextTest#assertToString",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertRemoveJobSettings",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithErrorSort",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertDisableWithJobName",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertNotEligibleForJobRunningWhenUnStreamingProcess",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertAddJobRunningStatistics",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertGetLocalTakeOffItems",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertToJsonForDataflowJob",
            "io.elasticjob.lite.internal.server.ServerNodeTest#assertIsLocalServerPath",
            "io.elasticjob.lite.console.util.HomeFolderUtilsTest#assertGetFilePathInHomeFolder",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertRegisterJobCompletedWhenFailoverDisabled",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertGetShardingContextWhenIsFailoverEnableAndNotFailover",
            "io.elasticjob.lite.internal.schedule.JobTriggerListenerTest#assertGetName",
            "io.elasticjob.lite.util.config.ShardingItemParametersTest#assertNewWhenPairFormatInvalid",
            "io.elasticjob.lite.executor.type.ScriptJobExecutorTest#assertExecuteWhenExecuteFailureForSingleShardingItems",
            "io.elasticjob.lite.lifecycle.domain.ShardingStatusTest#assertGetShardingStatusWhenIsDisabled",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertListenServersChangedJobListenerWhenIsServerStatusPathButUpdate",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperConfigurationTest#assertNewZookeeperConfigurationForServerListsAndNamespace",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertLoadFromCacheButNull",
            "io.elasticjob.lite.executor.type.ScriptJobExecutorTest#assertExecuteWhenCommandLineIsEmpty",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertJobPropertiesEnumFromInvalidValue",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertGetJobInstance",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertCompletedNodeRemovedJobListenerWhenIsNotCompletedNode",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertUpdateFailoverComplete",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertRegisterJobCompletedWithoutMonitorExecution",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertShardingTotalCountChangedJobListenerWhenIsConfigPathAndCurrentShardingTotalCountIsEqualToNewShardingTotalCount",
            "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest#assertGetDefaultStrategy",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertElectLeaderExecutionCallbackWithLeader",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertIsPausedFailure",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertPutSuccess",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertStart",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderAbdicationWhenFollowerDisable",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertResumeJobSuccess",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetCrashedJobBriefInfo",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetOKJobBriefInfo",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithCausedNoNodeException",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertResumeJobFailure",
            "io.elasticjob.lite.event.JobExecutionEventTest#assertNewJobExecutionEvent",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertPutNullValue",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterFromCache",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertShardingTotalCountChangedJobListenerWhenIsConfigPathAndCurrentShardingTotalCountIsNotEqualToNewShardingTotalCount",
            "io.elasticjob.lite.internal.instance.InstanceServiceTest#assertIsLocalJobInstanceExisted",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertIsNotMaxTimeDiffSecondsTolerable",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertRemoveWithJobNameAndServerIp",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverLeaderExecutionCallbackIfNotNecessary",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertGetLocalShardingItemsWithEnabledServer",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertRescheduleJobFailure",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetShardingNodePathWihItemAndNode",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertRescheduleJobWhenTriggerIsNull",
            "io.elasticjob.lite.util.env.TimeServiceTest#assertGetCurrentMillis",
            "io.elasticjob.lite.internal.sharding.ExecutionContextServiceTest#assertGetShardingContextWhenHasRunningItems",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertToItemListWhenEmpty",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertFromScriptJobJson",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobSettingsAPI",
            "io.elasticjob.lite.exception.JobSystemExceptionTest#assertGetCause",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenServerEnableWithLeader",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertFromJsonForScriptJob",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertCreateJobNodeIfNeeded",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithErrorPageSizeAndNumber",
            "io.elasticjob.lite.config.LiteJobConfigurationTest#assertBuildWhenOptionalParametersIsNull",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetChildrenKeys",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertPersistJobConfigurationForJobConflict",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertShutdownWithServerIp",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithTime",
            "io.elasticjob.lite.internal.sharding.ShardingNodeTest#assertGetItemWhenNotRunningItemPath",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertBeforeJobExecutedFailure",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsNotAllCompletedWhenRootNodeIsNotExisted",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertToItemsString",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenServerDisableWithoutLeader",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyAndIsEligibleForJobRunningForStreamingProcess",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobStatisticsAPI",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertIsNotLocalInstancePath",
            "io.elasticjob.lite.internal.reconcile.ReconcileServiceTest#assertReconcile",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertRegisterJobCompletedWithMonitorExecution",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertListenServersChangedJobListenerWhenIsNotServerStatusPath",
            "io.elasticjob.lite.internal.sharding.MonitorExecutionListenerManagerTest#assertMonitorExecutionSettingsChangedJobListenerWhenIsNotFailoverPath",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertStart",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertRemoveLocalInstancePath",
            "io.elasticjob.lite.util.env.HostExceptionTest#assertGetCause",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertPauseJobIfShutdown",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsNotAllCompleted",
            "io.elasticjob.lite.internal.instance.InstanceServiceTest#assertRemoveInstance",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertGetDisabledItems",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertIsPausedIfTriggerStateIsNormal",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertUpdateJobExecutionEventWhenFailureAndMessageExceed",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertCompletedNodeRemovedJobListenerWhenIsNotRemoved",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertRegisterJob",
            "io.elasticjob.lite.util.config.ShardingItemParametersTest#assertGetMapWhenIsEmpty",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertListenServersChangedJobListenerWhenIsInstanceChangeButJobInstanceIsShutdown",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertIsLeaderUntilBlockWithoutLeaderAndAvailableServers",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertMisfireIfRunning",
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest",
            "io.elasticjob.lite.internal.instance.InstanceServiceTest#assertClearTriggerFlag",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindJobRunningStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertUpdateJobExecutionEventWhenFailure",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertShardingWithoutAvailableJobInstances",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertPersistEphemeral",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildAllProperties",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertUpdateLocalInstancePath",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertGetMisfiredJobItems",
            "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest#assertGetStrategyFailureWhenStrategyClassInvalid",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertGetLocalShardingItemsWithInstanceShutdown",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertGetShardingContextWhenIsFailoverEnableAndFailover",
            "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest#assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateButCannotFindJob",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsAllCompleted",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertIsMaxTimeDiffSecondsTolerableWithDefaultValue",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertGetWhenValueIsEmpty",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertJson",
            "io.elasticjob.lite.context.TaskContextTest#assertSetIdle",
            "io.elasticjob.lite.internal.server.ServerNodeTest#assertGetServerNode",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertToItemList",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertGetJobNodeChildrenKeys",
            "io.elasticjob.lite.util.json.GsonFactoryTest#assertGetGson",
            "io.elasticjob.lite.event.JobExecutionEventTest#assertExecutionSuccess",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertEnableWithServerIp",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertStart",
            "io.elasticjob.lite.internal.sharding.ShardingNodeTest#assertGetMisfireNode",
            "io.elasticjob.lite.executor.type.ScriptJobExecutorTest#assertExecuteSuccessForSingleShardingItems",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertFailoverSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButEnableFailover",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertIsJobRunningIfNotNull",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertPersistNewJobConfiguration",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetFromServer",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertShutdownWithJobNameAndServerIp",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetShardingNodePath",
            "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest#assertGetExecutorServiceHandlerForSameThread",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyForUnStreamingProcessAndMultipleShardingItems",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertIsPauseJobIfShutdown",
            "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest#assertMonitorWithDumpCommand",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithErrorPageSizeAndNumber",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenCheckMaxTimeDiffSecondsIntolerable",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithErrorFields",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertRegisterStart",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertIsNotShutdown",
            "io.elasticjob.lite.context.TaskContextTest#assertMetaInfoFromWithTaskId",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertEnableWithJobName",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertRemoveLocalInstancePathForReconnectedRegistryCenter",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertIsLeader",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertGetDataflowJobSettings",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverIfNecessary",
            "io.elasticjob.lite.context.TaskContextTest#assertNewWithoutSlaveId",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertClearRunningInfo",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertIsNeedSharding",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertAddJobStatusTraceEventWhenFailoverWithTaskStagingState",
            "io.elasticjob.lite.internal.schedule.JobTriggerListenerTest#assertTriggerMisfiredWhenPreviousFireTimeIsNotNull",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertBeforeJobExecutedWhenIsAllStarted",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenShardingItemsIsEmpty",
            "io.elasticjob.lite.exception.JobExecutionEnvironmentExceptionTest#assertGetMessage",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertIsShutdownAlready",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertRemoveJobNodeIfNeeded",
            "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest#assertSharding2",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertGetShardingContextWhenIsFailoverDisable",
            "io.elasticjob.lite.event.JobEventBusTest#assertPost",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForZeroServer",
            "io.elasticjob.lite.context.TaskContextTest#assertMetaInfoFromWithMetaInfoWithoutShardingItems",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertHasShardingInfoInOfflineServers",
            "io.elasticjob.lite.api.strategy.JobInstanceTest#assertGetIp",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertResumeJobIfShutdown",
            "io.elasticjob.lite.util.env.IpUtilsTest#assertGetHostName",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServerButJobInstanceIsShutdown",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetDisabledJobBriefInfo",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertGetFailoverItems",
            "io.elasticjob.lite.internal.util.SensitiveInfoUtilsTest#assertFilterContentWithoutIp",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertUpdate",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertAddJobStatusTraceEventWhenFailoverWithTaskFailedState",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceWithMisfire",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertIsNotEnableServer",
            "io.elasticjob.lite.exception.JobConfigurationExceptionTest#assertGetCause",
            "io.elasticjob.lite.internal.listener.JobListenerTest#assertChildEventSuccess",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindTaskResultStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.event.JobEventBusTest#assertRegisterFailure",
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#assertMonitorWithCommand",
            "io.elasticjob.lite.exception.JobConfigurationExceptionTest#assertGetMessage",
            "io.elasticjob.lite.api.strategy.JobInstanceTest#assertGetJobInstanceId",
            "io.elasticjob.lite.lifecycle.domain.ShardingStatusTest#assertGetShardingStatusWhenIsShardingError",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertStartedNodeRemovedJobListenerWhenIsRemovedAndStartedNode",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertIsEnableServer",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertIsInstancePath",
            "io.elasticjob.lite.internal.listener.JobListenerTest#assertChildEventWhenEventDataIsEmpty",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertPostJobExecutionEvent",
            "io.elasticjob.lite.internal.failover.FailoverNodeTest#assertGetItemByExecutionFailoverPath",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderAbdicationWhenLeaderDisable",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertIsNotInstancePath",
            "io.elasticjob.lite.executor.handler.impl.DefaultJobExceptionHandlerTest#assertHandleException",
            "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest#assertCreateJobEventListenerFailure",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertSetReshardingFlag",
            "io.elasticjob.lite.internal.failover.FailoverNodeTest#assertGetItemWhenNotExecutionFailoverPath",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertFindJobExecutionEvent",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertRegisterJobBeginWithoutMonitorExecution",
            "io.elasticjob.lite.api.strategy.impl.OdevitySortByNameJobShardingStrategyTest#assertShardingByDesc",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateShardingStatisticsAPI",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertFailoverIfUnnecessary",
            "io.elasticjob.lite.context.TaskContextTest#assertGetExecutorId",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithoutDigest",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertPauseJobFailure",
            "io.elasticjob.lite.executor.handler.ExecutorServiceHandlerRegistryTest#assertGetExecutorServiceHandlerForConcurrent",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertNotTriggerWhenIsNotUpdate",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertGetLocalShardingItemsWithDisabledServer",
            "io.elasticjob.lite.executor.type.ScriptJobExecutorTest#assertExecuteWhenExecuteFailureForMultipleShardingItems",
            "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest#assertGetStrategySuccess",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestTaskResultStatistics",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertGetLocalFailoverItemsIfShutdown",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertRemoveLeader",
            "io.elasticjob.lite.internal.sharding.ExecutionContextServiceTest#assertGetShardingContextWhenNotAssignShardingItem",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildWhenOptionalParametersIsNull",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertUpdateJobNode",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertGetLocalInstancePath",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertFromSimpleJobJson",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest#assertInitWithDigestFailure",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertDisableWithServerIp",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertFailoverSettingsChangedJobListenerWhenIsFailoverPathButNotUpdate",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperElectionServiceTest#assertContend",
            "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest#assertConnectionLostListenerWhenConnectionStateIsReconnectedButIsShutdown",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertElectLeaderExecutionCallbackWithoutLeader",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyAndIsNotEligibleForJobRunningForStreamingProcess",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetShardingErrorJobBriefInfo",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithRefTest#assertSpringJobBean",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertIsMaxTimeDiffSecondsTolerable",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertIsNotAvailableServerWhenDisabled",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#assertGetRawClient",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertIsAvailableServer",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertStartedNodeRemovedJobListenerWhenIsNotRemoved",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertPersist",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertTriggerWithJobName",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithDigest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#assertGetRawCache",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndCglibTest#assertSpringJobBean",
            "io.elasticjob.lite.util.config.ShardingItemParametersTest#assertNewWhenItemIsNotNumber",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertTriggerJobFailure",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithFields",
            "io.elasticjob.lite.executor.type.ScriptJobExecutorTest#assertExecuteSuccessForMultipleShardingItems",
            "io.elasticjob.lite.internal.election.LeaderNodeTest#assertIsNotLeaderInstancePath",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetRegistryCenterTime",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertToScriptJobJson",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsNotAllStarted",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertShutdownJobIfShutdown",
            "io.elasticjob.lite.api.ShardingContextTest#assertNew",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertIsLocalInstancePath",
            "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest#assertRegisterStartUpInfo",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithJobPropertiesTest#assertSpringJobBean",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertRemoveLocalInstancePathForPausedJob",
            "io.elasticjob.lite.lifecycle.internal.statistics.ShardingStatisticsAPIImplTest#assertGetShardingInfo",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestJobRunningStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.internal.failover.FailoverNodeTest#assertGetItemsNode",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertRemoveWithJobName",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertAddDataListener",
            "io.elasticjob.lite.internal.sharding.MonitorExecutionListenerManagerTest#assertMonitorExecutionSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButEnableFailover",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertGetLocalFailoverItems",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertIsNotLeaderInstancePathAndServerPath",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertHasRunningItemsWithMonitorExecution",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertIsJobNodeExisted",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertFromDataflowJobJson",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertRemove",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetLeaderIpNodePath",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertTriggerJobSuccess",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertRescheduleJobIfShutdown",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertGetShardingItemsWithNotAvailableServer",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertTriggerWhenJobIsRunning",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertFailoverSettingsChangedJobListenerWhenIsNotFailoverPath",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertTtoItemListWhenNull",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertGetSummedTaskResultStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertLoadDirectly",
            "io.elasticjob.lite.util.env.IpUtilsTest#assertGetIp",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetJobsBriefInfoByIp",
            "io.elasticjob.lite.util.digest.EncryptionTest#assertMd5",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertHasRunningItemsForAll",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertIsNotAllStartedWhenRootNodeIsNotExisted",
            "io.elasticjob.lite.executor.JobExecutorFactoryTest#assertGetJobExecutorForScriptJob",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertGetWhenValueIsNotEmpty",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertUpdateJobExecutionEventWhenFailureAndConflict",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertIsJobRunningIfNull",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertUpdateJobSettings",
            "io.elasticjob.lite.internal.instance.InstanceServiceTest#assertGetAvailableJobInstances",
            "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest#assertCreateJobEventListenerSuccess",
            "io.elasticjob.lite.config.LiteJobConfigurationTest#assertBuildRequiredProperties",
            "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest#assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertSetCrashedFailoverFlagWhenItemIsNotAssigned",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertCreateJobNodeIfNotNeeded",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest#assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestJobRegisterStatistics",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertNotTriggerWhenIsNotTriggerOperation",
            "io.elasticjob.lite.event.rdb.JobEventRdbConfigurationTest#assertGetDataSource",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithPageSizeAndNumber",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithCausedConnectionLossException",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertNotTriggerWhenIsNotLocalInstancePath",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertMisfireIfRunning",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertClearMisfire",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindTaskRunningStatisticsWithDifferentFromDate",
            "io.elasticjob.lite.lifecycle.internal.statistics.ServerStatisticsAPIImplTest#assertGetAllServersBriefInfo",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertShutdownSuccess",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertIsNotAvailableServerWithoutOnlineInstances",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenIsNotInstancesPath",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertIsPausedIfTriggerStateIsPaused",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertExecuteInTransactionFailure",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndJdkDynamicProxyTest#assertSpringJobBean",
            "io.elasticjob.lite.exception.JobSystemExceptionTest#assertGetMessage",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertPersistOnlineForInstanceShutdown",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertNotHaveRunningItemsForAll",
            "io.elasticjob.lite.context.TaskContextTest#assertGetIdForUnassignedSlave",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerOperateAPI",
            "io.elasticjob.lite.internal.sharding.MonitorExecutionListenerManagerTest#assertMonitorExecutionSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButDisableFailover",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertShutdown",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyAndProcessFailureWithExceptionForStreamingProcess",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertListenServersChangedJobListenerWhenIsServerChange",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertReplaceJobNode",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertGetShardingContextWhenHasDisabledItems",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceSuccessForMultipleShardingItems",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithSort",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertIsLeaderUntilBlockWithoutLeaderWithAvailableServers",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertAfterJobExecutedFailure",
            "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest#assertConnectionLostListenerWhenConnectionStateIsLostButIsShutdown",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertIsShutdownForJobSchedulerNull",
            "io.elasticjob.lite.event.JobEventBusTest#assertPostWithoutListener",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithTime",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertExecuteInTransactionSuccess",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverIfUnnecessaryWhenItemsRootNodeIsEmpty",
            "io.elasticjob.lite.util.json.JobConfigurationGsonTypeAdapterTest#assertToDataflowJobJson",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertLoad",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertShutdownWithJobName",
            "io.elasticjob.lite.api.strategy.impl.RotateServerByNameJobShardingStrategyTest#assertSharding1",
            "io.elasticjob.lite.exception.ExceptionUtilTest#assertTransformWithError",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertAddJobRegisterStatistics",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertIsNotLocalInstancePath",
            "io.elasticjob.lite.config.LiteJobConfigurationTest#assertIsFailover",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetOKJobBriefInfoWithPartialDisabledServer",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertPersistOnlineForDisabledServer",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertTriggerJobIfShutdown",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertFillEphemeralJobNode",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest#assertInitWithDigestSuccess",
            "io.elasticjob.lite.lifecycle.internal.operate.ShardingOperateAPIImplTest#assertDisableSharding",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertHasLeader",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenServerEnableWithoutLeader",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverIfUnnecessaryWhenItemsRootNodeNotExisted",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertShardingTotalCountChangedJobListenerWhenIsNotConfigPath",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithConnectionLossException",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertListenServersChangedJobListenerWhenIsInstanceChange",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertGetSummedTaskResultStatistics",
            "io.elasticjob.lite.util.concurrent.ExecutorServiceObjectTest#assertCreateExecutorService",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertGetCompletedNode",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertAfterJobExecutedWhenIsAllCompletedAndTimeout",
            "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest#assertTriggerWhenJobScheduleControllerIsNull",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithPageSizeAndNumber",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenIsNotNodeRemoved",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertShardingWhenUnnecessary",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetWithoutNode",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertSetCrashedFailoverFlagWhenItemIsAssigned",
            "io.elasticjob.lite.context.TaskContextTest#assertGetMetaInfo",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenAddLeaderInstancePath",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertLoadFromCache",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#assertGetZkConfig",
            "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest#assertConnectionLostListenerWhenConnectionStateIsLost",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetNumChildren",
            "io.elasticjob.lite.internal.schedule.JobTriggerListenerTest#assertTriggerMisfiredWhenPreviousFireTimeIsNull",
            "io.elasticjob.lite.internal.server.ServerNodeTest#assertIsServerPath",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertStart",
            "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest#assertGetStrategyFailureWhenNotStrategyClass",
            "io.elasticjob.lite.exception.JobStatisticExceptionTest#assertGetCause",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertShardingWhenIsNotLeader",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertFromJsonForDataflowJob",
            "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest#assertConnectionLostListenerWhenConnectionStateIsReconnected",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertHasAvailableServers",
            "io.elasticjob.lite.config.LiteJobConfigurationTest#assertIsNotFailover",
            "io.elasticjob.lite.internal.config.LiteJobConfigurationGsonFactoryTest#assertToJsonForSimpleJob",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestTaskRunningStatistics",
            "io.elasticjob.lite.internal.server.ServerNodeTest#assertIsNotLocalServerPath",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertAfterJobExecutedWhenIsAllCompleted",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertUpdateJobSettingsIfJobNameIsEmpty",
            "io.elasticjob.lite.executor.type.WrongJobExecutorTest#assertWrongJobExecutorWithMultipleItems",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildRequiredProperties",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithOtherException",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyForStreamingProcessAndSingleShardingItem",
            "io.elasticjob.lite.lifecycle.restful.RestfulServerTest#assertCallFailure",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertNewExecutorWithDefaultHandlers",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceWithMisfireIsNotEmptyButIsNotEligibleForJobRunning",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertUpdateJobExecutionEventWhenSuccessAndConflict",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertNotHaveRunningItems",
            "io.elasticjob.lite.context.TaskContextTest#assertMetaInfoFromWithMetaInfo",
            "io.elasticjob.lite.internal.sharding.MonitorExecutionListenerManagerTest#assertMonitorExecutionSettingsChangedJobListenerWhenIsFailoverPathButNotUpdate",
            "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest#assertCronSettingChangedJobListenerWhenIsCronPathButNotUpdate",
            "io.elasticjob.lite.api.strategy.JobShardingStrategyFactoryTest#assertGetStrategyFailureWhenClassNotFound",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindTaskRunningStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertAddJobStatusTraceEvent",
            "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest#assertShardingTotalCountChangedJobListenerWhenIsConfigPathButCurrentShardingTotalCountIsZero",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithFields",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertStart",
            "io.elasticjob.lite.executor.JobExecutorFactoryTest#assertGetJobExecutorWhenJobClassWhenUnsupportedJob",
            "io.elasticjob.lite.internal.util.SensitiveInfoUtilsTest#assertFilterContentWithSensitiveIp",
            "io.elasticjob.lite.internal.server.ServerNodeTest#assertIsNotServerPath",
            "io.elasticjob.lite.util.config.ShardingItemsTest#assertToItemsStringWhenEmpty",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertRegisterJobBegin",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertIsLeaderUntilBlockWhenHasLeader",
            "io.elasticjob.lite.context.TaskContextTest#assertTaskContextFrom",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenFailoverDisabled",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNotEmptyForUnStreamingProcessAndSingleShardingItem",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceWithMisfireIsEmpty",
            "io.elasticjob.lite.event.rdb.JobEventRdbListenerTest#assertPostJobStatusTraceEvent",
            "io.elasticjob.lite.internal.config.ConfigurationNodeTest#assertIsConfigPath",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenPreviousJobStillRunning",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertClearAllCompletedInfo",
            "io.elasticjob.lite.event.rdb.JobEventRdbListenerTest#assertPostJobExecutionEvent",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertUpdateJobExecutionEventWhenSuccess",
            "io.elasticjob.lite.internal.guarantee.GuaranteeListenerManagerTest#assertStartedNodeRemovedJobListenerWhenIsNotStartedNode",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertRegisterJobBeginWithMonitorExecution",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetServerNodePathForServerIp",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetAllJobsBriefInfo",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertAddTaskResultStatistics",
            "io.elasticjob.lite.lifecycle.internal.operate.JobOperateAPIImplTest#assertEnableWithJobNameAndServerIp",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertHasNotShardingInfoInOfflineServers",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForServersMoreThanShardingCount",
            "io.elasticjob.lite.event.rdb.JobEventRdbStorageTest#assertAddJobExecutionEvent",
            "io.elasticjob.lite.internal.failover.FailoverServiceTest#assertFailoverLeaderExecutionCallbackIfNecessary",
            "io.elasticjob.lite.event.JobExecutionEventTest#assertExecutionFailure",
            "io.elasticjob.lite.internal.election.ElectionListenerManagerTest#assertLeaderElectionWhenRemoveLeaderInstancePathWithoutAvailableServers",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertClearAllRunningInfo",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestJobRegisterStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceAndThrowExceptionForMultipleShardingItems",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertShardingNecessaryWhenMonitorExecutionEnabledAndIncreaseShardingTotalCount",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestTaskRunningStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.internal.schedule.JobScheduleControllerTest#assertShutdownFailure",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertFailoverSettingsChangedJobListenerWhenIsFailoverPathAndUpdateButDisableFailover",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertRegisterJobCompletedWhenFailoverEnabled",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerStatisticsAPI",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest#assertGetWithoutValue",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertIsNotStartedRootNode",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertUpdateJobSettingsIfShardingTotalCountLessThanOne",
            "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest#assertUpdateJobConfiguration",
            "io.elasticjob.lite.internal.instance.InstanceNodeTest#assertGetInstanceFullPath",
            "io.elasticjob.lite.executor.JobExecutorFactoryTest#assertGetJobExecutorForSimpleJob",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithNull",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertPersistShardingInfoTransactionExecutionCallback",
            "io.elasticjob.lite.config.LiteJobConfigurationTest#assertBuildAllProperties",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildWhenJobNameIsNull",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertGetScriptJobSettings",
            "io.elasticjob.lite.internal.failover.FailoverNodeTest#assertGetExecutionFailoverNode",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForOneServer",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithSort",
            "io.elasticjob.lite.lifecycle.restful.RestfulServerTest#assertCallSuccess",
            "io.elasticjob.lite.config.JobCoreConfigurationTest#assertBuildWhenTotalSHardingCountIsNegative",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertRemoveJobNodeIfNotNeeded",
            "io.elasticjob.lite.internal.sharding.ExecutionServiceTest#assertSetMisfire",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertGetCurrentShardingTotalCountIfNull",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertGetRegistryCenterTime",
            "io.elasticjob.lite.event.rdb.JobEventRdbIdentityTest#assertGetIdentity",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindTaskResultStatisticsWithDifferentFromDate",
            "io.elasticjob.lite.util.config.ShardingItemParametersTest#assertGetMap",
            "io.elasticjob.lite.internal.sharding.ShardingServiceTest#assertIsNeedSharding",
            "io.elasticjob.lite.executor.JobExecutorFactoryTest#assertGetJobExecutorTwice",
            "io.elasticjob.lite.executor.type.SimpleJobExecutorTest#assertExecuteWhenRunOnceSuccessForSingleShardingItems",
            "io.elasticjob.lite.internal.guarantee.GuaranteeNodeTest#assertGetStartedNode",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertFailoverIfNecessary",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertPutInvalidKey",
            "io.elasticjob.lite.internal.storage.JobNodeStorageTest#assertGetJobNodeDataDirectly",
            "io.elasticjob.lite.internal.guarantee.GuaranteeServiceTest#assertClearAllStartedInfo",
            "io.elasticjob.lite.internal.storage.JobNodePathTest#assertGetServerNodePath",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForServersLessThanShardingCountAliquantFor8ShardingCountAnd3Servers",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertClearMisfire",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestTaskResultStatisticsWhenTableIsEmpty",
            "io.elasticjob.lite.lifecycle.internal.statistics.JobStatisticsAPIImplTest#assertGetAllJobsBriefInfoWithoutNamespace",
            "io.elasticjob.lite.lifecycle.internal.settings.JobSettingsAPIImplTest#assertUpdateJobSettingsIfCronIsEmpty",
            "io.elasticjob.lite.lifecycle.domain.ShardingStatusTest#assertGetShardingStatusWhenIsRunning",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForServersLessThanShardingCountAliquot",
            "io.elasticjob.lite.executor.type.DataflowJobExecutorTest#assertExecuteWhenFetchDataIsNullAndEmpty",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithEventTraceRdbTest#assertSpringJobBean",
            "io.elasticjob.lite.util.json.GsonFactoryTest#assertRegisterTypeAdapter",
            "io.elasticjob.lite.internal.election.LeaderNodeTest#assertIsLeaderInstancePath",
            "io.elasticjob.lite.internal.election.LeaderServiceTest#assertIsLeaderUntilBlockWithLeader",
            "io.elasticjob.lite.statistics.rdb.StatisticRdbRepositoryTest#assertFindLatestJobRunningStatistics",
            "io.elasticjob.lite.api.strategy.impl.AverageAllocationJobShardingStrategyTest#shardingForServersLessThanShardingCountAliquantFor10ShardingCountAnd3Servers",
            "io.elasticjob.lite.internal.server.ServerServiceTest#assertHasNotAvailableServers",
            "io.elasticjob.lite.internal.schedule.LiteJobFacadeTest#assertNotEligibleForJobRunningWhenNeedSharding",
            "io.elasticjob.lite.exception.ExceptionUtilTest#assertTransformWithException",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertPersistEphemeralSequential",
            "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest#assertJobCrashedJobListenerWhenIsSameInstance",
            "io.elasticjob.lite.reg.exception.RegExceptionHandlerTest#assertHandleExceptionWithCausedNoNodeExistsException",
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertIsShutdownForJobInstanceNull",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithErrorFields",
            "io.elasticjob.lite.internal.sharding.ExecutionContextServiceTest#assertGetShardingContextWhenAssignShardingItems",
            "io.elasticjob.lite.internal.config.ConfigurationServiceTest#assertPersistExistedJobConfiguration",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithErrorSort",
            "io.elasticjob.lite.internal.instance.InstanceServiceTest#assertPersistOnline",
            "io.elasticjob.lite.api.listener.DistributeOnceElasticJobListenerTest#assertBeforeJobExecutedWhenIsNotAllStartedAndTimeout",
            "io.elasticjob.lite.executor.handler.JobPropertiesTest#assertJobPropertiesEnumFromValidValue"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerStatisticsAPI",
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#assertMonitorWithCommand",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobStatisticsAPI",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithoutListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest#io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithTime",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithRefTest#assertSpringJobBean",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterFromCache",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobOperateAPI",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithEventTraceRdbTest#assertSpringJobBean",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithDigest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndJdkDynamicProxyTest#assertSpringJobBean",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndCglibTest#assertSpringJobBean",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateShardingStatisticsAPI",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerOperateAPI",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithoutDigest",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobSettingsAPI",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetRegistryCenterTime",
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithTime",
            "io.elasticjob.lite.util.concurrent.ExecutorServiceObjectTest#assertCreateExecutorService",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithJobPropertiesTest#assertSpringJobBean"
        ],
        "flaky_tests": [
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithTime",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetRegistryCenterTime",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithTime"
        ],
        "tests": [],
        "od_tests": [
            "io.elasticjob.lite.internal.schedule.JobRegistryTest#assertGetCurrentShardingTotalCountIfNull",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#assertPersistEphemeralSequential",
            "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest#assertIsShutdownAlready"
        ],
        "config_only_sleep_decrease": [],
        "config_only_random_max": [],
        "config_only_sleep_increase": [
            "io.elasticjob.lite.util.concurrent.ExecutorServiceObjectTest#assertCreateExecutorService"
        ],
        "config_only_time_round": [
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#assertGetRegistryCenterTime"
        ],
        "config_only_random_fix": [],
        "config_only_locale_fix": [],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerStatisticsAPI",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobStatisticsAPI",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithoutListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest#io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithRefTest#assertSpringJobBean",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithoutCacheTest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterFromCache",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobOperateAPI",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithEventTraceRdbTest#assertSpringJobBean",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithDigest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndJdkDynamicProxyTest#assertSpringJobBean",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerAndCglibTest#assertSpringJobBean",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateShardingStatisticsAPI",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterMiscellaneousTest",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerOperateAPI",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithoutDigest",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobSettingsAPI",
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest",
            "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest#io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterForAuthTest",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithListenerTest#assertSpringJobBean",
            "io.elasticjob.lite.spring.job.JobSpringNamespaceWithJobPropertiesTest#assertSpringJobBean"
        ],
        "config_only_time_relative": [
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobSettingsAPI",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateShardingStatisticsAPI",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerStatisticsAPI",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobStatisticsAPI",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateServerOperateAPI",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterFromCache",
            "io.elasticjob.lite.lifecycle.api.JobAPIFactoryTest#assertCreateJobOperateAPI",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithDigest",
            "io.elasticjob.lite.lifecycle.internal.reg.RegistryCenterFactoryTest#assertCreateCoordinatorRegistryCenterWithoutDigest"
        ],
        "config_only_random_min": [],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [
            "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest#assertMonitorWithCommand"
        ],
        "config_only_fix_date": [
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobExecutionEventsWithTime",
            "io.elasticjob.lite.event.rdb.JobEventRdbSearchTest#assertFindJobStatusTraceEventsWithTime"
        ],
        "config_only_date_bk": []
    },
    "activiti-activiti": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [
            "org.activiti.engine.test.bpmn.async.AsyncExclusiveJobsTest#testExclusiveJobs",
            "org.activiti.engine.test.bpmn.event.timer.compatibility.BoundaryTimerEventRepeatCompatibilityTest#testRepeatWithoutEnd",
            "org.activiti.engine.test.api.repository.ProcessDefinitionSuspensionTest#testSuspendProcessInstancesDuringProcessDefinitionSuspend",
            "org.activiti.engine.test.api.task.TaskServiceTest#testGetVariableByHistoricActivityInstance",
            "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest#testMultipleTimersOnUserTask",
            "org.activiti.engine.test.bpmn.event.timer.IntermediateTimerEventTest#testCatchingTimerEvent",
            "org.activiti.engine.test.bpmn.event.end.TerminateEndEventTest#testTerminateInSubProcessWithBoundary",
            "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerEventTest#testMultipleTimersOnUserTask",
            "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest#testJoin",
            "org.activiti.engine.test.jobexecutor.AsyncExecutorTest#testRegularAsyncExecution",
            "org.activiti.engine.test.jobexecutor.AsyncExecutorTest#testAsyncExecutorDisabledOnOneEngine",
            "org.activiti.engine.test.history.HistoricVariableInstanceTest#testHistoricVariableQueryByTaskIds",
            "org.activiti.engine.test.api.event.JobEventsTest#testTimerFiredForIntermediateTimer",
            "org.activiti.engine.test.jobexecutor.JobExecutorExceptionsTest#testQueryByExceptionWithRealJobExecutor",
            "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerEventTest#testExpressionOnTimer",
            "org.activiti.engine.test.bpmn.exclusive.ExclusiveTimerEventTest#testCatchingTimerEvent",
            "org.activiti.engine.test.bpmn.event.timer.StartTimerEventRepeatWithEndTest#testCycleDateStartTimerEvent",
            "org.activiti.engine.test.bpmn.gateway.EventBasedGatewayTest#testCatchTimerCancelsSignal",
            "org.activiti.engine.test.jobexecutor.JobExecutorTest#testBasicJobExecutorOperation",
            "org.activiti.engine.test.bpmn.event.timer.IntermediateTimerEventTest#testTimerEventWithStartAndDuration",
            "org.activiti.engine.test.bpmn.event.timer.StartTimerEventTest#testDurationStartTimerEvent",
            "org.activiti.spring.test.jobexecutor.SpringAsyncExecutorTest#testHappyJobExecutorPath",
            "org.activiti.engine.test.api.repository.ProcessDefinitionSuspensionTest#testDelayedSuspendMultipleProcessDefinitionsByKey",
            "org.activiti.spring.test.servicetask.ServiceTaskSpringDelegationTest#testAsyncMethodExpressionOnSpringBean",
            "org.activiti.engine.test.api.repository.ProcessDefinitionSuspensionTest#testDelayedActivateProcessDefinition",
            "org.activiti.engine.test.bpmn.subprocess.SubProcessTest#testSimpleSubProcessWithTimer",
            "org.activiti.engine.test.bpmn.async.AsyncTaskTest#testAsyncTask",
            "org.activiti.engine.test.bpmn.subprocess.SubProcessTest#testNestedSimpleSubprocessWithTimerOnInnerSubProcess",
            "org.activiti.engine.test.bpmn.async.AsyncTaskTest#testBasicAsyncCallActivity",
            "org.activiti.engine.test.bpmn.event.timer.compatibility.StartTimerEventRepeatCompatibilityTest#testCycleDateStartTimerEvent",
            "org.activiti.engine.test.jobexecutor.AsyncExecutorTest#testAsyncFailingScript",
            "org.activiti.engine.test.api.event.ActivityEventsTest#testActivityTimeOutEvent"
        ],
        "tests": [],
        "od_tests": []
    },
    "qos-ch-logback": {
        "total_tests": [
            "ch.qos.logback.classic.control.CLCTest#test1",
            "ch.qos.logback.classic.joran.conditional.ConditionalTest#conditionalConsoleApp_IF_THEN_ELSE",
            "ch.qos.logback.classic.pattern.ThrowableProxyConverterTest#nested",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#indirectPerfTest",
            "ch.qos.logback.core.subst.TokenizerTest#colon",
            "ch.qos.logback.core.util.DatePatternToRegexTest#amPm",
            "ch.qos.logback.classic.spi.ContextListenerTest#testLevelChange",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingEventQuery",
            "ch.qos.logback.core.util.TimeUtilTest#testWeek",
            "ch.qos.logback.core.spi.ScenarioBasedCyclicBufferTrackerTest#shortTest",
            "ch.qos.logback.core.AsyncAppenderBaseTest#noEventLoss",
            "ch.qos.logback.core.subst.ParserTest#literalVariableLiteral",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverTest#testStartWhenAlreadyStarted",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsWarnEnabledWithNoFilter",
            "ch.qos.logback.classic.MDCTest#testLBCLASSIC_98",
            "ch.qos.logback.core.joran.event.InPlayFireTest#testBasic",
            "ch.qos.logback.core.pattern.parser.ParserTest#keywordGluedToLitteral",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#noCompression_FileBlank_NoRestart_2",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#isNullForInexistentPropertyShouldEvaluateToTrue",
            "ch.qos.logback.classic.boolex.OnMarkerEvaluatorTest#nullMarkerInEvent",
            "ch.qos.logback.classic.LoggerTest#smoke",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#callerDataShouldBeCorrectlySetWithAsynchronousSending",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertExceptionQuery",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#nonSerializableParameters",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#rootLoggerLevelSettingBySystemProperty",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testAppendOk",
            "ch.qos.logback.classic.LoggerTest#setLevelToNull_B",
            "ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistryTest#absent",
            "ch.qos.logback.classic.LoggerTest#testRootLogger",
            "ch.qos.logback.classic.pattern.MarkerConverterTest#testWithMarker",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testPassDefaultCipherSuites",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#withGZCompression_FileBlank_NoRestart_6",
            "ch.qos.logback.core.util.DatePatternToRegexTest#timeZone",
            "ch.qos.logback.core.encoder.ObjectEncodeDecodeTest#singleBatch",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#simpleList",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#turboFilter",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testEntryConditionsCheckNoMessage",
            "ch.qos.logback.classic.issue.lbclassic135.lbclassic139.LB139_DeadlockTest#test",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#objectListConverter",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetLoggingEventPropertyColumnName",
            "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBaseTest#singleDate",
            "ch.qos.logback.core.net.server.AbstractServerSocketAppenderTest#testStopThrowsException",
            "ch.qos.logback.classic.spi.PackagingDataCalculatorTest#perfTest",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testCustomBufferSize",
            "ch.qos.logback.core.joran.SkippingInInterpreterTest#testSkippingActionExInBadEnd",
            "ch.qos.logback.classic.ScenarioBasedLoggerContextTest#testLength_30",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#testTurboDynamicThreshold2",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#monthlyRolloverOverManyPeriods",
            "ch.qos.logback.classic.LoggerContextTest#testLoggerMultipleChildren",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#compositedKeywordFollowedByOptions",
            "ch.qos.logback.classic.PatternLayoutTest#testUnStarted",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedGmail_SSL",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#clearOnChildThreadShouldNotAffectParent",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#getGetAppender",
            "ch.qos.logback.core.rolling.helper.FileStoreUtilTest#manual_filesOnDifferentVolumesShouldBeDetectedAsSuch",
            "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBaseTest#multiDate",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testPassDefaultProtocols",
            "ch.qos.logback.core.sift.AppenderTrackerTest#trackerShouldHonorMaxComponentsParameter",
            "ch.qos.logback.classic.net.SocketReceiverTest#testStartNoRemoteAddress",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#lbcore193",
            "ch.qos.logback.core.AsyncAppenderBaseTest#invalidQueueCapacityShouldResultInNonStartedAppender",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testSlashSuffix",
            "ch.qos.logback.classic.LoggerTest#testAdditive",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#smoke",
            "ch.qos.logback.core.subst.ParserTest#variable",
            "ch.qos.logback.core.pattern.SpacePadderTest#lengthyPad",
            "ch.qos.logback.core.joran.event.SaxEventRecorderTest#bodyWithSpacesAndQuotes",
            "ch.qos.logback.classic.pattern.ThrowableProxyConverterTest#smoke",
            "ch.qos.logback.core.util.OptionHelperTest#defaultValueReferencingAVariable",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#noCompression_FileBlank_StopRestart_3",
            "ch.qos.logback.classic.PatternLayoutTest#testNopExeptionHandler",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#sysProps",
            "ch.qos.logback.classic.pattern.ConverterTest#testThread",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#testDispatchEvent",
            "org.slf4j.impl.RecursiveInitializationTest#recursiveLogbackInitialization",
            "ch.qos.logback.core.pattern.SpacePadderTest#smoke",
            "ch.qos.logback.classic.LoggerTest#testEnabledX_Warn",
            "ch.qos.logback.classic.AsyncAppenderTest#eventWasPreparedForDeferredProcessing",
            "ch.qos.logback.classic.corpusTest.RandomUtilTest#smoke",
            "ch.qos.logback.core.joran.action.IncludeActionTest#basicFile",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithSuffix",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scanWithFileInclusion",
            "ch.qos.logback.core.status.StatusUtilTest#withoutResetsStatusUtilShouldReturnNotFound",
            "ch.qos.logback.core.util.TimeUtilTest#testMinute",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#isNullForExistingLocalProperty",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#maxAppendersCountPropertyShouldBeHonored",
            "ch.qos.logback.core.util.FileUtilTest#checkDeeperParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.classic.util.LoggerNameUtilTest#supportNestedClasses",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testAddAppender",
            "ch.qos.logback.classic.db.DBAppenderH2Test#emptyCallerDataShouldBeHandledGracefully",
            "ch.qos.logback.classic.boolex.OnMarkerEvaluatorTest#smoke",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#asynchronousSmoke",
            "ch.qos.logback.core.util.LocationUtilTest#testFileUrl",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withCompression_FileSet_NoRestart_6",
            "ch.qos.logback.classic.joran.conditional.ConditionalTest#conditionalInclusionWithExistingFile",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#compositePropertyShouldCombineWithinAndWithoutSiftElement",
            "ch.qos.logback.core.FileAppenderResilienceTest#smoke",
            "ch.qos.logback.core.util.LocationUtilTest#testExplicitClasspathUrl",
            "ch.qos.logback.core.rolling.helper.RollingCalendarTest#testVaryingNumberOfDailyPeriods",
            "ch.qos.logback.classic.html.HTMLLayoutTest#testAppendThrowable",
            "ch.qos.logback.core.util.FileUtilTest#basicCopyingWorks",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testFileNameWithParenthesis",
            "ch.qos.logback.core.joran.SkippingInInterpreterTest#testSkippingActionExInBadBegin",
            "ch.qos.logback.classic.spi.LoggerComparatorTest#testSmoke",
            "ch.qos.logback.core.OutputStreamAppenderTest#nullFileFooter",
            "ch.qos.logback.core.net.ssl.SSLContextFactoryBeanTest#testCreateContext",
            "ch.qos.logback.core.subst.ParserTest#withDefault",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedGmailStartTLS",
            "ch.qos.logback.classic.util.LevelToSyslogSeverityTest#smoke",
            "ch.qos.logback.classic.LoggerContextTest#testLoggerXY",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#LBCLASSIC_104",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testAppendFailure",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testEmptyP2",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testLevel",
            "ch.qos.logback.classic.net.server.RemoteAppenderStreamClientTest#testWithDisabledLevel",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testFilterReply",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#MDC",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#propertyCascading0",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#jmxConfiguratorWithDefaults",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testContextInfo",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testDetachAppender",
            "ch.qos.logback.classic.MessageFormattingTest#testNoFormatting",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#smoke",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testNoStart",
            "ch.qos.logback.core.joran.action.PropertyActionTest#nameValuePair",
            "ch.qos.logback.classic.encoder.LayoutInsteadOfEncoderTest#layoutInsteadOfEncoer",
            "ch.qos.logback.classic.LoggerContextTest#turboFilterStopOnReset",
            "ch.qos.logback.classic.spi.PackagingDataCalculatorTest#smoke",
            "ch.qos.logback.classic.jmx.JMXConfiguratorTest#contextStop",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testDefaultClassAnnotationForLists",
            "ch.qos.logback.classic.pattern.MarkerConverterTest#testWithNullMarker",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#levelChangePropagator1",
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldBeNonLossyIfDiscardingThresholdIsZero",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyRolloverWithInactivity70",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#existingLocalPropertyShouldEvaluateToTrue",
            "ch.qos.logback.core.helpers.CyclicBufferTest#smoke",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#root_LEVEL",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#testTwoDot",
            "ch.qos.logback.classic.pattern.MarkerConverterTest#testWithOneChildMarker",
            "ch.qos.logback.core.appender.FileAppenderTest#smoke",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testConverterStart",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testComplex",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testWithMatcher",
            "ch.qos.logback.core.net.server.AbstractServerSocketAppenderTest#testStartStop",
            "ch.qos.logback.core.status.StatusBaseTest#testAddStatus",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testEmptyP",
            "ch.qos.logback.classic.spi.CallerDataTest#testDeferredProcessing",
            "ch.qos.logback.classic.selector.ContextDetachingSCLTest#testDetach",
            "ch.qos.logback.core.ContextBaseTest#resetTest",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#whenContextPropertyIsSet_IfThenBranchIsEvaluated",
            "ch.qos.logback.core.appender.FileAppenderTest#testCreateParentFolders",
            "ch.qos.logback.classic.net.SocketReceiverTest#testNoDispatchEventForDisabledLevel",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#noCompression_FileSet_StopRestart_WithLongWait_4B",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#serializeLargeArgs",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#failed_rename",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test4",
            "ch.qos.logback.core.joran.action.IncludeActionTest#multiInclude",
            "ch.qos.logback.core.joran.action.PropertyActionTest#nameValuePairWithPrerequisiteSubsitution",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetTableName",
            "ch.qos.logback.classic.LoggerSerializationTest#testCompatibilityWith_v1_0_12",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#multiNested",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#basic",
            "ch.qos.logback.core.net.server.AbstractServerSocketAppenderTest#testStartWhenAlreadyStarted",
            "ch.qos.logback.classic.LoggerTest#setLevelToNull_A",
            "ch.qos.logback.classic.pattern.ConverterTest#testException",
            "ch.qos.logback.classic.AsyncAppenderTest#settingIncludeCallerDataPropertyCausedCallerDataToBeIncluded",
            "ch.qos.logback.classic.net.SocketReceiverTest#testDispatchEventForEnabledLevel",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testIsAttached",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testSetProperty",
            "ch.qos.logback.core.util.StatusPrinterTest#testNested",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#testAppendEvent",
            "ch.qos.logback.classic.MessageFormattingTest#testNoFormatting2",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testStarted",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withMissingTargetDirWithCompression",
            "ch.qos.logback.core.joran.implicitAction.ImplicitActionTest#nestedComplexWithoutClassAtrribute",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetIncludedCipherSuites",
            "ch.qos.logback.classic.turbo.LRUMessageCacheTest#testEldestEntriesRemoval",
            "ch.qos.logback.classic.pattern.ConverterTest#testRelativeTime",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#loggerAppenderRef",
            "ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBeanTest#testExplicitProvider",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#noCompression_FileSet_NoRestart_1",
            "ch.qos.logback.core.spi.ScenarioBasedCyclicBufferTrackerTest#mediumTest",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#existingSystemPropertyShouldEvaluateToTrue",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#defaultValueNestedAsVar",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRemoveMatchingWithMatchingPattern",
            "ch.qos.logback.core.pattern.parser.ParserTest#testNested",
            "ch.qos.logback.classic.net.JMSQueueAppenderTest#testStartMinimalInfo",
            "ch.qos.logback.classic.spi.ContextListenerTest#testNotifyOnReset",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#isDefinedForInexistentPropertyShouldEvaluateToTrue",
            "ch.qos.logback.classic.corpusTest.TextFileUtilTest#smoke",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#testNoDot",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testBasic",
            "ch.qos.logback.core.encoder.ByteArrayUtilTest#smoke",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#convertMultipleDates",
            "ch.qos.logback.classic.PatternLayoutTest#testConverterStart",
            "ch.qos.logback.core.appender.DummyAppenderTest#testConfiguredAppender",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#smoke",
            "ch.qos.logback.core.appender.DummyAppenderTest#testNoStart",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testBasic",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testEscapedParanteheses",
            "ch.qos.logback.core.subst.TokenizerTest#mix",
            "ch.qos.logback.core.pattern.parser.ParserTest#empty",
            "ch.qos.logback.core.status.StatusBaseTest#testEffectiveLevel",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testLoop1",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testTail3",
            "ch.qos.logback.core.rolling.RenameUtilTest#renameByCopying",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#marker",
            "ch.qos.logback.core.net.server.ConcurrentServerRunnerTest#testRunClientAndVisit",
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldOnlyLooseCertainEvents",
            "ch.qos.logback.core.joran.spi.NoAutoStartUtilTest#markedWithNoAutoStart",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#withBackslash",
            "ch.qos.logback.core.boolex.MatcherTest#testCaseSensitive",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsInfoEnabledWithYesFilter",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsErrorEnabledWithAcceptBlueFilter",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRetainMatchingWithNoPatterns",
            "ch.qos.logback.classic.LoggerContextTest#resetTest_LBCORE_104",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#whenNoPropertyIsDefined_IfThenBranchIsNotEvaluated_NO_ELSE_DEFINED",
            "ch.qos.logback.classic.PatternLayoutTest#contextProperty",
            "ch.qos.logback.core.net.server.ServerSocketListenerTest#testAcceptClient",
            "ch.qos.logback.core.sift.AppenderTrackerTest#endOfLivedAppendersShouldBeRemovedAfterLingeringTimeout",
            "ch.qos.logback.core.pattern.SpacePadderTest#longString",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetNeedClientAuth",
            "ch.qos.logback.core.OutputStreamAppenderTest#nullPresentationHeader",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test5",
            "ch.qos.logback.core.joran.action.DefinePropertyActionTest#noName",
            "ch.qos.logback.core.joran.action.IncludeActionTest#basicURL",
            "ch.qos.logback.core.FileAppenderResilience_AS_ROOT_Test#go",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#useNonExistenceOfSystemPropertyToDefineAContextProperty",
            "ch.qos.logback.core.rolling.helper.CompressTest#test1",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsInfoEnabledWithNoFilter",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithPrefix",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#testWholeCycle",
            "ch.qos.logback.classic.PatternLayoutTest#somekeReplace",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#noCompression_FileSet_WithStopStart_4",
            "org.slf4j.impl.InitializationOutputTest#noOutputIfContextHasAStatusListener",
            "ch.qos.logback.core.FileAppenderResilienceTest#manual",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#_Throwable",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testMultipleTo",
            "ch.qos.logback.classic.util.ContextInitializerTest#autoOnConsoleStatusListener",
            "ch.qos.logback.core.ContextBaseTest#contextNameProperty",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#LOGBACK729",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#existingContextPropertyShouldEvaluateToTrue",
            "ch.qos.logback.classic.pattern.ConverterTest#testLogger",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#contextProperty",
            "ch.qos.logback.core.net.ssl.SSLConfigurationTest#testParameters",
            "ch.qos.logback.classic.jul.LevelChangePropagatorTest#gc",
            "ch.qos.logback.core.net.ssl.SecureRandomFactoryBeanTest#testExplicitProvider",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#extendendeThrowable",
            "ch.qos.logback.classic.LoggerTest#testEnabled_Info",
            "ch.qos.logback.classic.PatternLayoutTest#testStarted",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testSimpleP2",
            "ch.qos.logback.core.subst.TokenizerTest#literalOnly",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scan_LOGBACK_474",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testEscapeClosingParentheses",
            "ch.qos.logback.classic.turbo.DuplicateMessageFilterTest#smoke",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsErrorEnabledWithYesFilter",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testEmptyPattern",
            "ch.qos.logback.core.net.AbstractSSLSocketAppenderTest#testUsingDefaultConfig",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.core.OutputStreamAppenderTest#nullFileHeader",
            "ch.qos.logback.classic.db.DBAppenderH2Test#testAppendThrowable",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#appenderSMTP",
            "ch.qos.logback.classic.PatternLayoutTest#mdcWithDefaultValue",
            "ch.qos.logback.core.OutputStreamAppenderTest#smoke",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#zeroNesting",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#testAppendNullEvent",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestampLocal",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectEventually",
            "ch.qos.logback.core.net.ssl.SecureRandomFactoryBeanTest#testUnknownAlgorithm",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#loneColonShouldReadLikeAnyOtherCharacter",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testEmpty",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetLoggingEventExceptionColumnName",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#whenContextPropertyIsSet_IfThenBranchIsEvaluated_NO_ELSE_DEFINED",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#directPerfTest",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyRollover15",
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#smoke",
            "ch.qos.logback.core.appender.DummyAppenderTest#testNewAppender",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withCompression_FileBlank_NoRestart_2",
            "ch.qos.logback.core.helpers.CyclicBufferTest#cloning",
            "ch.qos.logback.classic.LoggerContextTest#testStatusWithUnconfiguredContext",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testLoadNotPossible",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#htmlLong",
            "ch.qos.logback.classic.selector.ContextDetachingSCLTest#testDetachWithMissingContext",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverTest#testStopThrowsException",
            "ch.qos.logback.classic.spi.ContextListenerTest#testNotifyOnStopResistant",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testDetachAppenderByName",
            "ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverterTest#nested",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#timeoutPropertyShouldBeHonored",
            "ch.qos.logback.classic.turbo.DuplicateMessageFilterTest#memoryLoss",
            "ch.qos.logback.classic.MessageFormattingTest#testMessageConverter",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#mdc",
            "ch.qos.logback.core.helpers.ThrowableToStringArrayTest#nested",
            "ch.qos.logback.core.helpers.ThrowableToStringArrayTest#smoke",
            "ch.qos.logback.core.subst.ParserTest#defaultSeparatorOutsideOfAVariable",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testBuildEnvPropertiesWithNullProviderURL",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#smoke",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testNested",
            "ch.qos.logback.core.pattern.parser.ParserTest#lbcore193",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testCanAggregateComponent",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#statusListener",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#installFilter",
            "ch.qos.logback.core.pattern.parser.FormatInfoTest#testEndingInDot",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#testEvaluatorFilter",
            "ch.qos.logback.classic.LoggerContextTest#evaluatorMapPostReset",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithPrefix",
            "ch.qos.logback.classic.LoggerTest#testNoStart",
            "ch.qos.logback.classic.spi.ContextListenerTest#testNotifyOnStart",
            "ch.qos.logback.classic.net.SocketReceiverTest#testServerSlowToAcceptConnection",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testTail4",
            "ch.qos.logback.core.joran.SkippingInInterpreterTest#testSkippingRuntimeExInBadBegin",
            "ch.qos.logback.core.boolex.MatcherTest#testCaseInsensitive",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test2",
            "ch.qos.logback.core.net.server.ConcurrentServerRunnerTest#testRunManyClients",
            "ch.qos.logback.core.pattern.parser.FormatInfoTest#testMaxOnly",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyChronologSizeBasedRollover",
            "ch.qos.logback.core.rolling.RenameUtilTest#renameToNonExistingDirectory",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testNewAppender",
            "ch.qos.logback.classic.PatternLayoutTest#testEmptyPattern",
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRetainMatchingWithMatchingPattern",
            "ch.qos.logback.classic.net.server.RemoteAppenderStreamClientTest#testWithEnabledLevel",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#throwable_LBCLASSIC_155_I",
            "ch.qos.logback.core.spi.CyclicBufferTrackerTest#empty1",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyRolloverWithSecondPhase",
            "ch.qos.logback.core.pattern.parser.ParserTest#testFormattingInfo",
            "ch.qos.logback.core.rolling.helper.CompressTest#test2",
            "ch.qos.logback.core.util.DatePatternToRegexTest#withQuotes",
            "ch.qos.logback.classic.boolex.OnMarkerEvaluatorTest#nullMarkerInEvaluator",
            "ch.qos.logback.classic.jmx.JMXConfiguratorTest#getLoggerLevel_LBCLASSIC_78",
            "ch.qos.logback.classic.gaffer.PropertyUtilTest#smoke",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#includeScanViaInputStreamSuppliedConfigFile",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#jmxConfiguratorWithNonDefaultObjectName",
            "ch.qos.logback.core.subst.ParserTest#literal",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testComplexCollection",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldFailToStartWithoutValidRemoteHost",
            "ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBeanTest#testDefaults",
            "ch.qos.logback.core.joran.spi.CaseCombinatorTest#other",
            "ch.qos.logback.classic.LoggerTest#innerClass_II",
            "ch.qos.logback.classic.sift.MDCBasedDiscriminatorTest#smoke",
            "ch.qos.logback.classic.util.LoggerNameUtilTest#emptyStringShouldReturnAListContainingOneEmptyString",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#smoke",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#testShortName",
            "ch.qos.logback.core.joran.spi.ConfigurationWatchListTest#fileToURLAndBack",
            "ch.qos.logback.core.pattern.parser.ParserTest#testCompositeFormatting",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#withGZCompression_FileSet_NoRestart_5",
            "ch.qos.logback.core.joran.action.IncludeActionTest#basicResource",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRemoveMatchingWithNoPatterns",
            "ch.qos.logback.core.AsyncAppenderBaseTest#workerShouldStopEvenIfInterruptExceptionConsumedWithinSubappender",
            "ch.qos.logback.core.net.ssl.KeyStoreFactoryBeanTest#testDefaults",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#timestamp",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#lbclassic77Test",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#appenderRefSettingBySystemProperty",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#MANUAL_perfTest",
            "ch.qos.logback.classic.gaffer.PropertyUtilTest#empty",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticated",
            "ch.qos.logback.core.joran.action.IncludeActionTest#withCorruptFile",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testTail2",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testFileNotLoaded",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#nested",
            "ch.qos.logback.classic.PatternLayoutTest#testWithParenthesis",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#event",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#jmxConfiguratorWithNonDefaultContextName",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#multipleNesting",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testSuffix",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsErrorEnabledWithNoFilter",
            "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicyTest#testStringToLong",
            "ch.qos.logback.classic.LoggerSerializationTest#testCompatibilityWith_v1_0_11",
            "ch.qos.logback.classic.pattern.MDCConverterTest#testConvertWithMultipleEntries",
            "ch.qos.logback.core.rolling.MultiThreadedRollingTest#multiThreadedTimedBased",
            "ch.qos.logback.core.pattern.parser.ParserTest#testKeyword",
            "ch.qos.logback.classic.pattern.ConverterTest#testLineSeparator",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testFormat",
            "ch.qos.logback.core.joran.TrivialConfiguratorTest#illFormedXML",
            "ch.qos.logback.core.util.LocationUtilTest#testExplicitClasspathUrlWithLeadingSlash",
            "ch.qos.logback.core.util.OptionHelperTest#testSubstVarsContextOnly",
            "ch.qos.logback.classic.html.HTMLLayoutTest#testPresentationHeader",
            "ch.qos.logback.classic.MDCTest#test",
            "ch.qos.logback.classic.net.SyslogAppenderTest#LBCLASSIC_50",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testLoadFileWithPrerequisiteSubsitution",
            "ch.qos.logback.classic.pattern.ConverterTest#testClass",
            "ch.qos.logback.core.pattern.parser.FormatInfoTest#testBasic",
            "ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistryTest#smoke",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#receiver",
            "ch.qos.logback.classic.ScenarioBasedLoggerContextTest#testLen3",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scanWithResourceInclusion",
            "ch.qos.logback.core.net.ssl.KeyStoreFactoryBeanTest#testExplicitPassphrase",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldFailToStartWithUnresolvableRemoteHost",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testLiteral",
            "ch.qos.logback.core.joran.action.PropertyActionTest#noName",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testPrudentModeLogicalImplications",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testTriggeringPolicy",
            "ch.qos.logback.classic.LoggerTest#testEnabledX_Off",
            "ch.qos.logback.core.net.server.ConcurrentServerRunnerTest#testRunOneClient",
            "ch.qos.logback.core.encoder.ObjectEncodeDecodeTest#multipleBatches",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testFileSize",
            "ch.qos.logback.core.util.ContentTypeUtilTest#emptySubtype",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#withZipCompression_FileSet_NoRestart_7",
            "ch.qos.logback.core.pattern.parser.ParserTest#testOptions1",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#variable",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testgetClassNameViaImplicitRules",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testStartMinimalInfo",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#startMakesIsStartedReturnTrue",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testDeepSuffix",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#testLevelFilter",
            "ch.qos.logback.core.pattern.parser.ParserTest#testOptions0",
            "ch.qos.logback.classic.selector.ContextJNDISelectorTest#testGetExistingContext",
            "ch.qos.logback.core.util.ContentTypeUtilTest#smoke",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#nullMDC",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendLoggingEvent",
            "ch.qos.logback.core.appender.FileAppenderTest#testConfiguredAppender",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testOK",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetExcludedProtocols",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testOptions",
            "ch.qos.logback.core.joran.action.IncludeActionTest#optionalFile",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#smoke",
            "ch.qos.logback.classic.LoggerSerializationTest#basicSerialization",
            "ch.qos.logback.classic.net.SocketReceiverTest#testServerDropsConnection",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#marker",
            "ch.qos.logback.classic.net.JMSQueueAppenderTest#testStartFails",
            "ch.qos.logback.core.joran.implicitAction.ImplicitActionTest#nestedComplexCollection",
            "ch.qos.logback.core.net.ssl.KeyStoreFactoryBeanTest#testExplicitType",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testDefaultClassAnnonation",
            "ch.qos.logback.classic.LoggerContextTest#testLoggerX",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#bufferShouldBeResetBetweenMessages",
            "ch.qos.logback.classic.html.HTMLLayoutTest#testHeader",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#isNullForExistingSystemProperty",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#noCompression_FileSet_NoRestart_5",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#unsetDefaultValueProperty",
            "ch.qos.logback.core.joran.action.DefinePropertyActionTest#good",
            "ch.qos.logback.core.joran.event.SaxEventRecorderTest#test3",
            "ch.qos.logback.core.util.OptionHelperTest#testSubstVarsVariableNotClosed",
            "ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverterTest#nested",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#loggerLevelSettingBySystemProperty",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#flowingI",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#updatedMDC",
            "ch.qos.logback.core.status.StatusUtilTest#emptyStatusListShouldResultInNotFound",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#nearSimultaneousPutsShouldNotCauseConcurrentModificationException",
            "issues.logback811.LineNumTest#runMannually",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#encoderCharset",
            "ch.qos.logback.classic.db.DBAppenderIntegrationTest#sqlserver",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#loggerWithoutName",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#smokeII",
            "ch.qos.logback.core.rolling.RenameUtilTest#MANUAL_renamingOnDifferentVolumesOnWindows",
            "ch.qos.logback.core.joran.implicitAction.ImplicitActionTest#nestedComplex",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testLoadResourceWithPrerequisiteSubsitution",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.classic.db.DBAppenderIntegrationTest#postgres",
            "ch.qos.logback.classic.selector.ContextJNDISelectorTest#testCreateContext",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testStart",
            "ch.qos.logback.classic.joran.conditional.ConditionalTest#conditionalConsoleApp_IF_THEN_False",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingEventQuery",
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#zipped",
            "ch.qos.logback.core.pattern.parser.FormatInfoTest#testMinOnly",
            "ch.qos.logback.core.joran.TrivialConfiguratorTest#lbcore127",
            "ch.qos.logback.classic.LoggerTest#testEnabled_All",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsWarnEnabledWithYesFilter",
            "ch.qos.logback.core.read.CyclicBufferAppenderTest#genericGet",
            "ch.qos.logback.classic.turbo.MarkerFilterTest#testBasic",
            "ch.qos.logback.core.pattern.parser.ParserTest#testComposite",
            "ch.qos.logback.core.util.StatusPrinterTest#testWithException",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRemoveMatchingWithNoMatchingPattern",
            "ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverterTest#integration",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#loggerAdditivittWithEmptyList",
            "ch.qos.logback.core.sift.AppenderTrackerTest#smoke",
            "ch.qos.logback.classic.db.DBAppenderH2Test#withNullArgument",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testComposite",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#test3Dot",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldFailToStartWithNegativeQueueSize",
            "ch.qos.logback.core.joran.event.SaxEventRecorderTest#test2",
            "ch.qos.logback.classic.turbo.MarkerFilterTest#testNoMarker",
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#gz",
            "ch.qos.logback.classic.joran.EvaluatorJoranTest#testSimpleEvaluator",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#appender1",
            "ch.qos.logback.classic.sift.MDCBasedDiscriminatorTest#nullMDC",
            "ch.qos.logback.classic.ScenarioBasedLoggerContextTest#testLength_20000",
            "ch.qos.logback.core.spi.CyclicBufferTrackerTest#destroy",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetLoggingEventColumnName",
            "ch.qos.logback.classic.joran.conditional.ConditionalTest#conditionalInclusionWithInexistentFile",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testPropertyCollection",
            "ch.qos.logback.core.util.ContentTypeUtilTest#nullContext",
            "ch.qos.logback.classic.LoggerTest#innerClass_I",
            "ch.qos.logback.core.joran.action.DefinePropertyActionTest#noClass",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#nullMDC",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#noCompression_FileSet_StopRestart_4",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testWithNopEscape",
            "ch.qos.logback.classic.encoder.PatternLayoutEncoderTest#charset",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testWindowsLikeBackSlashes",
            "ch.qos.logback.core.subst.TokenizerTest#basicDefaultSeparator",
            "ch.qos.logback.classic.LoggerContextTest#testMultiLevel",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#testOneDot",
            "ch.qos.logback.classic.spi.PackagingDataCalculatorTest#noClassDefFoundError_LBCLASSIC_125Test",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnect",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#appenderWithEncoder",
            "ch.qos.logback.core.joran.SkippingInInterpreterTest#testSkippingRuntimeExInBadEnd",
            "ch.qos.logback.classic.util.ContextInitializerTest#autoConfigFromSystemProperties",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testLiteralWithPercent",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsDebugEnabledWithNoFilter",
            "ch.qos.logback.core.pattern.parser.FormatInfoTest#testRightPad",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testUnknownWord",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#level",
            "ch.qos.logback.classic.net.SyslogAppenderTest#large",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyCronologRollover",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test6",
            "ch.qos.logback.classic.turbo.lru.LRUCacheTest#ch.qos.logback.classic.turbo.lru.LRUCacheTest",
            "ch.qos.logback.core.util.OptionHelperTest#jackrabbit_standalone",
            "ch.qos.logback.core.joran.action.IncludeActionTest#noFileFound",
            "ch.qos.logback.core.joran.TrivialConfiguratorTest#inexistentFile",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testStartUserPass",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#literal",
            "ch.qos.logback.classic.pattern.MarkerConverterTest#testWithSeveralChildMarker",
            "ch.qos.logback.core.subst.ParserTest#literalWithAccolade0",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#nullMarker",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#onTheFly",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsEnabledForWithYesFilter",
            "ch.qos.logback.classic.LoggerContextTest#testEmpty",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#longTermFailure",
            "ch.qos.logback.core.util.LocationUtilTest#testExplicitClasspathUrlWithRootPath",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testBuildEnvProperties",
            "ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBeanTest#testExplicitAlgorithm",
            "ch.qos.logback.core.net.ssl.KeyStoreFactoryBeanTest#testPKCS12Type",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#withNullMarker_LBCORE_118",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testEscapeBothParentheses",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#whenNoPropertyIsDefined_ElseBranchIsEvaluated",
            "ch.qos.logback.classic.pattern.ConverterTest#testMDCConverter",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendThrowable",
            "ch.qos.logback.classic.issue.lbclassic203.ConcurrentSiftingTest#concurrentAccess",
            "ch.qos.logback.core.net.server.ServerSocketAppenderBaseFunctionalTest#testLogEventClient",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#compositedKeyword",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldFailToStartWithZeroQueueLength",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafe",
            "ch.qos.logback.classic.jmx.JMXConfiguratorTest#testNonRemovalOfPreviousIntanceFromTheContextListenerList",
            "ch.qos.logback.classic.PatternLayoutTest#testWithLettersComingFromLog4j",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#msgRegex",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#contextRename",
            "ch.qos.logback.core.util.OptionHelperTest#testSubstVarsRecursive",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testTail1",
            "ch.qos.logback.core.joran.action.PropertyActionTest#noAttributes",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyRolloverWithInactivity10",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#root_WithList",
            "ch.qos.logback.core.rolling.RenameUtilTest#MANUAL_renamingOnDifferentVolumesOnLinux",
            "ch.qos.logback.core.AsyncAppenderBaseTest#exceptionsShouldNotCauseHalting",
            "ch.qos.logback.classic.LoggerContextTest#testRootGetLogger",
            "ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBeanTest#testExplicitProvider",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyChronologSizeBasedRolloverWithSecondPhase",
            "ch.qos.logback.classic.LoggerContextTest#concurrentModification",
            "ch.qos.logback.classic.control.CLCTest#testCreation",
            "ch.qos.logback.classic.util.LoggerNameUtilTest#smoke0",
            "ch.qos.logback.core.pattern.parser.CompilerTest#testCompositeFormatting",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#testTurboDynamicThreshold",
            "ch.qos.logback.classic.selector.ContextJNDISelectorTest#defaultContext",
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#activeFileNameNotSet",
            "ch.qos.logback.classic.jmx.JMXConfiguratorTest#setLoggerLevel_LBCLASSIC_79",
            "ch.qos.logback.classic.LoggerContextTest#testNull",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#testSuffix",
            "ch.qos.logback.core.rolling.helper.RollingCalendarTest#testVaryingNumberOfHourlyPeriods",
            "ch.qos.logback.core.rolling.MultiThreadedRollingTest#multiThreadedSizeBased",
            "ch.qos.logback.core.joran.replay.FruitConfigurationTest#fruit1",
            "ch.qos.logback.core.ContextBaseTest#renameDefault",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testDetachAndStopAllAppenders",
            "ch.qos.logback.core.boolex.MatcherTest#testFullRegion",
            "ch.qos.logback.core.util.DatePatternToRegexTest#dot",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testLoadFile",
            "ch.qos.logback.core.BasicStatusManagerTest#smoke",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#asRegexByDate",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testPrefixSuffixInteraction1",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#autoscanShouldReconfigureOnFileChange",
            "ch.qos.logback.classic.net.SocketReceiverTest#testStartNoPort",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#noContextPropertyShouldBeDefinedIfSystemPropertyExists",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#appenderRolling",
            "ch.qos.logback.core.util.DatePatternToRegexTest#month",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#defaultLayoutRule",
            "ch.qos.logback.core.util.FileSizeTest#test",
            "ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverterTest#smoke",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#nestedVariable",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#removeForNullKeyTest",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#removeInexistentKey",
            "ch.qos.logback.core.subst.TokenizerTest#simleVariable",
            "ch.qos.logback.classic.PatternLayoutTest#testNoExeptionHandler",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#literalVariableLiteral",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testBuildEnvPropertiesWithPkgNull",
            "ch.qos.logback.classic.pattern.ConverterTest#testFileOfCaller",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#testPrefixSuffixInteraction2",
            "ch.qos.logback.core.util.LocationUtilTest#testExplicitClasspathUrlEmptyPath",
            "ch.qos.logback.core.rolling.helper.FileStoreUtilTest#filesOnSameFolderShouldBeOnTheSameFileStore",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldCleanupTasksWhenStopped",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#withDefaultValue",
            "ch.qos.logback.core.net.server.ConcurrentServerRunnerTest#testStartStop",
            "ch.qos.logback.classic.LoggerTest#testBasicFiltering",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#smoke",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#html",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#basicDailyRollover",
            "ch.qos.logback.classic.joran.EvaluatorJoranTest#testIgnoreMarker",
            "ch.qos.logback.classic.LoggerContextTest#testDotDot",
            "ch.qos.logback.classic.LoggerTest#testEnabled_Debug",
            "ch.qos.logback.core.subst.ParserTest#nested",
            "ch.qos.logback.core.subst.TokenizerTest#literalWithAccolades",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testFileShouldNotMatchFileNamePattern",
            "ch.qos.logback.core.pattern.SpacePadderTest#nullString",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsDebugEnabledWithYesFilter",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#throwable_LBCLASSIC_155_II",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#properties",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testSetComplexProperty",
            "ch.qos.logback.classic.PatternLayoutTest#contextNameTest",
            "ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverterTest#integration",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#stopFixedWindowRollingPolicy",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#synchronousSmoke",
            "ch.qos.logback.core.joran.action.IncludeActionTest#nestedInclude",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#contextName",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#appenderRefShouldWork",
            "ch.qos.logback.core.appender.FileAppenderTest#testNewAppender",
            "ch.qos.logback.classic.util.LoggerNameUtilTest#dotAtLastPositionShouldReturnAListWithAnEmptyStringAsLastElement",
            "ch.qos.logback.core.util.OptionHelperTest#testLiteral",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testgetComplexPropertyColleClassNameViaImplicitRules",
            "ch.qos.logback.core.joran.action.PropertyActionTest#testLoadResource",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test3",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testMultipleRecursion",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#loggerSetLevel",
            "ch.qos.logback.classic.db.DBAppenderIntegrationTest#oracle11g",
            "ch.qos.logback.core.joran.implicitAction.ImplicitActionTest#nestedComplexCollectionWithoutClassAtrribute",
            "ch.qos.logback.core.joran.spi.CaseCombinatorTest#smoke",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedSSL",
            "ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBeanTest#testDefaults",
            "ch.qos.logback.core.sift.AppenderTrackerTest#endOfLivedAppenderShouldBeAvailableDuringLingeringPeriod",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#nullSTE",
            "ch.qos.logback.core.sift.AppenderTrackerTest#findingTheInexistentShouldNotBomb",
            "ch.qos.logback.classic.util.ContextInitializerAutoConfigTest#autoconfig",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#sessionFinalizationShouldCauseLingering",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetWantClientAuth",
            "ch.qos.logback.classic.db.DBAppenderH2Test#testAppendMultipleEvents",
            "ch.qos.logback.core.net.server.RemoteReceiverStreamClientTest#testOfferEventSequenceAndRun",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testDuration",
            "ch.qos.logback.classic.LoggerTest#setRootLevelToNull",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#mdcAsString",
            "ch.qos.logback.core.encoder.ByteArrayUtilTest#random",
            "ch.qos.logback.classic.pattern.ConverterTest#testSyslogStart",
            "ch.qos.logback.core.util.FileUtilTest#checkParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.core.appender.DummyAppenderTest#testBasic",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#timestampWithContextBirthAsReference",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testEntryConditionsCheck",
            "ch.qos.logback.core.util.DurationTest#test",
            "ch.qos.logback.core.util.StringCollectionUtilTest#testRetainMatchingWithNoMatchingPattern",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#propertyCascading1",
            "ch.qos.logback.classic.MessageFormattingTest#testFormattingOneArg",
            "ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBeanTest#testExplicitAlgorithm",
            "ch.qos.logback.core.util.OptionHelperTest#testUndefinedValues",
            "ch.qos.logback.core.subst.ParserTest#literalWithTwoAccolades",
            "ch.qos.logback.core.joran.spi.SimpleRuleStoreTest#smoke",
            "ch.qos.logback.classic.PatternLayoutTest#testCompositePattern",
            "ch.qos.logback.core.util.TimeUtilTest#testDay",
            "ch.qos.logback.classic.LoggerTest#setLevelToNull_LBCLASSIC_91",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#additivity",
            "ch.qos.logback.core.OutputStreamAppenderTest#nullPresentationFooter",
            "ch.qos.logback.core.joran.action.PropertyActionTest#noValue",
            "ch.qos.logback.classic.pattern.ConverterTest#testMethodOfCaller",
            "ch.qos.logback.core.subst.TokenizerTest#nested",
            "ch.qos.logback.core.AsyncAppenderBaseTest#emptyQueueShouldBeStoppable",
            "ch.qos.logback.classic.jul.LevelChangePropagatorTest#smoke",
            "ch.qos.logback.core.net.server.RemoteReceiverStreamClientTest#testOfferEventAndRun",
            "ch.qos.logback.classic.LoggerContextTest#levelResetTest",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetIncludedProtocols",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testEscape",
            "ch.qos.logback.classic.util.LoggerNameUtilTest#smoke1",
            "ch.qos.logback.classic.db.DBAppenderIntegrationTest#oracle10g",
            "ch.qos.logback.core.ContextBaseTest#renameTest",
            "ch.qos.logback.core.subst.ParserTest#literalWithAccolade1",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#gafferInstallFilter",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldFailToStartWithoutValidPort",
            "ch.qos.logback.core.joran.conditional.IfThenElseAndIncludeCompositionTest#includeNestedWithinIf",
            "ch.qos.logback.classic.util.ContextInitializerTest#autoStatusListener",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#testPrefixMatch",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#propertyDefinedWithinSiftElementShouldBeVisible",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldHandleNullsAsEmptyStrings",
            "ch.qos.logback.classic.spi.ContextListenerTest#testNotifyOnStopNotResistant",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testtimeStamp",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#evaluatorWithMatcher",
            "ch.qos.logback.core.joran.action.DefinePropertyActionTest#testBadClass",
            "ch.qos.logback.core.sift.AppenderTrackerTest#trackerShouldHonorTimeoutParameter",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#html",
            "ch.qos.logback.core.net.ssl.SecureRandomFactoryBeanTest#testDefaults",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testStartFails",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#suppressedWithCause",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#whenLocalPropertyIsSet_IfThenBranchIsEvaluated",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#eval",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#literalWithNestedAccolades",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#testAppendWhenNotStarted",
            "ch.qos.logback.core.joran.event.InPlayFireTest#testReplay",
            "ch.qos.logback.core.helpers.FileFilterUtilTest#findHighestCounterTest",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testNullPattern",
            "ch.qos.logback.core.joran.TrivialConfiguratorTest#smoke",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails",
            "ch.qos.logback.core.net.ssl.KeyStoreFactoryBeanTest#testExplicitProvider",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testBogusExp2",
            "ch.qos.logback.core.spi.AppenderAttachableImplTest#testIteratorForAppenders",
            "ch.qos.logback.classic.spi.ThrowableProxyTest#suppressed",
            "ch.qos.logback.core.util.StatusPrinterTest#testBasic",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testEnum",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#sequenceWithGet",
            "ch.qos.logback.classic.net.JMSTopicAppenderTest#testBuildEnvPropertiesWithNullCredentials",
            "ch.qos.logback.classic.pattern.ConverterTest#testMessage",
            "ch.qos.logback.classic.net.SocketReceiverTest#testStartUnknownHost",
            "ch.qos.logback.classic.jmx.JMXConfiguratorTest#contextReset",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#stopTimeBasedRollingPolicy",
            "ch.qos.logback.classic.net.JMSQueueAppenderTest#testStartUserPass",
            "ch.qos.logback.core.AsyncAppenderBaseTest#smoke",
            "ch.qos.logback.classic.LoggerContextTest#resetTest",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testFilePropertyAfterRollingPolicy",
            "ch.qos.logback.classic.html.HTMLLayoutTest#testConversionRuleSupportInHtmlLayout",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#withSizeAndTimeBasedFNATP",
            "ch.qos.logback.classic.boolex.GEventEvaluatorTest#callerData",
            "ch.qos.logback.core.net.AbstractSocketAppenderTest#appenderShouldStartWithValidParameters",
            "ch.qos.logback.core.joran.event.SaxEventRecorderTest#test1",
            "ch.qos.logback.classic.db.DBAppenderH2Test#testAppendLoggingEvent",
            "ch.qos.logback.classic.turbo.MarkerFilterTest#testComposite",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#testMultipleTo",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableAndColumnNamesWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.html.HTMLLayoutTest#rawLimit",
            "ch.qos.logback.core.spi.ScenarioBasedCyclicBufferTrackerTest#longTest",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testPercentAsLiteral",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#onConsoleRetro",
            "ch.qos.logback.core.net.ssl.SecureRandomFactoryBeanTest#testUnknownProvider",
            "ch.qos.logback.core.spi.AppenderAttachableImplLockTest#getAppenderBoom",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testBasic",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#copyOnInheritenceTest",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#testTailMatch",
            "ch.qos.logback.classic.PatternLayoutTest#testNullPattern",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#scan",
            "ch.qos.logback.core.joran.util.PropertySetterTest#charset",
            "ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverterTest#smoke",
            "ch.qos.logback.classic.ScenarioBasedLoggerContextTest#testLengthLong",
            "ch.qos.logback.classic.db.DBAppenderIntegrationTest#mysql",
            "ch.qos.logback.core.appender.FileAppenderTest#testPrudentModeLogicalImplications",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailySizeBasedRollover",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithBothPrefixAndSuffix",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testConfiguredAppender",
            "ch.qos.logback.core.status.StatusBaseTest#testRemoveStatus",
            "ch.qos.logback.classic.html.HTMLLayoutTest#testDoLayout",
            "ch.qos.logback.classic.spi.PackagingDataCalculatorTest#nested",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#propertyCascading2",
            "ch.qos.logback.classic.PatternLayoutTest#testConversionRuleSupportInPatternLayout",
            "ch.qos.logback.classic.net.SyslogAppenderTest#suffixPatternWithTag",
            "ch.qos.logback.core.util.LocationUtilTest#testImplicitClasspathUrl",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#noCompression_FileBlank_NoRestart_1",
            "ch.qos.logback.core.spi.CyclicBufferTrackerTest#empty0",
            "ch.qos.logback.core.pattern.parser.SamplePatternLayoutTest#testUnStarted",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverTest#testStopWhenNotStarted",
            "ch.qos.logback.classic.spi.CallerDataTest#testBasic",
            "ch.qos.logback.core.subst.ParserTest#withColon",
            "ch.qos.logback.classic.net.server.SSLServerSocketReceiverTest#testGetServerSocketFactory",
            "ch.qos.logback.core.LifeCycleManagerTest#testRegisterAndReset",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverFunctionalTest#testLogEventFromClient",
            "ch.qos.logback.classic.net.JMSQueueAppenderTest#testAppendFailure",
            "ch.qos.logback.classic.pattern.ConverterTest#contextNameConverter",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testEntryConditionsCheckNoLayout",
            "ch.qos.logback.classic.rolling.UniqueFileTest#basic",
            "ch.qos.logback.classic.net.SyslogAppenderTest#basic",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetExcludedCipherSuites",
            "ch.qos.logback.classic.net.DilutedSMTPAppenderTest#testAppendNonTriggeringEvent",
            "ch.qos.logback.classic.spi.LoggingEventSerializationTest#context",
            "ch.qos.logback.classic.joran.conditional.ConditionalTest#conditionalConsoleApp_IF_THEN_True",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#cleanHistoryOnStart",
            "ch.qos.logback.classic.pattern.ConverterTest#testCallerData",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#localPropertiesShouldBeVisible",
            "ch.qos.logback.core.subst.TokenizerTest#colonFollowedByDollar",
            "ch.qos.logback.core.util.TimeUtilTest#testHour",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testPassDefaultNeedClientAuth",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testPassDefaultWantClientAuth",
            "ch.qos.logback.core.util.OptionHelperTest#testSubstVarsWithDefault",
            "ch.qos.logback.core.appender.FileAppenderTest#testNoStart",
            "ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviatorTest#testXDot",
            "ch.qos.logback.core.sift.AppenderTrackerTest#removeStaleComponentsShouldNotBomb",
            "ch.qos.logback.classic.util.ContextInitializerTest#reset",
            "ch.qos.logback.core.boolex.MatcherTest#testPartRegion",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testCustomEvaluator",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverTest#testStartStop",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#appender0",
            "ch.qos.logback.core.util.DatePatternToRegexTest#dayInWeek",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#sequenceWithGetPropertyMap",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#level",
            "ch.qos.logback.classic.pattern.ConverterTest#testLineOfCaller",
            "ch.qos.logback.core.joran.replay.FruitConfigurationTest#withSubst",
            "ch.qos.logback.core.status.StatusUtilTest#statusListShouldReturnLastResetTime",
            "ch.qos.logback.core.helpers.ThrowableToStringArrayTest#multiNested",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendMultipleEvents",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#isNullForExistingContextProperty",
            "ch.qos.logback.core.net.server.AbstractServerSocketAppenderTest#testStopWhenNotStarted",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#date",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testSingleLiteral",
            "ch.qos.logback.core.joran.replay.FruitConfigurationTest#fruit2",
            "ch.qos.logback.classic.PatternLayoutTest#replaceWithJoran",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testPrudentModeLogicalImplicationsOnCompression",
            "ch.qos.logback.classic.net.SocketReceiverTest#testStartStop",
            "ch.qos.logback.classic.LoggerContextDeadlockTest#testLBCLASSIC_81",
            "ch.qos.logback.core.joran.action.IncludeActionTest#malformedURL",
            "ch.qos.logback.core.rolling.RollingFileAppenderTest#testFilePropertyAfterTriggeringPolicy",
            "ch.qos.logback.classic.pattern.ConverterTest#testVeryLongLoggerName",
            "ch.qos.logback.core.net.server.SSLServerSocketAppenderBaseTest#testUsingDefaultConfig",
            "ch.qos.logback.core.ContextBaseTest#idempotentNameTest",
            "ch.qos.logback.core.subst.TokenizerTest#defaultSeparatorOutsideVariable",
            "ch.qos.logback.core.spi.AppenderAttachableImplLockTest#detachAppenderBoom",
            "ch.qos.logback.classic.LoggerSerializationTest#deepTreeSerialization",
            "ch.qos.logback.classic.PatternLayoutTest#testOK",
            "ch.qos.logback.classic.PatternLayoutTest#cnTest",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testBogusExp1",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#testLoop2",
            "ch.qos.logback.classic.net.SSLSocketReceiverTest#testUsingDefaultConfig",
            "ch.qos.logback.core.util.OptionHelperTest#testSubstVarsSystemProperties",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetIncludedAndExcludedProtocols",
            "ch.qos.logback.classic.gaffer.GafferConfiguratorTest#conversionRule",
            "ch.qos.logback.core.pattern.parser.ParserTest#testBasic",
            "ch.qos.logback.core.rolling.helper.CompressTest#test3",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withMissingTargetDirWithZipCompression",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testComplexNR",
            "ch.qos.logback.core.net.ssl.SSLContextFactoryBeanTest#testCreateDefaultContext",
            "ch.qos.logback.core.joran.conditional.IfThenElseTest#nestedIf",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertExceptionQuery",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#testSmoke",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testLoggingContextReset",
            "ch.qos.logback.classic.pattern.ConverterTest#testLevel",
            "ch.qos.logback.core.read.CyclicBufferAppenderTest#reset",
            "ch.qos.logback.core.rolling.helper.RollingCalendarTest#testPeriodicity",
            "ch.qos.logback.core.pattern.parser.OptionTokenizerTest#testEmpty",
            "ch.qos.logback.classic.net.JMSQueueAppenderTest#testAppendOk",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testSetCamelProperty",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#levelChangePropagator0",
            "ch.qos.logback.classic.MessageFormattingTest#testFormattingTwoArg",
            "ch.qos.logback.core.BasicStatusManagerTest#many",
            "ch.qos.logback.classic.pattern.MDCConverterTest#testConvertWithOneEntry",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsErrorEnabledWithDenyBlueFilter",
            "ch.qos.logback.core.net.ssl.SSLParametersConfigurationTest#testSetExcludedAndIncludedCipherSuites",
            "ch.qos.logback.classic.turbo.DuplicateMessageFilterTest#many",
            "ch.qos.logback.classic.pattern.ConverterTest#contextProperty",
            "ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP_Test#noCompression_FileBlank_WithStopStart_3",
            "ch.qos.logback.core.joran.spi.NoAutoStartUtilTest#commonObject",
            "ch.qos.logback.classic.joran.EvaluatorJoranTest#testMultipleConditionsInExpression",
            "ch.qos.logback.core.util.TimeUtilTest#testMonth",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithSuffix",
            "ch.qos.logback.classic.boolex.JaninoEventEvaluatorTest#evaluatorFilterWithNullMarker_LBCORE_118",
            "ch.qos.logback.core.joran.util.PropertySetterTest#testSetComplexWithCamelCaseName",
            "ch.qos.logback.classic.encoder.PatternLayoutEncoderTest#smoke",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#timeAndSize",
            "ch.qos.logback.classic.TurboFilteringInLoggerTest#testIsEnabledForWithNoFilter",
            "ch.qos.logback.core.joran.spi.ElementSelectorTest#test1",
            "ch.qos.logback.classic.html.HTMLLayoutTest#layoutWithException",
            "ch.qos.logback.classic.net.SyslogAppenderTest#tException",
            "ch.qos.logback.core.util.TimeUtilTest#testSecond",
            "ch.qos.logback.core.rolling.helper.FileNamePatternTest#asRegex",
            "ch.qos.logback.classic.turbo.DuplicateMessageFilterTest#nullFormat",
            "ch.qos.logback.core.subst.NodeToStringTransformerTest#LOGBACK744_withColon",
            "ch.qos.logback.core.joran.TrivialConfiguratorTest#lbcore105",
            "ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilderTest#inexistentPropertyShouldEvaluateToFalse",
            "ch.qos.logback.core.spi.CyclicBufferTrackerTest#smoke",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#contextAwareMixin",
            "ch.qos.logback.classic.jul.LevelChangePropagatorTest#root",
            "ch.qos.logback.classic.db.DBAppenderH2Test#testContextInfo",
            "ch.qos.logback.core.util.DatePatternToRegexTest#ISO8601",
            "ch.qos.logback.classic.gaffer.ConfigurationDelegateTest#loggerAdditivity",
            "ch.qos.logback.core.pattern.parser.TokenStreamTest#testSimpleP",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#testTurboFilterWithStringList",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestamp",
            "ch.qos.logback.core.joran.action.IncludeActionTest#unknownURL"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "ch.qos.logback.core.util.FileUtilTest#checkParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnect",
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#zipped",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingEventQuery",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingEventQuery",
            "ch.qos.logback.core.AsyncAppenderBaseTest#noEventLoss",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertExceptionQuery",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertExceptionQuery",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scan_LOGBACK_474",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableAndColumnNamesWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithPrefix",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.core.status.StatusUtilTest#statusListShouldReturnLastResetTime",
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldBeNonLossyIfDiscardingThresholdIsZero",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#levelChangePropagator1",
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithSuffix",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestampLocal",
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldOnlyLooseCertainEvents",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectEventually",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#autoscanShouldReconfigureOnFileChange",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#timeAndSize",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithBothPrefixAndSuffix",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithSuffix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldHandleNullsAsEmptyStrings",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetLoggingEventExceptionColumnName",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetTableName",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithPrefix",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#testWholeCycle",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#basic",
            "ch.qos.logback.core.FileAppenderResilienceTest#smoke",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#sessionFinalizationShouldCauseLingering",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.classic.rolling.UniqueFileTest#basic"
        ],
        "flaky_tests": [
            "ch.qos.logback.classic.net.SyslogAppenderTest#basic",
            "ch.qos.logback.core.util.FileUtilTest#basicCopyingWorks",
            "ch.qos.logback.core.rolling.TimeBasedRollingWithArchiveRemoval_Test#dailyRolloverWithInactivity10",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withMissingTargetDirWithZipCompression",
            "ch.qos.logback.classic.pattern.ConverterTest#testRelativeTime",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#LBCLASSIC_104",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scan_LOGBACK_474",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testCustomEvaluator",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#synchronousSmoke",
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#gafferInstallFilter",
            "ch.qos.logback.classic.sift.MDCBasedDiscriminatorTest#nullMDC",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.classic.spi.PackagingDataCalculatorTest#perfTest",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testCustomBufferSize",
            "ch.qos.logback.core.AsyncAppenderBaseTest#workerShouldStopEvenIfInterruptExceptionConsumedWithinSubappender",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafe",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails",
            "ch.qos.logback.core.FileAppenderResilienceTest#smoke",
            "ch.qos.logback.core.rolling.TimeBasedRollingTest#withMissingTargetDirWithCompression",
            "ch.qos.logback.classic.rolling.UniqueFileTest#basic"
        ],
        "tests": [],
        "od_tests": [
            "ch.qos.logback.classic.net.SyslogAppenderTest#basic",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedGmailStartTLS",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#smoke",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#html",
            "ch.qos.logback.classic.spi.LoggingEventSerializationPerfTest#testPerformanceWithParameters",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticated",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#LBCLASSIC_104",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendLoggingEvent",
            "ch.qos.logback.classic.LoggerContextTest#concurrentModification",
            "ch.qos.logback.classic.db.DBAppenderH2Test#testAppendLoggingEvent",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#testMultipleTo",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#callerDataShouldBeCorrectlySetWithAsynchronousSending",
            "ch.qos.logback.classic.net.SocketReceiverTest#testServerSlowToAcceptConnection",
            "ch.qos.logback.classic.net.SyslogAppenderTest#large",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedGmail_SSL",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testContextInfo",
            "ch.qos.logback.classic.net.SocketReceiverTest#testServerDropsConnection",
            "ch.qos.logback.classic.issue.lbclassic36.DateFormatOriginal_tzest#testSynchronized",
            "org.slf4j.test_osgi.BundleTest#testSmoke",
            "ch.qos.logback.classic.MDCTest#test",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#copyOnInheritenceTest",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#synchronousSmoke",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendMultipleEvents",
            "ch.qos.logback.classic.AsyncAppenderTest#eventWasPreparedForDeferredProcessing",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#bufferShouldBeResetBetweenMessages",
            "ch.qos.logback.classic.sift.MDCBasedDiscriminatorTest#nullMDC",
            "ch.qos.logback.classic.issue.lbclassic135.lbclassic139.LB139_DeadlockTest#test",
            "ch.qos.logback.classic.issue.lbclassic36.DateFormatOriginal_tzest#testUnSynchronized",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#html",
            "ch.qos.logback.classic.net.SocketReceiverTest#testStartStop",
            "ch.qos.logback.classic.LoggerContextDeadlockTest#testLBCLASSIC_81",
            "ch.qos.logback.classic.net.SyslogAppenderTest#tException",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#nearSimultaneousPutsShouldNotCauseConcurrentModificationException",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#authenticatedSSL",
            "ch.qos.logback.classic.db.DBAppenderHSQLTest#testAppendThrowable",
            "ch.qos.logback.classic.net.SyslogAppenderTest#suffixPatternWithTag",
            "ch.qos.logback.classic.spi.LoggingEventSerializationPerfTest#testPerformance",
            "ch.qos.logback.classic.net.SocketReceiverTest#testNoDispatchEventForDisabledLevel",
            "ch.qos.logback.classic.db.DBAppenderH2Test#emptyCallerDataShouldBeHandledGracefully",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#asynchronousSmoke",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafe",
            "ch.qos.logback.classic.net.SMTPAppender_SubethaSMTPTest#htmlLong",
            "ch.qos.logback.classic.net.server.ServerSocketReceiverFunctionalTest#testLogEventFromClient",
            "ch.qos.logback.classic.net.SSLSocketReceiverTest#testUsingDefaultConfig",
            "ch.qos.logback.classic.AsyncAppenderTest#settingIncludeCallerDataPropertyCausedCallerDataToBeIncluded",
            "ch.qos.logback.classic.net.SocketReceiverTest#testDispatchEventForEnabledLevel",
            "ch.qos.logback.classic.issue.lbclassic36.DateFormatOriginal_tzest#testThreadLocal",
            "ch.qos.logback.classic.net.SMTPAppender_GreenTest#testMultipleTo",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#clearOnChildThreadShouldNotAffectParent",
            "ch.qos.logback.classic.util.LogbackMDCAdapterTest#lbclassic77Test"
        ],
        "config_only_sleep_decrease": [
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.core.FileAppenderResilienceTest#smoke",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime"
        ],
        "config_only_random_max": [
            "ch.qos.logback.core.util.FileUtilTest#checkParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnect",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectEventually",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails"
        ],
        "config_only_sleep_increase": [
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldBeNonLossyIfDiscardingThresholdIsZero",
            "ch.qos.logback.core.AsyncAppenderBaseTest#noEventLoss",
            "ch.qos.logback.core.AsyncAppenderBaseTest#lossyAppenderShouldOnlyLooseCertainEvents",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scan_LOGBACK_474"
        ],
        "config_only_time_round": [
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#autoscanShouldReconfigureOnFileChange",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#testWholeCycle",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#sessionFinalizationShouldCauseLingering",
            "ch.qos.logback.core.status.StatusUtilTest#statusListShouldReturnLastResetTime",
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#scan_LOGBACK_474"
        ],
        "config_only_random_fix": [
            "ch.qos.logback.core.util.FileUtilTest#checkParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnect",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectEventually",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails"
        ],
        "config_only_locale_fix": [
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithSuffix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithPrefix",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingEventQuery",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingEventQuery",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnColumnNameWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetTableName",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithBothPrefixAndSuffix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithPrefix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableNameWithSuffix",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldHandleNullsAsEmptyStrings",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.classic.db.names.DefaultDBNameResolverTest#testGetLoggingEventExceptionColumnName",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnSimpleSqlInsertExceptionQuery",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertLoggingPropertyQuery",
            "ch.qos.logback.classic.db.SQLBuilderTest#shouldReturnDefaultSqlInsertExceptionQuery",
            "ch.qos.logback.classic.db.names.SimpleDBNameResolverTest#shouldReturnTableAndColumnNamesWithBothPrefixAndSuffix"
        ],
        "config_only_date_relative": [
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#zipped",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestampLocal"
        ],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#timeAndSize",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.rolling.TimeBasedRollingWithConfigFileTest#basic",
            "ch.qos.logback.core.status.StatusUtilTest#statusListShouldReturnLastResetTime",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#levelChangePropagator1",
            "ch.qos.logback.classic.rolling.UniqueFileTest#basic"
        ],
        "config_only_time_relative": [
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestampLocal",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#testWholeCycle",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#sessionFinalizationShouldCauseLingering"
        ],
        "config_only_random_min": [
            "ch.qos.logback.core.util.FileUtilTest#checkParentCreationInquiryAndSubsequentCreation",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnect",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectEventually",
            "ch.qos.logback.core.net.DefaultSocketConnectorTest#testConnectionFails"
        ],
        "config_only_sleep_random": [
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime"
        ],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [
            "ch.qos.logback.classic.turbo.ReconfigureOnChangeTest#fallbackToSafeWithIncludedFile",
            "ch.qos.logback.core.status.StatusUtilTest#statusListShouldReturnLastResetTime",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime"
        ],
        "config_only_time_slow": [
            "ch.qos.logback.core.recovery.ResilientOutputStreamTest#verifyRecuperationAfterFailure",
            "ch.qos.logback.core.recovery.RecoveryCoordinatorTest#actualTime",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#testWholeCycle",
            "ch.qos.logback.classic.sift.SiftingAppenderTest#sessionFinalizationShouldCauseLingering",
            "ch.qos.logback.classic.rolling.UniqueFileTest#basic"
        ],
        "config_only_fix_date": [
            "ch.qos.logback.core.rolling.SizeBasedRollingTest#zipped",
            "ch.qos.logback.classic.joran.JoranConfiguratorTest#timestampLocal"
        ],
        "config_only_date_bk": []
    },
    "jknack-handlebars.java": {
        "total_tests": [
            "com.github.jknack.handlebars.ContextTest#combine",
            "com.github.jknack.handlebars.EmptyTemplateTest#applyWithWriter",
            "handlebarsjs.spec.BlockHelperMissingTest#blockHelperCanTakeOptionalHashWithBooleans",
            "com.github.jknack.handlebars.ContextTest#noContext",
            "com.github.jknack.handlebars.io.FileLocatorTest#subFolder",
            "com.github.jknack.handlebars.IfBlockTest#truthy",
            "handlebarsjs.spec.BlockHelperMissingTest#whenInsideABlockInStringModePassesTheAppropriateContextInTheOptionsHash",
            "handlebarsjs.spec.BasicContextTest#pathsWithHyphens",
            "com.github.jknack.handlebars.ParsingErrorTest#unbalancedDelim",
            "com.github.jknack.handlebars.PropertyAccessTest#arrayAccess",
            "com.github.jknack.handlebars.ScalarContextTest#dontEscape[1]",
            "mustache.specs.SectionsTest#run[12]",
            "com.github.jknack.handlebars.io.FileLocatorTest#setBasePath",
            "com.github.jknack.handlebars.PseudoVarsTest#list",
            "com.github.jknack.handlebars.ContextTest#issue28",
            "mustache.specs.InvertedTest#run[20]",
            "com.github.jknack.handlebars.cache.ConcurrentMapCacheTest#putAndRemove",
            "com.github.jknack.handlebars.ParsingErrorTest#invalidChar",
            "com.github.jknack.handlebars.HelpersTest#run[0]",
            "com.github.jknack.handlebars.StringHelpersTest#joinIterator",
            "com.github.jknack.handlebars.ScalarContextTest#list[0]",
            "com.github.jknack.handlebars.StringHelpersTest#lower",
            "com.github.jknack.handlebars.Issue109#nullIfBlock",
            "mustache.specs.SectionsTest#run[19]",
            "com.github.jknack.handlebars.ContextTest#thisLookup",
            "mustache.specs.SectionsTest#run[6]",
            "handlebarsjs.spec.InvertedSectionTest#invertedSectionsWithEmptySet",
            "mustache.specs.DelimitersTest#run[6]",
            "mustache.specs.InterpolationTest#run[12]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperAWithOptions",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#resolveObjectNode",
            "com.github.jknack.handlebars.RawTextTest#blockHelper",
            "handlebarsjs.spec.BasicContextTest#escapingText",
            "mustache.specs.DelimitersTest#run[7]",
            "mustache.specs.DelimitersTest#run[1]",
            "handlebarsjs.spec.BlockTest#helperWithComplexLookup$",
            "com.github.jknack.handlebars.FalsyContextTest#anyContext",
            "mustache.specs.InvertedTest#run[12]",
            "com.github.jknack.handlebars.HelpersTest#run[12]",
            "handlebarsjs.spec.PartialsTest#partialWithLiteralPaths",
            "com.github.jknack.handlebars.HelperErrorTest#embedded",
            "com.github.jknack.handlebars.ArrayTest#eachArray",
            "mustache.specs.InterpolationTest#run[9]",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "com.github.jknack.handlebars.RawTextTest#section",
            "handlebarsjs.spec.BlockHelperMissingTest#helperCanTakeOptionalHash",
            "com.github.jknack.handlebars.StringHelpersTest#yesnoCustom",
            "com.github.jknack.handlebars.PathTest#paths",
            "mustache.specs.CommentsTest#run[4]",
            "mustache.specs.DelimitersTest#run[9]",
            "mustache.specs.InterpolationTest#run[28]",
            "mustache.specs.DelimitersTest#run[13]",
            "mustache.specs.SectionsTest#run[14]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testBlogTitle",
            "mustache.specs.SectionsTest#run[17]",
            "com.github.jknack.handlebars.RawTextTest#var",
            "com.github.jknack.handlebars.ParamHashTest#boolParam",
            "com.github.jknack.handlebars.io.FileLocatorTest#setBasePathWithDash",
            "com.github.jknack.handlebars.internal.HbsParserTest#hello",
            "com.github.jknack.handlebars.ContextTest#nullParent",
            "com.github.jknack.handlebars.HelpersTest#run[15]",
            "handlebarsjs.spec.BlockHelperMissingTest#argumentsToHelpersCanBeRetrievedFromOptionsHashInStringForm",
            "com.github.jknack.handlebars.Jackson2HelperTest#jsonViewNotFound",
            "com.github.jknack.handlebars.internal.CustomDelimiterTest#block",
            "com.github.jknack.handlebars.io.FileLocatorTest#failLocate",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[3]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testBlog",
            "handlebarsjs.spec.HelperHashTest#inCaseOsfConflictTheExplicitHashWins",
            "com.github.jknack.handlebars.ParamHashTest#referenceHash",
            "mustache.specs.InterpolationTest#run[24]",
            "com.github.jknack.handlebars.ParsingErrorTest#tvarDelim",
            "com.github.jknack.handlebars.RawTextTest#helper",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[5]",
            "com.github.jknack.handlebars.Issue133#issue133",
            "mustache.specs.InterpolationTest#run[4]",
            "com.github.jknack.handlebars.ScalarContextTest#quoteHash[1]",
            "mustache.specs.InterpolationTest#run[23]",
            "com.github.jknack.handlebars.StringHelpersTest#yesno",
            "com.github.jknack.handlebars.I18NHelperTest#formattedMsg",
            "mustache.specs.InterpolationTest#run[14]",
            "mustache.specs.DelimitersTest#run[12]",
            "handlebarsjs.spec.BasicContextTest#zeros",
            "com.github.jknack.handlebars.ScalarContextTest#quoteParam[0]",
            "handlebarsjs.spec.InvertedSectionTest#invertedSectionsWithFalseValue",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperWithParamsAndOptions",
            "com.github.jknack.handlebars.HelpersTest#run[8]",
            "mustache.specs.SectionsTest#run[0]",
            "com.github.jknack.handlebars.HumanizeHelperTest#decamelize",
            "mustache.specs.DelimitersTest#run[5]",
            "com.github.jknack.handlebars.Issue109#nullElseBlock",
            "mustache.specs.LambdasTest#run[8]",
            "com.github.jknack.handlebars.StringHelpersTest#stripTags",
            "com.github.jknack.handlebars.DateFormatTest#shortFormat",
            "handlebarsjs.spec.BlockTest#blockInvertedSections",
            "com.github.jknack.handlebars.internal.HbsParserTest#ampvar",
            "com.github.jknack.handlebars.ScalarContextTest#dontEscape[0]",
            "com.github.jknack.handlebars.DateFormatTest#pattern",
            "mustache.specs.InvertedTest#run[4]",
            "handlebarsjs.spec.BlockTest#blockWithComplexLookup",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#resolveSimpleArrayNode",
            "com.github.jknack.handlebars.internal.HbsParserTest#newlines",
            "mustache.specs.SectionsTest#run[7]",
            "mustache.specs.LambdasTest#run[9]",
            "com.github.jknack.handlebars.HumanizeHelperTest#formatCurrency_en_GB",
            "com.github.jknack.handlebars.ParamHashTest#charsHash",
            "com.github.jknack.handlebars.ScalarContextTest#string[0]",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#propertySet",
            "com.github.jknack.handlebars.HumanizeHelperTest#metricPrefix",
            "com.github.jknack.handlebars.EmptyTemplateTest#apply",
            "com.github.jknack.handlebars.internal.CustomDelimiterTest#variable",
            "com.github.jknack.handlebars.ParamHashTest#intHash",
            "mustache.specs.DelimitersTest#run[11]",
            "com.github.jknack.handlebars.SwitchPartialContextTest#switchPartialContext",
            "com.github.jknack.handlebars.ContextTest#newContext",
            "com.github.jknack.handlebars.Issue109#emptyStringIfBlock",
            "mustache.specs.LambdasTest#run[0]",
            "com.github.jknack.handlebars.ParamHashTest#falsyParam",
            "handlebarsjs.spec.BasicContextTest#functions",
            "com.github.jknack.handlebars.StringHelpersTest#defaultStr",
            "com.github.jknack.handlebars.PseudoVarsTest#lostParent$51",
            "com.github.jknack.handlebars.ValueResolverTest#propagateValueResolverToChild",
            "com.github.jknack.handlebars.HelperErrorTest#notfound",
            "mustache.specs.InterpolationTest#run[15]",
            "handlebarsjs.spec.BasicContextTest#compilingWithBasicContext",
            "handlebarsjs.spec.BlockTest#blockHelperInvertedSections",
            "handlebarsjs.spec.BlockHelperMissingTest#overrideInheritedDataWhenInvokingHelperWithDepth",
            "mustache.specs.InvertedTest#run[2]",
            "com.github.jknack.handlebars.StringHelpersTest#joinValues",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[2]",
            "mustache.specs.InterpolationTest#run[20]",
            "com.github.jknack.handlebars.I18NHelperTest#missingBundle",
            "com.github.jknack.handlebars.ContextTest#customLookup",
            "handlebarsjs.spec.BasicContextTest#functionReturningSafeStringsShouldnotBeEscaped",
            "handlebarsjs.spec.BasicContextTest#complexButEmptyPaths",
            "mustache.specs.InvertedTest#run[11]",
            "com.github.jknack.handlebars.StringHelpersTest#joinIterable",
            "com.github.jknack.handlebars.TemplateNotFoundTest#templateNotFound",
            "com.github.jknack.handlebars.HelperMissingTest#helperMissingFail",
            "handlebarsjs.spec.BasicContextTest#comments",
            "mustache.specs.PartialsTest#run[6]",
            "com.github.jknack.handlebars.ParsingErrorTest#tvar",
            "com.github.jknack.handlebars.HelpersTest#run[14]",
            "com.github.jknack.handlebars.HelpersTest#run[11]",
            "mustache.specs.SectionsTest#run[23]",
            "com.github.jknack.handlebars.I18NHelperTest#defaultI18nJs",
            "com.github.jknack.handlebars.ContextTest#combineNested",
            "com.github.jknack.handlebars.TypeSafeTemplateTest#genericTypeSafe",
            "com.github.jknack.handlebars.ParsingErrorTest#idx1",
            "handlebarsjs.spec.PartialsTest#partialPrecedingSelector",
            "com.github.jknack.handlebars.HelperMissingTest#helperMissingOverride",
            "mustache.specs.InterpolationTest#run[5]",
            "com.github.jknack.handlebars.internal.HbsParserTest#hash",
            "handlebarsjs.spec.BlockHelperMissingTest#passingInDataWorksWithBlockHelpersThatUsePaths",
            "com.github.jknack.handlebars.custom.CustomObjectTest#run[0]",
            "com.github.jknack.handlebars.ParsingErrorTest#correctPath",
            "mustache.specs.PartialsTest#run[5]",
            "mustache.specs.CommentsTest#run[10]",
            "mustache.specs.InvertedTest#run[18]",
            "com.github.jknack.handlebars.RawTextTest#partial",
            "com.github.jknack.handlebars.HumanizeHelperTest#formatCurrency_es_AR",
            "com.github.jknack.handlebars.ParsingErrorTest#block",
            "mustache.specs.SectionsTest#run[3]",
            "com.github.jknack.handlebars.ScalarContextTest#ch[0]",
            "handlebarsjs.spec.BlockTest#helperWithComplexLookupAndNestedTemplate",
            "mustache.specs.InterpolationTest#run[26]",
            "mustache.specs.InvertedTest#run[16]",
            "com.github.jknack.handlebars.HelpersTest#run[16]",
            "com.github.jknack.handlebars.ScalarContextTest#safeString[0]",
            "mustache.specs.InterpolationTest#run[0]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperWithParams",
            "com.github.jknack.handlebars.Issue109#nullMustacheBlock",
            "mustache.specs.DelimitersTest#run[10]",
            "com.github.jknack.handlebars.HelperMissingTest#blockHelperMissingOk",
            "com.github.jknack.handlebars.ScalarContextTest#array[1]",
            "com.github.jknack.handlebars.InheritanceTest#inheritance[2]",
            "com.github.jknack.handlebars.ScalarContextTest#quoteParam[1]",
            "com.github.jknack.handlebars.internal.HbsParserTest#partial",
            "handlebarsjs.spec.BlockHelperMissingTest#ifContextIsNotFoundHelperMissingIsUsed",
            "mustache.specs.SectionsTest#run[11]",
            "mustache.specs.CommentsTest#run[2]",
            "com.github.jknack.handlebars.ValueResolverTest#mapResolver",
            "mustache.specs.LambdasTest#run[3]",
            "handlebarsjs.spec.BlockHelperMissingTest#deepAnnotationTriggersAutomaticTopLevelData",
            "com.github.jknack.handlebars.ParsingErrorTest#stackoverflow",
            "mustache.specs.InterpolationTest#run[18]",
            "mustache.specs.SectionsTest#run[1]",
            "com.github.jknack.handlebars.io.FileLocatorTest#locate",
            "com.github.jknack.handlebars.HelpersTest#run[10]",
            "com.github.jknack.handlebars.ScalarContextTest#quoteHash[0]",
            "mustache.specs.PartialsTest#run[4]",
            "com.github.jknack.handlebars.StringHelpersTest#rjustWithPad",
            "mustache.specs.InterpolationTest#run[17]",
            "mustache.specs.InvertedTest#run[8]",
            "mustache.specs.DelimitersTest#run[2]",
            "mustache.specs.SectionsTest#run[18]",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[4]",
            "com.github.jknack.handlebars.StringHelpersTest#joinWithPrefixAndSuffix",
            "handlebarsjs.spec.StringLiteralParametersTest#blockMultiParamsWork",
            "handlebarsjs.spec.BlockHelperMissingTest#passingInDataWorksWithBlockHelpersWhereChildrenUsePaths",
            "handlebarsjs.spec.BlockTest#blockHelperForUndefinedValue",
            "com.github.jknack.handlebars.I18NHelperTest#defaultI18N",
            "com.github.jknack.handlebars.ParsingErrorTest#ampvar",
            "mustache.specs.PartialsTest#run[3]",
            "com.github.jknack.handlebars.springmvc.HandlebarsViewTest#renderMergedTemplateModel",
            "com.github.jknack.handlebars.ScalarContextTest#bool[1]",
            "com.github.jknack.handlebars.HelpersTest#run[17]",
            "mustache.specs.SectionsTest#run[20]",
            "com.github.jknack.handlebars.HelperMissingTest#blockHelperMissingOverride",
            "handlebarsjs.spec.BlockHelperMissingTest#passingInDataWorksWithBlockHelpers",
            "mustache.specs.SectionsTest#run[16]",
            "com.github.jknack.handlebars.StringHelpersTest#cutNoWhitespace",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#defaultLoad",
            "com.github.jknack.handlebars.ValueResolverTest#methodResolver",
            "mustache.specs.InterpolationTest#run[6]",
            "com.github.jknack.handlebars.ScalarContextTest#chHtml[0]",
            "com.github.jknack.handlebars.Issue109#emptyStringElseBlock",
            "com.github.jknack.handlebars.JacksonHelperTest#jsonViewNotFound",
            "com.github.jknack.handlebars.StringHelpersTest#capitalize",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalDay",
            "com.github.jknack.handlebars.FalsyContextTest#emptyContext",
            "com.github.jknack.handlebars.ValueResolverTest#javaBeanResolver",
            "com.github.jknack.handlebars.HelpersTest#run[18]",
            "com.github.jknack.handlebars.Jackson2HelperTest#toJSONAliasViewExclusive",
            "com.github.jknack.handlebars.RawTextTest#invertedEmptySection",
            "com.github.jknack.handlebars.InheritanceTest#inheritance[0]",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[0]",
            "com.github.jknack.handlebars.ParsingErrorTest#idx3",
            "handlebarsjs.spec.BasicContextTest#thisKeywordInHelpers",
            "handlebarsjs.spec.BlockHelperMissingTest#ifHelper",
            "com.github.jknack.handlebars.HumanizeHelperTest#transliterate",
            "com.github.jknack.handlebars.StringHelpersTest#joinArray",
            "com.github.jknack.handlebars.ScalarContextTest#htmlString[1]",
            "com.github.jknack.handlebars.HumanizeHelperTest#pluralize",
            "com.github.jknack.handlebars.ParsingErrorTest#level2",
            "com.github.jknack.handlebars.ParamHashTest#referenceParam",
            "com.github.jknack.handlebars.PropertyAccessTest#listAccess",
            "com.github.jknack.handlebars.HandlebarsErrorTest#properties",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#subFolderwithDashAtBeginning",
            "mustache.specs.SectionsTest#run[10]",
            "com.github.jknack.handlebars.springmvc.SpringTemplateLoaderTest#load",
            "handlebarsjs.spec.PartialsTest#basicPartials",
            "com.github.jknack.handlebars.DateFormatTest#longFormat",
            "mustache.specs.InterpolationTest#run[29]",
            "mustache.specs.CommentsTest#run[0]",
            "mustache.specs.PartialsTest#run[0]",
            "com.github.jknack.handlebars.ContextTest#nestedMapLookup",
            "com.github.jknack.handlebars.EachKeyTest#eachKeyWithJavaBean",
            "com.github.jknack.handlebars.ScalarContextTest#safeString[1]",
            "com.github.jknack.handlebars.internal.TextTest#newTextFail",
            "com.github.jknack.handlebars.ParsingErrorTest#paramOutOfOrder",
            "mustache.specs.CommentsTest#run[3]",
            "com.github.jknack.handlebars.HumanizeHelperTest#formatPercent",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[2]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperA",
            "com.github.jknack.handlebars.ValueResolverTest#fieldResolver",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[3]",
            "mustache.specs.InterpolationTest#run[2]",
            "mustache.specs.CommentsTest#run[6]",
            "com.github.jknack.handlebars.ParsingErrorTest#level1",
            "mustache.specs.InterpolationTest#run[25]",
            "com.github.jknack.handlebars.HumanizeHelperTest#wordWrap",
            "com.github.jknack.handlebars.StringHelpersTest#center",
            "handlebarsjs.spec.BlockTest#arrayWithIndex",
            "com.github.jknack.handlebars.StringHelpersTest#stringDecimalFormat",
            "mustache.specs.LambdasTest#run[5]",
            "com.github.jknack.handlebars.PropertyAccessTest#arrayIndexOutOfBounds",
            "mustache.specs.InterpolationTest#run[21]",
            "com.github.jknack.handlebars.ScalarContextTest#string[1]",
            "handlebarsjs.spec.StringLiteralParametersTest#simpleLiteralWork",
            "handlebarsjs.spec.BlockHelperMissingTest#blockHelperCanTakeOptionalHashWithSingleQuotedStrings",
            "com.github.jknack.handlebars.RawTextTest#plainText",
            "com.github.jknack.handlebars.StringHelpersTest#ljust",
            "com.github.jknack.handlebars.ParamHashTest#intParam",
            "mustache.specs.InvertedTest#run[7]",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[5]",
            "mustache.specs.InvertedTest#run[10]",
            "com.github.jknack.handlebars.ParamHashTest#truthParam",
            "com.github.jknack.handlebars.DateFormatTest#frLocale",
            "com.github.jknack.handlebars.TypeSafeTemplateTest#noHandlerMethod2",
            "mustache.specs.CommentsTest#run[1]",
            "com.github.jknack.handlebars.ParsingErrorTest#iblock",
            "com.github.jknack.handlebars.ParamHashTest#boolHash",
            "com.github.jknack.handlebars.ValueResolverTest#propagateValueResolverToChildAndExtended",
            "handlebarsjs.spec.BlockTest#array",
            "com.github.jknack.handlebars.StringHelpersTest#centerWithPad",
            "com.github.jknack.handlebars.custom.CustomObjectTest#run[1]",
            "com.github.jknack.handlebars.MissingValueResolverTest#useMissingValue",
            "mustache.specs.LambdasTest#run[7]",
            "handlebarsjs.spec.BlockHelperMissingTest#scopedNamesTakePrecedenceOverBlockHelpers",
            "handlebarsjs.spec.BasicContextTest#escapingExpressions",
            "handlebarsjs.spec.BasicContextTest#thatCurrentContextPathDoesnotHitHelpers",
            "com.github.jknack.handlebars.JacksonHelperTest#toJSONViewExclusive",
            "com.github.jknack.handlebars.ParsingErrorTest#partialName",
            "com.github.jknack.handlebars.JacksonHelperTest#toJSONViewInclusive",
            "mustache.specs.InvertedTest#run[1]",
            "com.github.jknack.handlebars.HumanizeHelperTest#ordinal",
            "mustache.specs.PartialsTest#run[7]",
            "mustache.specs.SectionsTest#run[24]",
            "com.github.jknack.handlebars.MustacheTest#demo",
            "com.github.jknack.handlebars.HelperMissingTest#helperMissingOk",
            "com.github.jknack.handlebars.HelperMissingTest#blockHelperMissingFail",
            "com.github.jknack.handlebars.ParsingErrorTest#ampvarDelim",
            "handlebarsjs.spec.BlockHelperMissingTest#dataCanBeLookupViaAnnotation",
            "com.github.jknack.handlebars.FalsyContextTest#emptyList",
            "com.github.jknack.handlebars.ContextTest#singleMapLookup",
            "mustache.specs.InterpolationTest#run[11]",
            "com.github.jknack.handlebars.JacksonHelperTest#toJSON",
            "com.github.jknack.handlebars.ContextTest#customLookupOnChildClass",
            "com.github.jknack.handlebars.Issue123#spacesInBlock",
            "com.github.jknack.handlebars.ScalarContextTest#htmlString[0]",
            "com.github.jknack.handlebars.IfBlockTest#falsy",
            "com.github.jknack.handlebars.StringHelpersTest#wordWrap",
            "handlebarsjs.spec.BlockTest#blockHelperShouldHaveContextInThis",
            "com.github.jknack.handlebars.SafeStringTest#hashcode",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#subFolderwithDashAtBeginning",
            "mustache.specs.InterpolationTest#run[1]",
            "mustache.specs.LambdasTest#run[1]",
            "com.github.jknack.handlebars.internal.CustomDelimiterTest#tripleVariable",
            "com.github.jknack.handlebars.ContextTest#parentContext",
            "com.github.jknack.handlebars.I18NHelperTest#missingKeyError",
            "com.github.jknack.handlebars.HelpersTest#run[5]",
            "com.github.jknack.handlebars.PrecompileHelperTest#precompile[0]",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#subFolder",
            "mustache.specs.InterpolationTest#run[19]",
            "handlebarsjs.spec.BlockHelperMissingTest#whenInsideABlockInStringModePassesTheAppropriateContextInTheOptionsHashToABlockHelper",
            "com.github.jknack.handlebars.internal.HbsParserTest#text",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#setBasePathWithDashDash",
            "mustache.specs.InvertedTest#run[6]",
            "com.github.jknack.handlebars.ScalarContextTest#decimal[0]",
            "mustache.specs.PartialsTest#run[8]",
            "mustache.specs.InterpolationTest#run[27]",
            "com.github.jknack.handlebars.ArrayTest#objectArray",
            "com.github.jknack.handlebars.PropertyAccessTest#falsyArrayAccess",
            "com.github.jknack.handlebars.EmbeddedHelperTest#embeddedWithId",
            "com.github.jknack.handlebars.TemplateNotFoundTest#partialNotFound",
            "com.github.jknack.handlebars.StringHelpersTest#stripTagsMultiLine",
            "com.github.jknack.handlebars.RawTextTest#invertedSection",
            "handlebarsjs.spec.BlockHelperMissingTest#passingInDataWorksWithHelpersInPartials",
            "com.github.jknack.handlebars.HelpersTest#run[1]",
            "com.github.jknack.handlebars.ScalarContextTest#list[1]",
            "com.github.jknack.handlebars.StringHelpersTest#capFirst",
            "handlebarsjs.spec.StringLiteralParametersTest#simpleMultiParamsWork",
            "com.github.jknack.handlebars.internal.TextTest#newText",
            "mustache.specs.SectionsTest#run[21]",
            "com.github.jknack.handlebars.HumanizeHelperTest#binaryPrefix",
            "mustache.specs.SectionsTest#run[2]",
            "com.github.jknack.handlebars.HumanizeHelperTest#titleize",
            "com.github.jknack.handlebars.internal.HbsParserTest#tvar",
            "com.github.jknack.handlebars.Issue42#issue42",
            "handlebarsjs.spec.BlockTest#blockWithDeepNestedComplexLookup",
            "mustache.specs.InvertedTest#run[13]",
            "mustache.specs.SectionsTest#run[4]",
            "com.github.jknack.handlebars.ParsingErrorTest#partialName2",
            "handlebarsjs.spec.BlockTest#helperWithComplexLookupExpression",
            "com.github.jknack.handlebars.StringHelpersTest#slugify",
            "com.github.jknack.handlebars.StringHelpersTest#rjust",
            "mustache.specs.InterpolationTest#run[3]",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperAWithContext",
            "com.github.jknack.handlebars.HumanizeHelperTest#slugify",
            "handlebarsjs.spec.StringLiteralParametersTest#usingQuoteInTheMiddleOfParameterRaisesAnError",
            "com.github.jknack.handlebars.EachKeyTest#eachKeyWithString",
            "handlebarsjs.spec.StringLiteralParametersTest#escapingAStringIsPossible",
            "com.github.jknack.handlebars.cache.ConcurrentMapCacheTest#clear",
            "com.github.jknack.handlebars.ParsingErrorTest#delim",
            "com.github.jknack.handlebars.RawTextTest#emptySection",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#setBasePath",
            "com.github.jknack.handlebars.PropertyAccessTest#ifArrayAccess",
            "handlebarsjs.spec.BlockHelperMissingTest#dataIsInheritedDownstream",
            "com.github.jknack.handlebars.JacksonHelperTest#toJSONAliasViewExclusive",
            "mustache.specs.CommentsTest#run[8]",
            "handlebarsjs.spec.PartialsTest#partialsWithContext",
            "com.github.jknack.handlebars.Jackson2HelperTest#toJSONViewInclusive",
            "com.github.jknack.handlebars.Issue109#emptyStringMustacheBlock",
            "com.github.jknack.handlebars.SwitchPartialContextTest#partialWithContext",
            "com.github.jknack.handlebars.EmptyTemplateTest#text",
            "handlebarsjs.spec.StringLiteralParametersTest#itWorksWithSingleQoutes",
            "mustache.specs.CommentsTest#run[9]",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[6]",
            "com.github.jknack.handlebars.TypeSafeTemplateTest#customTypeSafe2",
            "com.github.jknack.handlebars.HelpersTest#run[6]",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#setBasePathWithDashDash",
            "com.github.jknack.handlebars.I18NHelperTest#setCustomLocale",
            "handlebarsjs.spec.InvertedSectionTest#invertedSectionsWithUnsetValue",
            "com.github.jknack.handlebars.ParamHashTest#stringParam",
            "mustache.specs.InvertedTest#run[5]",
            "mustache.specs.InvertedTest#run[9]",
            "mustache.specs.CommentsTest#run[7]",
            "com.github.jknack.handlebars.Issue95#issue95",
            "com.github.jknack.handlebars.ScopeTest#currentScope",
            "mustache.specs.PartialsTest#run[9]",
            "com.github.jknack.handlebars.internal.TextTest#newTextSequence",
            "handlebarsjs.spec.BasicContextTest#nestedPaths",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#locate",
            "com.github.jknack.handlebars.ScalarContextTest#array[0]",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#subFolder",
            "mustache.specs.LambdasTest#run[2]",
            "handlebarsjs.spec.PartialsTest#renderingUndefinedPartialThrowsException",
            "com.github.jknack.handlebars.TypeSafeTemplateTest#customTypeSafe",
            "mustache.specs.SectionsTest#run[22]",
            "com.github.jknack.handlebars.HelpersTest#run[2]",
            "handlebarsjs.spec.BlockTest#blockHelperPassingNewContext",
            "mustache.specs.InvertedTest#run[0]",
            "mustache.specs.DelimitersTest#run[4]",
            "com.github.jknack.handlebars.PrecompileHelperTest#precompile[2]",
            "com.github.jknack.handlebars.InheritanceTest#inheritance[1]",
            "com.github.jknack.handlebars.Issue109#noEmptyStringElseBlock",
            "handlebarsjs.spec.HelperHashTest#providingHelperHash",
            "handlebarsjs.spec.BlockHelperMissingTest#eachWithJavaBean",
            "handlebarsjs.spec.BlockTest#emptyBlock",
            "mustache.specs.PartialsTest#run[10]",
            "handlebarsjs.spec.HelperHashTest#theHelpersClassIsAvailableInNestedContexts",
            "handlebarsjs.spec.BasicContextTest#bool",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#resolveArrayNode",
            "com.github.jknack.handlebars.internal.HbsParserTest#comments",
            "com.github.jknack.handlebars.EachKeyTest#eachKeyWithHash",
            "com.github.jknack.handlebars.internal.CustomDelimiterTest#variableUnescaped",
            "handlebarsjs.spec.BlockHelperMissingTest#with",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest",
            "com.github.jknack.handlebars.ReflectiveHelperTest#testHelperAWithConextAndOptions",
            "com.github.jknack.handlebars.ParamHashTest#truthHash",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[1]",
            "com.github.jknack.handlebars.ArrayTest#letterArray",
            "com.github.jknack.handlebars.StringHelpersTest#upper",
            "mustache.specs.DelimitersTest#run[0]",
            "handlebarsjs.spec.BlockTest#nestedBlockHelpers",
            "handlebarsjs.spec.BlockHelperMissingTest#whenUsingBlockFormArgumentsToHelpersCanBeRetrievedFromOptionsHashInStringForm",
            "handlebarsjs.spec.BlockHelperMissingTest#helperCanTakeOptionalHashWithBooleans",
            "com.github.jknack.handlebars.HelpersTest#run[3]",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#setBasePath",
            "com.github.jknack.handlebars.io.FileLocatorTest#subFolderwithDashAtBeginning",
            "mustache.specs.InterpolationTest#run[30]",
            "com.github.jknack.handlebars.ParamHashTest#stringHash",
            "mustache.specs.SectionsTest#run[15]",
            "com.github.jknack.handlebars.Issue123#spacesInVar",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[0]",
            "com.github.jknack.handlebars.io.ClasspathLocatorTest#failLocate",
            "com.github.jknack.handlebars.internal.HbsParserTest#unless",
            "com.github.jknack.handlebars.PropertyAccessTest#listIndexOutOfBounds",
            "com.github.jknack.handlebars.Jackson2HelperTest#toJSONViewExclusive",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#emptyPropertySet",
            "com.github.jknack.handlebars.MissingValueResolverTest#throwExceptionOnMissingValue",
            "com.github.jknack.handlebars.HelperErrorTest#notfoundblock",
            "com.github.jknack.handlebars.EmptyTemplateTest#toJs",
            "com.github.jknack.handlebars.HelpersTest#run[4]",
            "com.github.jknack.handlebars.ParamHashTest#falsyHash",
            "handlebarsjs.spec.BlockTest#blockInvertedSectionsWithEmptyArrays",
            "com.github.jknack.handlebars.SafeStringTest#equals",
            "com.github.jknack.handlebars.ParsingErrorTest#missingId",
            "com.github.jknack.handlebars.ValueResolverTest#multipleValueResolvers",
            "com.github.jknack.handlebars.ScalarContextTest#decimal[1]",
            "mustache.specs.InterpolationTest#run[7]",
            "mustache.specs.PartialsTest#run[1]",
            "com.github.jknack.handlebars.io.ServletContextTemplateLoaderTest#failLocate",
            "mustache.specs.InvertedTest#run[3]",
            "handlebarsjs.spec.BasicContextTest#thisKeywordInPaths",
            "com.github.jknack.handlebars.RawTextTest#varAmp",
            "com.github.jknack.handlebars.NoFalsyValueTest#noFalsy[1]",
            "handlebarsjs.spec.BlockTest#blockHelperPassingComplexContextPath",
            "com.github.jknack.handlebars.StringHelpersTest#ljustWithPad",
            "com.github.jknack.handlebars.PropertyAccessTest#notJavaNameAccess",
            "com.github.jknack.handlebars.HumanizeHelperTest#underscore",
            "handlebarsjs.spec.PartialsTest#renderingFunctionPartial",
            "mustache.specs.InterpolationTest#run[16]",
            "mustache.specs.DelimitersTest#run[8]",
            "com.github.jknack.handlebars.HelpersTest#run[9]",
            "com.github.jknack.handlebars.internal.HbsParserTest#setDelim",
            "mustache.specs.DelimitersTest#run[3]",
            "com.github.jknack.handlebars.PropertyAccessTest#listArrayIndexOutOfBounds",
            "com.github.jknack.handlebars.TypeSafeTemplateTest#noHandlerMethod",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[6]",
            "com.github.jknack.handlebars.PrecompileHelperTest#precompile[1]",
            "com.github.jknack.handlebars.Issue109#noEmptyStringIfBlock",
            "com.github.jknack.handlebars.SafeStringTest#notEquals",
            "com.github.jknack.handlebars.DateFormatTest#mediumFormat",
            "mustache.specs.InterpolationTest#run[8]",
            "com.github.jknack.handlebars.HelperErrorTest#block",
            "com.github.jknack.handlebars.I18NHelperTest#customLocale",
            "handlebarsjs.spec.PartialsTest#partialInPartial",
            "mustache.specs.SectionsTest#run[5]",
            "mustache.specs.LambdasTest#run[4]",
            "com.github.jknack.handlebars.ContextTest#expanded",
            "com.github.jknack.handlebars.ParsingErrorTest#missingPartial",
            "handlebarsjs.spec.BasicContextTest#newlines",
            "mustache.specs.CommentsTest#run[5]",
            "com.github.jknack.handlebars.FalsyContextTest#nullContext",
            "mustache.specs.SectionsTest#run[9]",
            "com.github.jknack.handlebars.HelpersTest#run[7]",
            "mustache.specs.SectionsTest#run[13]",
            "com.github.jknack.handlebars.FalsyContextTest#emptyMapContext",
            "mustache.specs.InvertedTest#run[17]",
            "com.github.jknack.handlebars.Jackson2HelperTest#toJSON",
            "handlebarsjs.spec.BlockHelperMissingTest#scopedNamesTakePrecedenceOverHelpers",
            "com.github.jknack.handlebars.Issue109#noEmptyStringMustacheBlock",
            "mustache.specs.InvertedTest#run[15]",
            "com.github.jknack.handlebars.ContextTest#dotLookup",
            "com.github.jknack.handlebars.internal.CustomDelimiterTest#partial",
            "com.github.jknack.handlebars.HelpersTest#run[13]",
            "mustache.specs.PartialsTest#run[2]",
            "handlebarsjs.spec.BasicContextTest#literalPaths",
            "com.github.jknack.handlebars.ContextTest#nestedObjectLookup",
            "handlebarsjs.spec.BlockHelperMissingTest#overrideInheritedDataWhenInvokingHelper",
            "com.github.jknack.handlebars.ContextTest#singleObjectLookup",
            "com.github.jknack.handlebars.DateFormatTest#fullFormat",
            "handlebarsjs.spec.BlockHelperMissingTest#helpersTakePrecedenceOverSameNamedContextProperties",
            "com.github.jknack.handlebars.HumanizeHelperTest#camelize",
            "com.github.jknack.handlebars.ParsingErrorTest#idx2",
            "com.github.jknack.handlebars.ScopeTest#nameConflict",
            "handlebarsjs.spec.BlockHelperMissingTest#parameterCanBeLookupViaAnnotation",
            "com.github.jknack.handlebars.StringHelpersTest#stringFormat",
            "handlebarsjs.spec.BasicContextTest#nestedPathsWithEmptyStringValue",
            "mustache.specs.LambdasTest#run[6]",
            "com.github.jknack.handlebars.ParsingErrorTest#idx4",
            "handlebarsjs.spec.BasicContextTest#mostBasic",
            "com.github.jknack.handlebars.ScalarContextTest#integer[1]",
            "mustache.specs.InvertedTest#run[14]",
            "com.github.jknack.handlebars.HelperErrorTest#basic",
            "com.github.jknack.handlebars.StringHelpersTest#cut",
            "com.github.jknack.handlebars.StringHelpersTest#abbreviate",
            "com.github.jknack.handlebars.ScalarContextTest#chHtml[1]",
            "com.github.jknack.handlebars.EmbeddedHelperTest#embedded",
            "handlebarsjs.spec.BlockTest#blockHelperStayingInTheSameContext",
            "handlebarsjs.spec.BlockHelperMissingTest#blockHelpersTakePrecedenceOverSameNamedContextProperties",
            "com.github.jknack.handlebars.JsonNodeValueResolverTest#resolveValueNode",
            "com.github.jknack.handlebars.ScalarContextTest#bool[0]",
            "com.github.jknack.handlebars.ScalarContextTest#integer[0]",
            "mustache.specs.InterpolationTest#run[13]",
            "com.github.jknack.handlebars.ScalarContextTest#ch[1]",
            "handlebarsjs.spec.BlockHelperMissingTest#eachWithHash",
            "com.github.jknack.handlebars.EachKeyTest#eachKeyWithInt",
            "com.github.jknack.handlebars.ContextTest#contextResolutionInCombine",
            "com.github.jknack.handlebars.DateFormatTest#defaultFormat",
            "com.github.jknack.handlebars.ArrayTest#stringArray",
            "com.github.jknack.handlebars.PropertyAccessTest#qualifiedListAccess",
            "com.github.jknack.handlebars.MarkdownHelperTest#markdown",
            "mustache.specs.SectionsTest#run[8]",
            "com.github.jknack.handlebars.RawTextTest#var3",
            "handlebarsjs.spec.BlockHelperMissingTest#blockHelperCanTakeOptionalHash",
            "mustache.specs.InvertedTest#run[19]",
            "com.github.jknack.handlebars.internal.HbsParserTest#var",
            "mustache.specs.InterpolationTest#run[22]",
            "com.github.jknack.handlebars.internal.HbsParserTest#block",
            "mustache.specs.InterpolationTest#run[10]",
            "com.github.jknack.handlebars.FalsyValueTest#falsy[4]",
            "handlebarsjs.spec.BlockTest#blockHelper"
        ],
        "passed_tests": [],
        "failed_tests": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "chaos_failed_tests": [
            "com.github.jknack.handlebars.HumanizeHelperTest#camelize",
            "com.github.jknack.handlebars.HumanizeHelperTest#formatPercent",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "com.github.jknack.handlebars.HumanizeHelperTest#binaryPrefix",
            "com.github.jknack.handlebars.HumanizeHelperTest#metricPrefix",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalDay",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "flaky_tests": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime"
        ],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_random_max": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_sleep_increase": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_time_round": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_random_fix": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_locale_fix": [
            "com.github.jknack.handlebars.HumanizeHelperTest#camelize",
            "com.github.jknack.handlebars.HumanizeHelperTest#formatPercent",
            "com.github.jknack.handlebars.HumanizeHelperTest#binaryPrefix",
            "com.github.jknack.handlebars.HumanizeHelperTest#metricPrefix",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_date_relative": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalDay",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_socket_0.1": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_clock_relative": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_time_increment": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_time_relative": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_random_min": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_sleep_random": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_zone_fix": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_time_speedup": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_time_slow": [
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_fix_date": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalDay",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ],
        "config_only_date_bk": [
            "com.github.jknack.handlebars.HumanizeHelperTest#naturalTime",
            "org.apache.maven.surefire.junit4.JUnit4Provider#com.github.jknack.handlebars.springmvc.MessageSourceHelperTest"
        ]
    },
    "apache-commons-exec": {
        "total_tests": [
            "org.apache.commons.exec.CommandLineTest#testExecutableZeroLengthString",
            "org.apache.commons.exec.util.MapUtilTest#testCopyMap",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayEqualsNullNull",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayEqualsActualNull",
            "org.apache.commons.exec.CommandLineTest#testParse",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithError",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithInvalidWorkingDirectory",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentWithSingleQuote",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithError",
            "org.apache.commons.exec.CommandLineTest#testAddNullArgument",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentsWithQuotes",
            "org.apache.commons.exec.CommandLineTest#testParseWithOnlyWhitespace",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayEqualsOrderNotSignificant",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayNotOrderEquals",
            "org.apache.commons.exec.util.MapUtilTest#testMergeMap",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithTimelyUserTermination",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithNonExistingApplication",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentsArray",
            "org.apache.commons.exec.CommandLineTest#testExecutable",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWatchdog",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteStability",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentWithQuotesAround",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithCustomExitValue1",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayEquals",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithCustomExitValue2",
            "org.apache.commons.exec.DefaultExecutorTest#testExecute",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithProcessDestroyer",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithTooLateUserTermination",
            "org.apache.commons.exec.CommandLineTest#testParseWithUnevenQuotes",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithEnv",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentsArrayNull",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsync",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayNotEquals",
            "org.apache.commons.exec.CommandLineTest#testExecutableWhitespaceString",
            "org.apache.commons.exec.CommandLineTest#testParseWithQuotes",
            "org.apache.commons.exec.CommandLineTest#testComplexAddArguments1",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentWithQuote",
            "org.apache.commons.exec.CommandLineTest#testNullExecutable",
            "org.apache.commons.exec.CommandLineTest#testParseWithNull",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithProcessDestroyer",
            "org.apache.commons.exec.CommandLineTest#testComplexAddArguments2",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentWithSpace",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithArg",
            "org.apache.commons.exec.util.MapUtilTest#testPrefixMap",
            "org.apache.commons.exec.environment.EnvironmentUtilTest#testGetProcEnvironment",
            "org.apache.commons.exec.CommandLineTest#testComplexAddArgument",
            "org.apache.commons.exec.CommandLineTest#testAddArguments",
            "org.apache.commons.exec.CommandLineTest#testAddArgument",
            "org.apache.commons.exec.TestUtilTest#testAssertArrayEqualsExpectedNull",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteNonExistingApplication",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentWithBothQuotes",
            "org.apache.commons.exec.CommandLineTest#testAddArgumentsWithQuotesAndSpaces",
            "org.apache.commons.exec.CommandLineTest#testCommandLineParsingWithExpansion",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteWithWorkingDirectory",
            "org.apache.commons.exec.environment.EnvironmentUtilTest#testToStrings"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithTimelyUserTermination",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithNonExistingApplication",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithProcessDestroyer",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsync",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithError"
        ],
        "flaky_tests": [
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithProcessDestroyer"
        ],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithTimelyUserTermination",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithNonExistingApplication",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithProcessDestroyer",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsync",
            "org.apache.commons.exec.DefaultExecutorTest#testExecuteAsyncWithError"
        ],
        "config_only_random_max": [],
        "config_only_sleep_increase": [],
        "config_only_time_round": [],
        "config_only_random_fix": [],
        "config_only_locale_fix": [],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [],
        "config_only_time_relative": [],
        "config_only_random_min": [],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [],
        "config_only_fix_date": [],
        "config_only_date_bk": []
    },
    "wro4j-wro4j": {
        "total_tests": [
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotAcceptEmptyNameArgument",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#testLocateJarStreamDelegate",
            "ro.isdc.wro.model.resource.support.TestDefaultResourceAuthorizationManager#cannotAddNullResource",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#shouldHaveNoConfiguredHeadersWhenDefaultHeadersAreNotSet",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithCustomManagerFactoryWithInvalidResourceAndIgnoreMissingResources",
            "ro.isdc.wro.extensions.processor.TestDustJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#cannotAcceptNullKey",
            "ro.isdc.wro.cache.TestCacheKey#testEquals",
            "ro.isdc.wro.extensions.processor.TestSassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.spi.TestDefaultWroModelFactoryProvider#shouldProvideOneModelFactory",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldDetectIncrementalChangeOfImportedCss",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateInvalidScript",
            "ro.isdc.wro.extensions.model.factory.TestJsonModelFactory#testInvalidContent",
            "ro.isdc.wro.http.TestConfigurableWroFilter#testFilterWithPropertiesSet",
            "ro.isdc.wro.model.resource.processor.support.TestDataUriGenerator#shouldGenerateCorrectDataURIForCSSWithCharset",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#cannotCreateBuilderWithNullType",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldNotFailWhenAnalyzeInvalidResources",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processClasspathResourceType",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#cannotAcceptNullArguments",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldUseTaskExecutorWhenRunningInParallel",
            "ro.isdc.wro.model.resource.processor.TestVariablizeColorsCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.manager.factory.standalone.TestStandaloneWroManagerFactory#shouldHaveMoreLocatorsThanDefaultFactoryHas",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#cannotCheckChangeForNullGroupName",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldNotCheckForChangesWhenResourceWatcherPeriodIsNotSet",
            "ro.isdc.wro.model.resource.processor.TestCssCompressorProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.processor.decorator.TestLazyProcessorDecorator#cannotProcessNullLazyProcessor",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldDetectChangeForDifferentGroups",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldNotFindProviderWhenNoneIsAvailable",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#cannotAcceptNullArgument",
            "ro.isdc.wro.util.provider.TestDefaultConfigurableProvider#shouldHavePreProcessors",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#shouldCreateValidUri",
            "ro.isdc.wro.extensions.model.factory.TestConfigurableModelFactory#cannotConfigureInvalidStrategy",
            "ro.isdc.wro.config.factory.TestFilterConfigWroConfigurationFactory#testConfigurationTypeBackwardCompatibility",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePreProcessorWithResourceNotWantingMinimize",
            "ro.isdc.wro.model.resource.processor.TestJsMinProcessor#testFromFolder",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotExcludeNullProcessor",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackRegistry#shouldInvokeCallbackWhenCallingProcess",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#cannotAcceptWhenSettingNullWroManager",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#shouldFallbackToExternalResourceLocatorWhenDispatcherReturns404",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#testValidUrl",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldFailWhenAnInvalidWroManagerClassNameIsLoadedFromCustomLocation",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithConfigurableWroManagerFactoryWithValidConfigFileSet",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processWEBINFServletContextResourceType",
            "ro.isdc.wro.model.resource.locator.wildcard.TestWildcardContext#shouldCreateContextWithNullArguments",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldRemoveImports",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#testSimpleOptimization",
            "ro.isdc.wro.manager.TestWroManager#shouldClearAuthorizationManagerWhenCachePeriodChanged",
            "ro.isdc.wro.extensions.processor.support.TestObjectPoolHelper#cannotReturnNullObjectToPool",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredRequestHandler",
            "ro.isdc.wro.manager.TestWroManager#testMinimizeAttributeIsTrueOnResource",
            "ro.isdc.wro.model.resource.processor.TestLessCssImportPreProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testWhenValidPostProcessorsSet",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#cannotDetectInexistentResourcesWithWildcard",
            "ro.isdc.wro.http.TestWroFilter#testInvalidGroupNameExceptionThrownInDEPLOYMENTMode",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokeMinimizePreProcessorWhenMinimizeIsRequired",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#testMojoWithPropertiesSet",
            "ro.isdc.wro.maven.plugin.support.TestForkJoinTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#shouldFailWhenInvalidScriptIsProcessed",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldUseConfiguredEncodingWhenSet",
            "ro.isdc.wro.model.resource.support.naming.TestFolderHashEncoderNamingStrategy#shouldRenameResourceWithEmptyContent",
            "ro.isdc.wro.model.resource.factory.TestUriLocatorFactory#cannotLocateNullUri",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactory#decoratedModelshouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.TestRhinoTypeScriptProcessor#testFromFolder",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testMojoWithPropertiesSet",
            "ro.isdc.wro.extensions.processor.TestRhinoCoffeeScriptProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#shouldFindValidWebjar",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldUseConfiguredNamingStrategy",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackRegistry#shouldCatchCallbacksExceptionsAndContinueExecution",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldCreateEmptyModelWhenValidationDisabledAndXmlIsNotValid",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#shouldReturnsResourceIncludedByDispatcher",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#shouldDecorateWithExtensionAwareProcessorDecoratorWhenProcessorNameContainsDots",
            "ro.isdc.wro.extensions.processor.TestJsonHPackProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithPropertiesSetAndOneTargetGroup",
            "ro.isdc.wro.cache.TestCacheKey#shouldBeSameWhenContainingIdenticalAttributes",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldCreateManager",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testWithEmptyPreProcessors",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#canBeExecutedMultipleTimes",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#canLocateValidResource",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#shouldNotApplyPatternsWhenIncludeMatches",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#testWithOptionsSet",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotProcessWithIncludeWhenResourceIsUnknown",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldRemoveImportsFromComments",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveFontExtensionEot",
            "ro.isdc.wro.model.resource.support.naming.TestDefaultHashEncoderNamingStrategy#cannotAcceptNullStream",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testWroModelDelegate",
            "ro.isdc.wro.extensions.processor.TestYUICssCompressorProcessor#shouldMininimizeCss",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#testRecursiveWildcard4Resources",
            "ro.isdc.wro.config.factory.TestPropertyWroConfigurationFactory#cannotAcceptInvalidLong",
            "ro.isdc.wro.http.TestWroFilter#testApiCallInDEVELOPMENTModeAndReloadCacheCall",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokeMinimizePostProcessorWhenMinimizeIsRequired",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldUseHashEncoderStrategyForValidAlias",
            "ro.isdc.wro.http.TestContext#cannotAccessContext",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#shouldBuildDefaultConfigurationWhenConfigStreamIsNull",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldAnalyzeValidResources",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testExpandWildcardWithMultipleResources",
            "ro.isdc.wro.cache.TestCacheKey#addingNullAttributeValueShouldHaveNoEffect",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotUseInvalidPostProcessorsSet",
            "ro.isdc.wro.manager.TestWroManager#testDuplicatedResourcesShouldBeSkipped",
            "ro.isdc.wro.http.TestWroFilter#testDisableCacheInitParamInDeploymentMode",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldProcessTargetGroupsWhenDestinationFolderDoesNotExist",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeDetector#cannotCheckInvalidGroupNameForChange",
            "ro.isdc.wro.extensions.processor.TestJsLintProcessor#canBeExecutedMultipleTimes",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldNotHaveVerboseInfoLog",
            "ro.isdc.wro.extensions.processor.TestRhinoCoffeeScriptProcessor#testSimple",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldCreateValidObjectWithFactoryMethod",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#emptyStringShouldBeValid",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldBeEnabledByDefault",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldDetectInvalidGroupReference",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testWithEmptyPostProcessors",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#shouldFindAllChildFoldersAndFiles",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldNotFailWhenReloadingModelOutsideOfContext",
            "ro.isdc.wro.http.TestWroFilter#testValidAppFactoryClassNameIsSet",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldDetectImportOnceStatement",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#shouldNotAcceptNullRequestOrResponse",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingComplexOptions",
            "ro.isdc.wro.model.group.TestGroup#cannotCreateGroupWithNullName",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#unorderedShouldOverrideDefault",
            "ro.isdc.wro.http.TestWroFilter#testValidHeaderParamIsSet",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactory#shouldNotAuthorizeResourcesFromModelWhenNotInDebugMode",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#cannotLocateInvalidLocation",
            "ro.isdc.wro.model.resource.processor.support.TestDataUriGenerator#shouldGenerateCorrectDataUriForPng",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeEligibilityForMinimizeAwareProcessorWithJsType",
            "ro.isdc.wro.model.resource.processor.decorator.TestExceptionHandlingProcessorDecorator#shouldThrowRuntimeExceptionWhenProcessingFails",
            "ro.isdc.wro.extensions.processor.TestLess4jProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.js.TestCoffeeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testWithEmptyPreProcessors",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#cannotAcceptNullOptions",
            "ro.isdc.wro.util.TestProxyFactory#shouldInheritInterfacesOfTheObject",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldCleanupProperlyWhenDestroyed",
            "ro.isdc.wro.config.metadata.TestDefaultMetaDataFactory#shouldReturnExistingKey",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testNoWildcardPresent1",
            "ro.isdc.wro.model.resource.support.naming.TestDefaultHashEncoderNamingStrategy#shouldRenameResourceContainedInAFolder",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldGenerateReportWithDefaultFormat",
            "ro.isdc.wro.http.TestGzipFilter#shouldChainWhenGzipIsNotSupported",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigureDebugWithPropertiesFileSet",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldUseCorrectWroManagerFactoryWhenPropertiesAreLoadedFromCustomLocation",
            "ro.isdc.wro.model.resource.processor.decorator.TestExtensionsAwareProcessorDecorator#testMinimizeAwareDecorator2",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#shouldHaveNoCacheHeadersInDebugMode",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldInjectDecoratedProcessor",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldGenerateModelAsJson",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#shouldReturnEmptyListOfProcessors",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testMojoWithPropertiesSet",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldUseTaskExecutorWhenRunningInParallel",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testOnlyJsDestinationFolderSet",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldReturnRelativeResource",
            "ro.isdc.wro.extensions.processor.TestDojoShrinksafeCompressorProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldGenerateGroupMappingUsingNoOpNamingStrategy",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldNotFailWhenContextInitializedAndDestroyed",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#createValidModel",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldConsiderContributeMethodsWhenManagerFactoryIsExtended",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigureDebugWithOnlyPropertiesFileSet",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#shouldNotInvokeProcessorWhichIsNotImportAware",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldInjectSupportedType",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testWroXmlWithInvalidResourcesAndIgnoreMissingResourcesTrue",
            "ro.isdc.wro.extensions.processor.support.coffeescript.TestCoffeeScript#shouldCompileNullScript",
            "ro.isdc.wro.extensions.processor.TestPackerJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeImageUrlInContextRelativeCssResource",
            "ro.isdc.wro.http.TestWroFilter#cannotSetNullConfiguration",
            "ro.isdc.wro.model.group.processor.TestInjector#cannotInjectUnsupportedInnerObject",
            "ro.isdc.wro.config.factory.TestFilterConfigWroConfigurationFactory#testConfigureDebug",
            "ro.isdc.wro.model.group.processor.TestInjector#cannotInjectOutsideOfContext",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testWithSeveralOptions",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#cannotCreateValidUriFromNullArgument",
            "ro.isdc.wro.http.TestWroFilter#shouldNotDestroyWroModelWhenCacheIsNotDisabled",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldIgnoreNullLints",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#checkUrlIsAllowed",
            "ro.isdc.wro.model.resource.support.naming.TestFolderHashEncoderNamingStrategy#shouldRenameResourceContainedInAFolder",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldHaveMinimizeEnabledByDefault",
            "ro.isdc.wro.extensions.processor.TestHoganJsProcessor#testSimpleString",
            "ro.isdc.wro.model.resource.locator.wildcard.TestWildcardContext#shouldCreateContextWithNotNullArguments",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#shouldInvokePreProcessorWhenImportIsSupported",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldAlwaysBeEnabled",
            "ro.isdc.wro.http.TestWroFilter#testApiCallInDEPLOYMENTMode",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotExclusdeNullPatterns",
            "ro.isdc.wro.http.TestConfigurableWroFilter#testFilterWithCacheUpdatePeriodSet",
            "ro.isdc.wro.model.resource.processor.decorator.TestBenchmarkProcessorDecorator#shouldInvokeBeforeAndAfterInDebugMode",
            "ro.isdc.wro.model.resource.processor.TestSemicolonAppenderPreProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.TestWroModelInspector#shouldReturnSameResultAfterModelChange",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#cannotCreateFromXmlWithInvalidNamespace",
            "ro.isdc.wro.extensions.model.factory.TestJsonModelFactory#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.TestConfigurableWroFilter#shouldAcceptValidProcessorNameConfiguration",
            "ro.isdc.wro.model.resource.processor.TestCssMinProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.support.TestObjectPoolHelper#shouldUseCustomObjectPool",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#testWhiteSpaceOnly",
            "ro.isdc.wro.util.TestProxyFactory#cannotCreateProxyFromNullObjectFactory",
            "ro.isdc.wro.model.resource.processor.TestVariablizeColorsCssProcessor#testFromFolder",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testWhenValidPreProcessorsSet",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#cannotAcceptNullUri",
            "ro.isdc.wro.util.TestWroUtil#shouldMatchUrl",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardPresent2",
            "ro.isdc.wro.http.TestWroFilter#testInvalidHeaderParamIsSet",
            "ro.isdc.wro.model.TestWroModel#testGetExistingGroup",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldLeaveContentUnchangedWhenAProcessorFails",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldHaveCorrectPathWhenNotNullPathIsSet",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldHaveConfiguredLints",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testValidStyle",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testStyleContainingAScript",
            "ro.isdc.wro.extensions.processor.TestJsLintProcessor#testFromFolder",
            "ro.isdc.wro.model.TestWroModelInspector#shouldGetGroupNamesAsString",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldStoreAttributeOfValidType",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#cannotSetNullLocatorStrategy",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldHaveCorrectLocatorsSet",
            "ro.isdc.wro.cache.TestMemoryCacheStrategy#testPut",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#predefOption",
            "ro.isdc.wro.cache.TestCacheValue#shouldCacheGzippedContentByDefault",
            "ro.isdc.wro.util.TestSchedulerHelper#cannotAcceptNullRunnable",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#cannotSubmitNullCallables",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#canSetNullOptions",
            "ro.isdc.wro.model.group.TestGroup#cannotCollectResourcesWithNullType",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldNotFailWhenEmptyResourceIsFound",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#shouldValidateWithMultipleOptions",
            "ro.isdc.wro.manager.TestWroManager#testNoProcessorWroManagerFactory",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testEmptyModel",
            "ro.isdc.wro.manager.TestWroManager#testCRC32Fingerprint",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldNotChangeAfterInjectionSupportedNotNullObject",
            "ro.isdc.wro.manager.TestWroManager#testAggregatedComputedFolder2",
            "ro.isdc.wro.util.TestStringUtils#shouldCleanPathContainingMultipleDoubleDots",
            "ro.isdc.wro.http.TestWroFilter#testValidHeaderParamsAreSet",
            "ro.isdc.wro.http.TestContext#cannotSetNullContext",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldPreserveProcessorMetadataAfterTransform",
            "ro.isdc.wro.http.TestWroFilter#testReloadCacheCall",
            "ro.isdc.wro.model.resource.processor.decorator.TestExceptionHandlingProcessorDecorator#cannotDecorateNullProcessor",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#cannotExecuteWhenInvalidResourcesPresentAndDoNotIgnoreMissingResources",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#shouldNotAcceptUnknown",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testRecursiveImports",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#cannotCheckNullCacheEntry",
            "ro.isdc.wro.model.resource.processor.TestConformColorsCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#testInvalidStream",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeEligibilityForProcessorWithJsType",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldDetectConfiguredLocator",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotConfigureInvalidHashStrategy",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldApplyEligibleMinimizeAwareProcessors",
            "ro.isdc.wro.model.resource.processor.TestJsMinProcessor#shoudlFailWhenCompilingAnExpressionWithNewLines",
            "ro.isdc.wro.model.resource.TestResource#cannotSetNullType",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testEmptyOptions",
            "ro.isdc.wro.model.resource.processor.decorator.TestDefaultProcessorDecorator#cannotDecorateNullProcessor",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldCreateConfiguration",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testNoDestinationFolderSet",
            "ro.isdc.wro.extensions.http.handler.spi.TestDefaultRequestHandlerProvider#shoudProvideAtLeastOneRequestHandler",
            "ro.isdc.wro.model.resource.processor.TestCssDataUriPreProcessor#shouldTransformLargeResources",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldAcceptUri",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#shouldAcceptNullExterns",
            "ro.isdc.wro.model.resource.TestResource#shouldNotAcceptNullUri",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeDetector#shouldRequireChangeAtFirstCheck",
            "ro.isdc.wro.model.resource.processor.TestSingleLineCommentStripperProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldUseDefaultLocatorWhenNoneIsConfigured",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#shouldMarkAsIncludedTheRequestWhenDispatcherIsUsed",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#cannotConfigureInvalidAlias",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#cannotCheckNullRequestAsIncluded",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldDetectChangeAfterNewHashUpdate",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#cannotConfigureInvalidAliases",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldCreateHelperWithPostProcessor",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldCreateADefaultManagerFactory",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#shouldNotBeIncludedRequestByDefault",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#shouldOverrideCustomProcessorsFactory",
            "ro.isdc.wro.model.resource.TestResource#cannotSetNullUri",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldChangeMinimizaFlagWhenInternalMethodIsOverriden",
            "ro.isdc.wro.config.support.TestContextPropagatingCallable#shouldFailWhenNoContextIsAvailable",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#testWroXmlWithInvalidResourcesAndIgnoreMissingResourcesTrue",
            "ro.isdc.wro.model.resource.processor.decorator.TestSupportAwareProcessorDecorator#shouldThrowExceptionWhenProcessorIsNotSupported",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#testSetNullOptions",
            "ro.isdc.wro.manager.TestWroManager#testManagerWithSchedulerAndUpdatePeriodSet",
            "ro.isdc.wro.extensions.model.factory.TestJsonModelFactory#createValidModel",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldFormatCssLintReportFromFolder",
            "ro.isdc.wro.config.support.TestContextPropagatingCallable#shouldDecorateRunnable",
            "ro.isdc.wro.model.resource.locator.factory.TestDefaultUriLocatorFactory#shouldContainWebjarLocator",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#testLocateJarStream",
            "ro.isdc.wro.http.TestWroServletContextListener#cannotSetNullWroManager",
            "ro.isdc.wro.model.resource.processor.TestConsoleStripperProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.http.handler.TestReloadCacheRequestHandler#shouldNotHandleRequest",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#testInvalidPostProcessorSet",
            "ro.isdc.wro.manager.TestWroManager#shouldIgnoreInvalidImportWhenImportedResourceIsMissing",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithValidPostProcessor",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#testLocateJarStreamDelegateFail",
            "ro.isdc.wro.http.handler.factory.TestConfigurableRequestHandlerFactory#shouldReturnEmptyListByDefault",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#cannotLocateMalformedUrl",
            "ro.isdc.wro.manager.TestWroManager#testManagerWhenSchedulerIsStarted",
            "ro.isdc.wro.util.TestWroUtil#computePathFromLocationWithContextRoot",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveHTMLExtenstionWitCharset",
            "ro.isdc.wro.manager.TestWroManager#cacheShouldNotBeClearedAfterModelReload",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#cannotSetNullProperties",
            "ro.isdc.wro.cache.TestCacheValue#shouldNotCacheGzippedContentByDefault",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldCreateWroManagerFactorySpecifiedByWroConfiguration",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testRecursiveWildcardResources",
            "ro.isdc.wro.model.TestWroModelInspector#cannotGetGroupsUsingNullResource",
            "ro.isdc.wro.extensions.processor.TestJsonHPackProcessor#testPackFromFolder",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldFailWhenMultipleListenersWithSameNameDefined",
            "ro.isdc.wro.http.TestWroFilter#shouldDestroyWroModelWhenCacheIsDisabled",
            "ro.isdc.wro.model.TestWroModel#shouldMergeEmptyModel",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testWildcard1Resources",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldAnalyzeInvalidResources",
            "ro.isdc.wro.http.TestWroFilter#shouldFailWhenConfigurationFactoryFails",
            "ro.isdc.wro.util.TestProxyFactory#shouldCreateProxyForAnObjectWithNotAAnInterfaceType",
            "ro.isdc.wro.model.resource.processor.TestJawrCssMinifierProcessor#shouldHandleInvalidResources",
            "ro.isdc.wro.extensions.model.factory.TestConfigurableModelFactory#shouldUseCorrectDefaultStrategy",
            "ro.isdc.wro.model.resource.processor.TestJsMinProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.cache.TestCacheValue#byDefaultCacheGzippedContentShouldBeDisabled",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#shouldSupportAbstractGroup",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigurationTypeBackwardCompatibilityWithPropertiesFileSet",
            "ro.isdc.wro.model.resource.support.naming.TestHashEncoderNamingStrategy#shouldRenameResourceWithSomeContent",
            "ro.isdc.wro.extensions.processor.TestEmberJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.http.handler.factory.TestConfigurableRequestHandlerFactory#testInvalidRequestHandlerSet",
            "ro.isdc.wro.extensions.processor.TestCJsonProcessor#testUnpackFromFolder",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testResourceDelegate",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotSetObjectForNullAttribute",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#processEmptyList",
            "ro.isdc.wro.http.TestWroFilter#modelShouldBeReloadedWhenReloadIsTriggered",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#shouldUseConfiguredDefaultHeaders",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testGroupDelegate",
            "ro.isdc.wro.model.resource.processor.TestMultiLineCommentStripperProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldCreateOverridenManagerFactory",
            "ro.isdc.wro.util.provider.TestDefaultConfigurableProvider#shouldHavePostProcessors",
            "ro.isdc.wro.extensions.processor.TestNodeTypeScriptProcessor#testFromFolder",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldSetCorrectResopnsCodeBasedOnResourceChangeState",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testValidJsUri",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testExpandWildcardRootDir",
            "ro.isdc.wro.extensions.processor.TestCJsonProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#shouldValidateWithNoOptions",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#shouldAcceptKnownUri",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testResourceWithErrors",
            "ro.isdc.wro.cache.TestCacheKey#testEquals2",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#shouldUseCorrectDefaultModelFactory",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackRegistry#shouldBeThreadSafe",
            "ro.isdc.wro.model.group.TestGroup#cannotPassNullResourceType",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldHaveAllFieldsSetCorrectlyAfterReset",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#shouldPreferServletContextBasedResolving",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredNamingStrategy",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithInvalidPostProcessor",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveJPGExtenstion",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testRegexSelectors",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithMultipleValidPostProcessor",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#cannotProxyUnauthorizedResources",
            "ro.isdc.wro.manager.TestWroManager#testFromFolder",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldRenameWithConfiguredStrategy",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveHTMLExtenstion",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#cannotCreateBuilderWithNullLintReport",
            "ro.isdc.wro.http.TestGzipFilter#shouldGzipWhenGzipSupported",
            "ro.isdc.wro.model.resource.locator.factory.TestDefaultUriLocatorFactory#shouldHaveSeveralDefaultLocators",
            "ro.isdc.wro.extensions.processor.TestBeautifyJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.TestRhinoCoffeeScriptProcessor#testAdvanced",
            "ro.isdc.wro.config.metadata.TestDefaultMetaDataFactory#cannotMutateCreatedMap",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testErrorsWithNoFailFast",
            "ro.isdc.wro.extensions.processor.TestNodeLessCssProcessor#testFromFolder",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigureCacheUpdatePeriodWithPropertiesFileSet",
            "ro.isdc.wro.TestWroRuntimeException#shouldPreserveOriginalExceptionMessageWhenWrap",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveJPGExtenstionWithoutCharset",
            "ro.isdc.wro.model.resource.processor.TestMultiLineCommentStripperProcessor#testFromFolder",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadOnlyOnceForTheSameKey",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processUrlResourceType",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotAcceptBlankNameArgument",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#shouldOrderedAlphabeticallyWildcardResources",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldLoadEmptyModel",
            "ro.isdc.wro.manager.TestWroManager#shouldRegisterCallback",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#shouldGenerateReportWithDefaultFormat",
            "ro.isdc.wro.util.TestWroUtil#computePathFromSomeLocation",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldFailWhenInvalidModelIsProvidedWhenUsingConfigurableWroManagerFactory",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithConfigurableWroManagerFactoryWithInvalidPreProcessor",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldDetectANonMinimizeAwareProcessor",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#executeMultipleTimesDoesntThrowOutOfMemoryException",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredCacheStrategy",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldHaveEmptyConfiguredStrategiesByDefault",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldCreateBaseWroManagerFactoryByDefault",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testExpandWildcardWithASingleResource",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testValidImports",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#shouldBuildInjectorWithValidWroManager",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testWhenValidPostProcessorsSet",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testMinimizeAttributePresence",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithInvalidPreProcessor",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#shouldBuildValidInjectorWithBaseWroManagerFactory",
            "ro.isdc.wro.cache.TestCacheKey#shouldDifferWhenContainingDifferentAttributes",
            "ro.isdc.wro.extensions.processor.TestSassCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testWithInvalidUriType",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldClearAllAttributes",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeImageUrlInClasspathCssResource",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#testRecursiveGroupReference",
            "ro.isdc.wro.http.TestWroFilter#cannotAccessUnauthorizedRequest",
            "ro.isdc.wro.model.resource.TestResource#shouldCreateResourceWithCorrectType",
            "ro.isdc.wro.extensions.processor.js.TestCoffeeScriptProcessor#shouldUseNodeProcessorWhenSupported",
            "ro.isdc.wro.model.factory.TestModelTransformerFactory#shouldNotAcceptNullDecoratedModel",
            "ro.isdc.wro.model.resource.processor.decorator.TestCopyrightKeeperProcessorDecorator#testCopyrightAwareProcessor",
            "ro.isdc.wro.util.TestWroUtil#shouldGenerateDateAsStringWithUSLocale",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#cannotBuildCSVWheInvalidOptionsFormatProvided",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactory#shouldAuthorizeResourcesFromModelWhenInDebugMode",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePreProcessorWithResourceWantingMinimize",
            "ro.isdc.wro.model.resource.processor.decorator.TestSupportAwareProcessorDecorator#cannotDecorateNullProcessor",
            "ro.isdc.wro.http.TestWroFilter#testConfigurationInitParam",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testMinimizedWithTrueParam",
            "ro.isdc.wro.model.resource.processor.TestDefaultGroupExtractor#testExtractNoGroupName",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#executeWithNullTargetGroupsProperty",
            "ro.isdc.wro.extensions.processor.TestHandlebarsJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#shouldNotDetectChangeAfterFirstRun",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testAbstractGroup",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeEligibilityForProcessorWithNoTypeAndNotMinimizeAware",
            "ro.isdc.wro.model.resource.support.naming.TestDefaultHashEncoderNamingStrategy#shouldRenameResourceWithSomeContent",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldFindProcessorsProvider",
            "ro.isdc.wro.config.factory.TestFilterConfigWroConfigurationFactory#cannotUseNullArgument",
            "ro.isdc.wro.extensions.processor.TestBeautifyJsProcessor#testFromFolder",
            "ro.isdc.wro.manager.TestWroManager#testWildcardGroupResources",
            "ro.isdc.wro.http.TestWroFilter#shouldChainWhenFilterIsNotEnabled",
            "ro.isdc.wro.model.resource.TestResource#shouldNotAcceptNullUri2",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#shouldFailWhenInvalidExternProvided",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testWithEmptyPostProcessors",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#orderedShouldOverrideUnordered",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#testOptionWithValue",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveFontExtensionOtf",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#cannotConfigureInvalidAliases",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#cannotCreateModelWhenNullListOfFactoriesProvided",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#cannotAcceptInvalidManagerClassConfiguredInProperties",
            "ro.isdc.wro.model.group.TestGroup#testNoResorucesOfTypeFound",
            "ro.isdc.wro.manager.runnable.TestReloadCacheRunnable#shouldDestroyModelWhenInvokingRun",
            "ro.isdc.wro.http.TestWroFilter#shouldUseProcessorsConfiguredInWroProperties",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#shouldCorrectlyDetectFilesFromFoldersWithDirectoriesOnlyAsChildren",
            "ro.isdc.wro.http.handler.TestReloadCacheRequestHandler#shouldHandleRequest",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldGenerateReportWithCheckstyleFormat",
            "ro.isdc.wro.model.factory.TestModelTransformerFactory#shouldNotChangeTheModelWhenNoTransformersProvided",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldNotAcceptNullProcessor",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldReuseGroupNameMappingFileWithIncrementalBuild",
            "ro.isdc.wro.model.resource.processor.decorator.TestLazyProcessorDecorator#shouldInvokeLazyProcessor",
            "ro.isdc.wro.model.TestWroModel#testGetInvalidGroup",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldHaveMinimizationTurnedOffWhenMinimizeEnabledIsFalse",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithConfigurableWroManagerFactoryWithValidAndEmptyConfigFileSet",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldUseServletContextOnlyLocator",
            "ro.isdc.wro.util.TestSchedulerHelper#shouldNotInvokeRunnableImmediatelyAfterScheduleIsInvoked",
            "ro.isdc.wro.util.TestWroUtil#computePathFromNestedLocation",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldNotFailWhenReloadingCacheOutsideOfContext",
            "ro.isdc.wro.http.TestWroFilter#cannotAcceptNullRequestHandlerFactory",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveHTMLUpperCaseExtenstion",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testResourceWithUndefVariables",
            "ro.isdc.wro.extensions.processor.TestEmberJsProcessor#shouldTransformFilesFromFolder",
            "ro.isdc.wro.cache.TestCacheValue#changingFlagShouldHaveNoEffect",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#resourceAvailableWithTrailingSpaces",
            "ro.isdc.wro.http.support.TestRedirectedStreamServletResponseWrapper#shouldRedirectStreamWhenSendRedirectIsInvoked",
            "ro.isdc.wro.extensions.model.resource.TestConfigurableAntPathPatternsResourceAuthorizationManager#shoudNotAuthorizeAnyResourceByDefault",
            "ro.isdc.wro.extensions.processor.TestNodeLessCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.processor.support.TestDefaultProcessorProvider#shouldContainLessCssImportPreProcessor",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testWhenValidPreProcessorsSet",
            "ro.isdc.wro.extensions.processor.TestYUICssCompressorProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.factory.TestConfigurableModelFactory#shouldHaveOneAvailableStrategy",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldHashWithConfiguredStrategy",
            "ro.isdc.wro.manager.TestWroManager#testCssWithInvalidImport",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldDecorateCacheStrategy",
            "ro.isdc.wro.http.TestWroFilter#testDoFilterInDEPLOYMENTMode",
            "ro.isdc.wro.extensions.processor.css.TestLessCssProcessor#shouldUseFallbackProcessorWhenNodeNotSupported",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#shouldDecorateWithExtensionAwareProcessorDecorator",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotUseInvalidUriLocatorsSet",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldDetectMissingImportStatement",
            "ro.isdc.wro.config.metadata.TestDefaultMetaDataFactory#shouldCreateEmptyMapByDefault",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#shouldCreateValidModelWhenAutoDetectIsTrue",
            "ro.isdc.wro.util.TestSchedulerHelper#canAcceptNullRunnableWhenPeriodIsZero",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testNoWildcardPresent2",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#cannotProcessUriWithoutWildcard",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldAcceptCallsTo_wroResources",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testWildcard3Resources",
            "ro.isdc.wro.model.resource.processor.support.TestCssImportInspector#shouldRemoveImportsFromComments",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldNotInvokeMinimizeAwarePreProcessorWithResourceNotWantingMinimize",
            "ro.isdc.wro.model.resource.processor.TestConsoleStripperProcessor#testFromFolder",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#cannotExtractResourceTypeWithNullUri",
            "ro.isdc.wro.util.TestSchedulerHelper#scheduleWithSamePeriods",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#cannotAcceptNullProperty",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#cannotLocateNullLocation",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#onMockFactoryProvided2",
            "ro.isdc.wro.http.support.TestRedirectedStreamServletResponseWrapper#cannotAcceptNullResponse",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#testExceptions",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#shouldSetCacheControlForOneYearWhenDebugModeIsFalse",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePreProcessor",
            "ro.isdc.wro.extensions.support.spi.TestDefaultConfigurableProvider#shouldProvideWebjarLocator",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testSuccessfulCreation",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#shouldCreateConfigFromValidLocation",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#shouldFindNoResourcesWhenNoneExist",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#shouldNotInvokeDispatcherWhenServletContextOnlyStrategyIsUsed",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldNotFailWhenNoResourcesProcessed",
            "ro.isdc.wro.model.resource.support.naming.TestHashEncoderNamingStrategy#shouldRenameResourceWithEmptyContent",
            "ro.isdc.wro.model.factory.TestFallbackAwareWroModelFactory#testWithoutLastValidThrowsException",
            "ro.isdc.wro.http.handler.TestReloadModelRequestHandler#shouldHandleRequest",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#shouldFailWhenInvalidLessCssIsProcessed",
            "ro.isdc.wro.extensions.model.factory.TestConfigurableModelFactory#shouldHaveMoreThanOneAvailableStrategy",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testWithUpdatePeriodSet",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldDetectImportStatement",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#resourceAvailable",
            "ro.isdc.wro.model.resource.processor.decorator.TestExceptionHandlingProcessorDecorator#shouldPreserveContentWhenProcessingFails",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#cannotUseNullArgument",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#testOptionWithValueAndSpaces",
            "ro.isdc.wro.model.resource.processor.TestCssCompressorProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.support.naming.TestFolderHashEncoderNamingStrategy#cannotAcceptNullStream",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateWithEqeqeqOption",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#shouldLocateRecursiveWildcardResources",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#wildcardResourcesAreOrderedAlphabetically",
            "ro.isdc.wro.extensions.processor.TestNodeLessCssProcessor#shouldFailWhenInvalidLessCssIsProcessed",
            "ro.isdc.wro.http.TestWroFilter#testUnauthorizedRequestExceptionThrownInDEPLOYMENTMode",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#processSampleContentWithManyOptions",
            "ro.isdc.wro.extensions.processor.TestNodeTypeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.http.TestConfigurableWroFilter#shouldBeConfiguredBySpring",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithValidPostProcessor",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#shouldFindWildcardResourcesForFolderContainingSpaces",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#cannotPassNullArgument",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldNotInvokeMinimizePostProcessorWhenMinimizeIsNotRequired",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldSucceedAfterAFailure",
            "ro.isdc.wro.model.resource.processor.TestCssDataUriPreProcessor#shouldTransformResourcesFromFolder",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldSetCSSContentType",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePreProcessorWhenMinimizeIsRequired",
            "ro.isdc.wro.extensions.processor.support.dustjs.TestDustJs#cannotCompileUsingWrongPathCompiler",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#shouldBeThreadSafe",
            "ro.isdc.wro.util.TestSchedulerHelper#runnableNotStartedWhenPeriodIsZero",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldCreateHelperWithPreProcessor",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldInvokeListenerMethods",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#cannotAcceptNullProcessor",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldReturnEmptyStringWhenGroupHasNoResources",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldAcceptValidProcessorNameConfiguration",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePreProcessorWhenMinimizeIsNotRequired",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#testFromFolder",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotAcceptNullNameArgument",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldBeThreadSafe",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldBeThreadSafe",
            "ro.isdc.wro.http.support.TestAbstractProcessorsFilter#shouldDoNothingWhenNoProcessorProvided",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#shouldFailWhenProcessingCssWithErrors",
            "ro.isdc.wro.http.TestWroFilter#cannotAcceptInvalidAppFactoryClassNameIsSet",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#shouldBuildOptionsFromNullCSV",
            "ro.isdc.wro.model.group.TestGroup#shouldReplaceOnlyOneAndPreserveOtherResources",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldNotAcceptBadOptions",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardLocator",
            "ro.isdc.wro.extensions.manager.factory.TestBaseWroManagerFactory#defaultModelFactoryIsXml",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateWithUndefOption",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeIsMinimizeFlagOfDeepNestedDecoratedProcessor",
            "ro.isdc.wro.http.support.TestAbstractProcessorsFilter#shouldThrowExceptionWhenProcessorFails",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#cannotAcceptExtensionAwareConfigurationForPostProcessors",
            "ro.isdc.wro.model.factory.TestModelTransformerFactory#shouldChangeTheModelWhenTransformersProvided",
            "ro.isdc.wro.model.resource.processor.decorator.TestDefaultProcessorDecorator#shouldPreserveContentWhenProcessingFails",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldNotComplainAboutRecursiveImportWhenRunningConcurrently",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#shouldInvokeImportAwareProcessor",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithInvalidPreProcessor",
            "ro.isdc.wro.model.resource.TestResource#shouldCreateResource",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithValidPreProcessor",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testGroupWithUnknownGroupRef",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testResourceWithErrors",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldHaveNonEmptyListOfAvailableStrategies",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeDetector#cannotCheckInvalidUriForChange",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#testGetValidPostProcessorSet",
            "ro.isdc.wro.http.handler.TestReloadModelRequestHandler#shouldNotHandleRequest",
            "ro.isdc.wro.model.resource.support.TestDefaultResourceAuthorizationManager#shouldNotAuthorizeAddedResourceAfterClearIsInvoked",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#shouldUseTaskExecutorWhenRunningInParallel",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#shouldFailCreatingModelEvenWhenFirstAttemptFailsAndAutoDetectIsDisabled",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#cannotUseInvalidPreProcessorsSet",
            "ro.isdc.wro.extensions.processor.support.dustjs.TestDustJs#shouldUseConfiguredCompiler",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldCreateJsLintFormatReportFromFolder",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#testEmptyOptions",
            "ro.isdc.wro.extensions.http.handler.spi.TestDefaultRequestHandlerProvider#shouldNotFailWhenEachHandlerIsInvoked",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigurationTypeBackwardCompatibility",
            "ro.isdc.wro.http.support.TestRedirectedStreamServletResponseWrapper#cannotAcceptNullStream",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testMinimizedWithFalseParamInDEPLOYMENTMode",
            "ro.isdc.wro.model.resource.processor.decorator.TestSupportAwareProcessorDecorator#shouldCorrectlyDetectSupportOfDeepNestedProcessor",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigureDebug",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldCreateValidCacheKeyWhenRequestContainsAllRequiredInfo",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactoryDecorator#cannotDecorateModelFactoryWithNullTransformers",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldUseDefaultNameWhenInitParamNameIsNull",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#cannotAcceptNullProcessor",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardPresent4",
            "ro.isdc.wro.model.resource.processor.TestCommentStripperProcessor#testFromFolder",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldNotInjectUnsupportedAndInitializedTypes",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldUseTheConfigurationSet",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldProcessValidCss",
            "ro.isdc.wro.extensions.processor.TestJsonHPackProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#shouldBuildOptions",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldLoadUriLocatorsFromFilterConfigRatherThanFromConfigProperties",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldOverrideAvailableLocator",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldDetectJsMinAsMinimizeAwareProcessor",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testGroupWithNoWildcard",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeImageUrlInProtectedContextRelativeCssResource",
            "ro.isdc.wro.config.metadata.TestDefaultMetaDataFactory#cannotCreateFactoryWithNullMap",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldUseNoOpStrategyForValidAlias",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldCheckOnlyAfterTimeout",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateValidScript",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldNotRequireChangeAfterHashUpdate",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testEmptyOptions",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldCorrectlyDetectImport",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldFailWhenInitParamNameIsBlank",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldSetCorrectContentType",
            "ro.isdc.wro.extensions.processor.TestLess4jProcessor#shouldDetectProperlyCssImportStatements",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#shouldBuildOptionsFromCSV",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldNotFailWhenUsingFailingPreProcessor",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processResourceWithDataUriEncodedValue",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldHaveNoLocatorsWhenNoLocatorsInitParamSet",
            "ro.isdc.wro.model.group.TestGroup#shouldCollectCorrectNumberOfResourcesByType",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.TestJsonHPackProcessor#testUnpackFromFolder",
            "ro.isdc.wro.util.TestSchedulerHelper#scheduleWithDifferentPeriods",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackDecorator#shouldNotAcceptNullCallback",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotUseInvalidConfiguredModelFactory",
            "ro.isdc.wro.extensions.processor.TestHoganJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#shouldOverrideDefaultOptions",
            "ro.isdc.wro.manager.TestWroManager#shouldNotProcessGroupWithNoResources",
            "ro.isdc.wro.model.group.processor.TestInjector#cannotAcceptNullMap",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePostProcessorWhenMinimizeIsRequired",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testWildcard2Resources",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#shouldAssumeResourceNotChangedWhenStreamIsUnavailable",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldUseNoOpNamingStrategyByDefault",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldComputeCorrectTotalNumberOfErrors",
            "ro.isdc.wro.http.TestWroFilter#testProxyUnauthorizedRequest",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#testValidScript",
            "ro.isdc.wro.model.resource.processor.TestCssMinProcessor#shouldHandleWrongCss",
            "ro.isdc.wro.http.TestWroContextFilter#shouldInitializeContextForChainedFilters",
            "ro.isdc.wro.model.resource.support.naming.TestNamingStrategy#testWithExtension",
            "ro.isdc.wro.model.TestWroModelInspector#cannotAcceptNullModel",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#testErrorsWithNoFailFast",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeCorrectlySupportedResourceTypes",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldCreateNullCacheKeyWhenRequestDoesNotContainResourceType",
            "ro.isdc.wro.http.TestConfigurableWroFilterWithExtensions#extensionProcessorsShouldBeAvailable",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testCircularImports",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldComputeCorrectTotalResources",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldLoadUriLocatorsFromConfigurationFile",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testWroXmlWithInvalidResourcesAndIgnoreMissingResourcesTrue",
            "ro.isdc.wro.http.TestWroFilter#shouldChainTheIncludedRequestByDispatcher",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testParse",
            "ro.isdc.wro.model.resource.support.naming.TestNamingStrategy#cannotAcceptNullOriginalName",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithInvalidPostProcessor",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldHaveUnknownPathByDefault",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#shouldExtractGroupWhenUrlContainsEncodedSession",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testProcessorsExecutionOrder",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithCustomManagerFactoryWithInvalidResourceAndNotIgnoreMissingResources",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#cannotUseHeadersSetWronglyAsString",
            "ro.isdc.wro.extensions.processor.TestCopyrightKeeperProcessorDecorator#decorateJsMinProcessor",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldOnlyUseLastDot",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testValidCssUri",
            "ro.isdc.wro.extensions.processor.TestEmberJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#shouldLocateWildcard3Resources",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldHaveZeroTotalErrorsByDefault",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldLoadWroConfigurationFromServletContextAttribute",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#testWildcard2Resources",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#shouldLocateWildcard2Resources",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldUseNoOpNamingStrategyByDefault",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldNotRedundantlyDecorateCacheStrategy",
            "ro.isdc.wro.http.TestWroFilter#shouldInvokeModelAsJsonRequestHandler",
            "ro.isdc.wro.model.resource.processor.TestDefaultGroupExtractor#cannotExtractResourceTypeUsingNullUri",
            "ro.isdc.wro.extensions.processor.TestDustJsProcessor#testSimpleString",
            "ro.isdc.wro.model.resource.support.naming.TestFolderHashEncoderNamingStrategy#shouldRenameResourceWithSomeContent",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldFindHashBuilderProviders",
            "ro.isdc.wro.util.TestStringUtils#testCleanPath",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldInvokeImportDetected",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldReturnEmptyStringWhenEmptyContentIsProcessed",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWithValidFolder",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#testOptionWithEmptyValue",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#testWithUndefOption",
            "ro.isdc.wro.model.factory.TestFallbackAwareWroModelFactory#testLastValidIsOK",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#cannotAcceptObjectWhichIsNotProcessor",
            "ro.isdc.wro.model.resource.support.TestDefaultResourceAuthorizationManager#shouldContainOnlyOneResourceWhenSameIsAddedTwice",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#shouldExtractGroupWhenUrlContainsJsessionID",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardResourcesOrderedAlphabetically",
            "ro.isdc.wro.manager.TestWroManager#processValidModel",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldReportAllErrorsWhenFailFastIsFalse",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldApplyOnlyEligibleProcessors",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#testFromFolder",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#shouldOverrideDefaultOptions",
            "ro.isdc.wro.config.factory.TestPropertyWroConfigurationFactory#cannotSetInvalidConnectionTimeout",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testTwoConcurrentCreationCalls",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#decoratedModelShouldBeThreadSafe",
            "ro.isdc.wro.model.resource.processor.support.TestCssUrlInspector#shouldRemoveOriginalUrl",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotStoreAttributeOfInvalidType",
            "ro.isdc.wro.model.TestWroModelInspector#shouldFindTheGroupContainingResource",
            "ro.isdc.wro.extensions.processor.TestNodeLessCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#resourceUnavailable",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldBeDestroyableProcessorWhenDecoratingDestroyable",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#shouldCreateModelEvenWhenFirstAttemptFails",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldReturnCorrectFormatterByName",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveFontExtensionTtf",
            "ro.isdc.wro.extensions.support.TestDefaultProcessorProvider#shouldProvideGoogleClosureWhitespace",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testWildcardInexistentResources",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeEligibilityForProcessorWithCssType",
            "ro.isdc.wro.model.TestWroModel#shouldMergeNotEmptyModel",
            "ro.isdc.wro.extensions.processor.TestYUICssCompressorProcessor#shouldNotFailWhenProcessingInvalidCss",
            "ro.isdc.wro.extensions.processor.js.TestTypeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.factory.TestWildcardExpanderModelTransformer#testGroupWithInvalidResource",
            "ro.isdc.wro.model.group.TestGroup#shouldBeThreadSafeWhenMutated",
            "ro.isdc.wro.model.resource.processor.TestJawrCssMinifierProcessor#testFromFolder",
            "ro.isdc.wro.model.TestWroModelInspector#testGetGroupNames",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldUseHashEncoderStrategyForValidAlias",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#shouldBePossibleToExtendLessCssWithDifferentScriptStream",
            "ro.isdc.wro.manager.TestWroManager#testMD5Fingerprint",
            "ro.isdc.wro.model.resource.processor.TestDefaultGroupExtractor#testExtractInvalidResourceType",
            "ro.isdc.wro.util.TestWroUtil#testToJsMultilineString",
            "ro.isdc.wro.model.resource.factory.TestUriLocatorFactory#shouldFailWhenNoCapableLocatorAvailable",
            "ro.isdc.wro.model.group.TestGroup#cannotReplaceMissingResource",
            "ro.isdc.wro.http.support.TestAbstractProcessorsFilter#shouldApplyProcessor",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#shouldUseReservedNames",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testResourceWithUndefVariablesAndUndefOption",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testDeepRecursiveImports",
            "ro.isdc.wro.model.resource.processor.TestPlaceholderProcessor#noIgnoreForMissingVariables",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldSetCallback",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldIgnoreChangesOfGroupsWhichAreNotPartOfTargetGroups",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#testDispatchIncludeHasNoValidResource",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardPresent1",
            "ro.isdc.wro.extensions.processor.TestPackerJsProcessor#testFromFolder",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldNotAcceptInvalidReportFormat",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldCreateInstanceWhenValidFilterNameIsProvided",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testInvalidImports",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingTwoOptions",
            "ro.isdc.wro.util.TestWroUtil#testGzipSupport",
            "ro.isdc.wro.model.resource.processor.TestSingleLineCommentStripperProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testRequestDispatchedWithInclude",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldDetectChangeByDefault",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldSetPNGContentType",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#testWildcardImports",
            "ro.isdc.wro.model.resource.support.hash.TestHashStrategy#testMD5",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldReportOnlyFirstErrorWhenFailFastIsTrue",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#shouldApplyPatternsWhenExcludeNotMatches",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#testDefaultInstance",
            "ro.isdc.wro.http.TestConfigurableWroFilter#cannotAcceptInvalidProcessorNameConfiguration",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#shouldCreateConfigOverridenPath",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldNotFailWhenIndentationIsCorrect",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#shouldCreateValidModelWhenWroFileIsSet",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#createIncompleteModel",
            "ro.isdc.wro.extensions.manager.factory.TestBaseWroManagerFactory#shouldNotFailWhenDestroyingUninitializedFactory",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldUseDefaultEncodingWhenNoEncodingIsSet",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testMinimizedWithFalseParam",
            "ro.isdc.wro.extensions.model.factory.TestJsonModelFactory#createIncompleteModel",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#testWildcard3Resources",
            "ro.isdc.wro.model.resource.support.naming.TestDefaultHashEncoderNamingStrategy#shouldRenameResourceWithEmptyContent",
            "ro.isdc.wro.manager.callback.TestPerformanceLoggerCallback#testOnProcessingCompleteOnly",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.support.spi.TestDefaultConfigurableProvider#shouldHaveLocators",
            "ro.isdc.wro.model.resource.processor.decorator.TestExtensionsAwareProcessorDecorator#cannotAcceptNullExtension",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldSetJSContentType",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#cannotAcceptNullConfiguration",
            "ro.isdc.wro.model.resource.support.naming.TestFolderHashEncoderNamingStrategy#cannotAcceptNullResourceName",
            "ro.isdc.wro.extensions.processor.TestNodeTypeScriptProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.group.TestGroup#testReplaceWithFewResources",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#testGetValidPreProcessorSet",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveJSExtenstion",
            "ro.isdc.wro.model.resource.processor.decorator.TestExtensionsAwareProcessorDecorator#shouldApplyProcessorOnlyOnResourcesWithExtensionJs",
            "ro.isdc.wro.http.TestWroFilter#testJmxDisabled",
            "ro.isdc.wro.model.resource.processor.support.TestFallbackCssDataUriUrlInspector#shouldRemoveOriginalUrl",
            "ro.isdc.wro.model.resource.processor.decorator.TestBenchmarkProcessorDecorator#shouldNotInvokeBeforeAndAfterInProductionMode",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#cannotAcceptNullUri",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotAcceptNullServletContextArgument",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#cannotExecuteWhenInvalidResourcesPresentAndDoNotIgnoreMissingResources",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldHaveUnknownPathWhenNullPathIsSet",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#cannotAcceptNullProxyPrefix",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#shouldApplyPatternsWhenIncludeMatches",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#cannotExtractMinimizedWithNullRequest",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#cannotPassNullFolder",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testInvalidMojoWithWroManagerFactorySet",
            "ro.isdc.wro.extensions.processor.TestHandlebarsJsProcessor#testSimpleString",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldDetectChangeAfterHashChanged",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.support.naming.TestHashEncoderNamingStrategy#cannotAcceptNullResourceName",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactoryDecorator#cannotDecorateNullModel",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#shouldLeaveContentUnchangedWhenProcessorIsSkipped",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldAcceptInjectInitializedManager",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#cannotDecorateNullObject",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#cannotUseInvalidPostProcessorsSet",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldBeImportAwareForImportAwareProcessor",
            "ro.isdc.wro.util.TestSchedulerHelper#cannotAcceptNullArgument",
            "ro.isdc.wro.model.resource.processor.decorator.TestDefaultProcessorDecorator#shouldReturnOriginalDecoratedProcessor",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldUseTheWroManagerSet",
            "ro.isdc.wro.model.resource.processor.TestSemicolonAppenderPreProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#testWildcardUsingInvalidResource",
            "ro.isdc.wro.manager.TestWroManager#shouldDestroyDependenciesWhenDestoryed",
            "ro.isdc.wro.cache.TestCacheKey#addingNullAttributeKeyShouldHaveNoEffect",
            "ro.isdc.wro.http.TestWroFilter#requestValidGroup",
            "ro.isdc.wro.extensions.processor.TestNodeLessCssProcessor#shouldWorkProperlyWithCssImportPreProcessor",
            "ro.isdc.wro.model.resource.support.naming.TestHashEncoderNamingStrategy#shouldRenameResourceContainedInAFolder",
            "ro.isdc.wro.manager.TestWroManager#cannotRegisterNullCallback",
            "ro.isdc.wro.model.resource.support.naming.TestTimestampNamingStrategy#testNoExtension",
            "ro.isdc.wro.http.handler.TestLazyRequestHandlerDecorator#cannotDecorateNullInitializer",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testResourceWithUndefVariablesAndUndefOption",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#cannotAddZeroErrors",
            "ro.isdc.wro.extensions.processor.TestYUICssCompressorProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldCreateOverridenManagerFactoryWhenManagerClassPropertyIsMissing",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testOperaGradient",
            "ro.isdc.wro.http.handler.spi.TestDefaultRequestHandlerProvider#shouldNotFailWhenEachHandlerIsInvoked",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackRegistry#shouldInvokeRegisteredCallbacks",
            "ro.isdc.wro.model.TestWroModel#shouldNotReturnDuplicatedResources",
            "ro.isdc.wro.model.group.processor.TestInjector#cannotInjectUnsupportedAndUnitializedType",
            "ro.isdc.wro.model.resource.TestResource#shouldNotAcceptNullResourceType",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testSetNullOptions",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldUseTimestampNamingStrategyForValidAlias",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#cannotAcceptNullWroManager",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldOrderProviders",
            "ro.isdc.wro.config.support.TestContextPropagatingCallable#shouldInheritContextInCreatedThread",
            "ro.isdc.wro.model.resource.processor.TestCommentStripperProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#executeMultipleTimesDoesntThrowOutOfMemoryException",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeWithDotsImageUrlInContextRelativeCssResource",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldFailWhenUsingFailingPreProcessor",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testMultipleGroupWithGroupRef",
            "ro.isdc.wro.http.handler.TestReloadModelRequestHandler#shouldReloadCache",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#shouldBePossibleToExtendLessCssWithDifferentScriptStream",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#testFromFolder",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#shouldInjectEachLocatorProvidedByLocatorFactory",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithValidPreProcessor",
            "ro.isdc.wro.model.factory.TestConfigurableModelFactory#shouldUseCorrectDefaultStrategy",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingNullOptionProduceEmptyArray",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldGenerateXmlReportFileWithCheckstyleFormat",
            "ro.isdc.wro.http.support.TestResponseHeadersConfigurer#shouldUseHeadersSetAsString",
            "ro.isdc.wro.extensions.processor.TestDustJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#shouldUglifyFiles",
            "ro.isdc.wro.model.resource.TestResource#shouldSetMinimizeFlag",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldFailWhenThresholdEqualsWithNumberOfErrors",
            "ro.isdc.wro.manager.runnable.TestReloadModelRunnable#cannotAcceptNullArgument",
            "ro.isdc.wro.model.resource.processor.TestDuplicateAwareCssDataUriPreProcessor#processLargeDataUri",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#cannotAcceptInvalidJsonOptions",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldAcceptValidReportFormat",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#cannotGenerateReportWithInvalidFormat",
            "ro.isdc.wro.util.provider.TestProviderPriority#shouldCompareSamePriorityEqually",
            "ro.isdc.wro.config.support.TestContextPropagatingCallable#cannotAcceptNullCallable",
            "ro.isdc.wro.config.support.TestContextPropagatingCallable#cannotDecorateNullRunnable",
            "ro.isdc.wro.util.TestWroUtil#shouldCreateMultiLineFromNullString",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#testAdvancedOptimization",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#cannotLocateStreamWithNullFolder",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldCreateNullCacheKeyWhenRequestDoesNotGroupName",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldDetectGroupReferenceFromImportedModel",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#noFactoryProvided",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWithInvalidFolder",
            "ro.isdc.wro.cache.impl.TestLruMemoryCacheStrategy#testLruCache",
            "ro.isdc.wro.manager.callback.TestPerformanceLoggerCallback#testDefaultFlow",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testJsAndCssDestinationFolderSet",
            "ro.isdc.wro.extensions.processor.TestRhinoTypeScriptProcessor#shouldFailWhenInvalidTypeScriptIsProcessed",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldReloadOnlyCacheWhenClearCacheIsInvoked",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testDuplicateHeading",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testStyleWithWarning",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#shouldCreateNullCacheKeyWhenRequestDoesNotContainEnoughInfo",
            "ro.isdc.wro.http.TestWroFilter#shouldNotAcceptNullRequestHandlers",
            "ro.isdc.wro.model.group.TestGroup#testResoruceOfTypeFound",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldNotMinimizeDecoratedResourcesWithMinimizationDisabled",
            "ro.isdc.wro.extensions.support.spi.TestDefaultConfigurableProvider#shouldHavePostProcessors",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateWithEqeqOption2",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldGetAttribute",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotUseNullFilterConfig",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testMinimizedWithInvalidParamValue",
            "ro.isdc.wro.model.TestWroModelInspector#shouldReturnEmptyCollectionWhenAResourceIsNotContainedInAnyGroup",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldFormatCheckstypeReportFromFolder",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldSetNullAttribute",
            "ro.isdc.wro.model.TestWroModelInspector#testHasGroup",
            "ro.isdc.wro.model.group.TestGroup#shouldReplaceAResourceWithSameResource",
            "ro.isdc.wro.model.resource.processor.support.TestCssImportInspector#shouldRemoveImports",
            "ro.isdc.wro.http.TestWroFilter#testApiCallInDEVELOPMENTModeAndInvalidApiCall",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldFailWhenIndentationIsNotCorrect",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testGroupWithGroupRefImplicit",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingComplexOption",
            "ro.isdc.wro.http.handler.spi.TestDefaultRequestHandlerProvider#shoudProvideAtLeastOneRequestHandler",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithWroManagerFactorySet",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldStoreAttributeOfValidSubType",
            "ro.isdc.wro.model.resource.processor.decorator.TestExtensionsAwareProcessorDecorator#testMinimizeAwareDecorator1",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#testMinimizedWithoutParams",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#cannotAcceptNullResourceTypeForIsEligible",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokeMinimizeAwarePreProcessorWithResourceWantingMinimize",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldNotFailWhenNoErrorsFound",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.TestBeautifyJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldHaveNoLocatorsWhenNoUriLocatorsParamSet",
            "ro.isdc.wro.extensions.processor.js.TestCoffeeScriptProcessor#shouldUseFallbackProcessorWhenNodeNotSupported",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#testConfigPropertiesWithMultipleValidPostProcessor",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processServletContextResourceType",
            "ro.isdc.wro.manager.TestWroManager#testSHA1DefaultHashBuilder",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldNotFailWhenProcessingInvalidResource",
            "ro.isdc.wro.config.factory.TestFilterConfigWroConfigurationFactory#testConfigureCacheUpdatePeriod",
            "ro.isdc.wro.http.TestWroFilter#requestUrlRewrittenResource",
            "ro.isdc.wro.http.TestWroContextFilter#shouldUseWroConfigurationFoundInServletContext",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldGenerateXmlReportFile",
            "ro.isdc.wro.extensions.processor.support.TestObjectPoolHelper#cannotAcceptNullArgument",
            "ro.isdc.wro.extensions.processor.TestRhinoTypeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#cannotSetNullLints",
            "ro.isdc.wro.manager.TestWroManager#testWildcardDuplicatedResourcesShouldBeSkiped",
            "ro.isdc.wro.extensions.processor.js.TestTypeScriptProcessor#shouldUseNodeProcessorWhenSupported",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldCheckDifferentGroups",
            "ro.isdc.wro.manager.callback.TestLifecycleCallbackDecorator#shouldCatchCallbacksExceptionsAndContinueExecution",
            "ro.isdc.wro.extensions.processor.TestNodeTypeScriptProcessor#shouldFailWhenInvalidTypeScriptIsProcessed",
            "ro.isdc.wro.model.resource.processor.support.TestCssImportInspector#shouldDetectImportStatement",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldAssumeResourceChangedWhenModifiedSinceHeaderExtractionFails",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#shouldDetectChangeOfImportedResource",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldGenerateGroupMappingUsingCustomNamingStrategy",
            "ro.isdc.wro.extensions.processor.TestCJsonProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.TestEmberJsProcessor#testSimpleString",
            "ro.isdc.wro.model.resource.processor.TestDefaultGroupExtractor#cannotExtractGroupNamesUsingNullUri",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#shouldStripJsessionIDFromUrl",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#testFromFolder",
            "ro.isdc.wro.extensions.processor.TestHoganJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.cache.factory.TestCacheKeyFactoryDecorator#shouldInvokeCreateOnDecoratedObject",
            "ro.isdc.wro.extensions.processor.TestHandlebarsJsProcessor#shouldTransformFilesFromFolder",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldCreateManagerFactory",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactoryDecorator#shouldDecorateCacheStrategy",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldSupportOnlyCssResources",
            "ro.isdc.wro.model.resource.processor.support.TestCssImportInspector#shouldDetectMissingImportStatement",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldNotAcceptInvalidProcessor",
            "ro.isdc.wro.model.resource.processor.TestCssMinProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#testWildcard1Resources",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#defaultModelFactoryIsXml",
            "ro.isdc.wro.model.resource.support.TestDefaultResourceAuthorizationManager#shouldAuthorizeAddedResource",
            "ro.isdc.wro.http.TestWroFilter#shouldUnregisterMBeanOnDestroy",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldSetResponseLength",
            "ro.isdc.wro.extensions.processor.TestPackerJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.css.TestLessCssProcessor#shouldUseNodeProcessorWhenSupported",
            "ro.isdc.wro.util.TestWroUtil#computePathFromLocationWithDifferentContextRoot",
            "ro.isdc.wro.extensions.processor.TestJsLintProcessor#testWithOptionsSet",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#shouldInjectInnerModelFactories",
            "ro.isdc.wro.extensions.processor.js.TestTypeScriptProcessor#shouldUseFallbackProcessorWhenNodeNotSupported",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#recursiveGroupThrowsException",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldIdentifyProcessorSupport",
            "ro.isdc.wro.util.TestWroUtil#shouldNotMatchUrl",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldProcessMultipleGroups",
            "ro.isdc.wro.model.resource.processor.TestCssDataUriPreProcessor#shouldSupportOnlyCssResources",
            "ro.isdc.wro.manager.runnable.TestReloadCacheRunnable#cannotAcceptNullArgument",
            "ro.isdc.wro.model.group.TestDefaultGroupExtractor#cannotExtractGroupNameWithNullUri",
            "ro.isdc.wro.http.TestWroFilter#apiCallInDeploymentMode",
            "ro.isdc.wro.config.factory.TestServletContextPropertyWroConfigurationFactory#shouldCreateConfigFromValidLocationAndOverrideAProperty",
            "ro.isdc.wro.extensions.processor.TestJsLintProcessor#shouldFailWhenScriptContainsErrors",
            "ro.isdc.wro.http.support.TestRedirectedStreamServletResponseWrapper#shouldRedirectStream",
            "ro.isdc.wro.util.provider.TestProviderFinder#cannotFindAnyProviderWhenLookupFails",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#shouldAcceptBadOptions",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateWithMultipleOptions",
            "ro.isdc.wro.model.resource.processor.support.TestCssImportInspector#shouldFindImports",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#cannotAcceptObjectWhichIsNotProcessor",
            "ro.isdc.wro.maven.plugin.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredModelFactory",
            "ro.isdc.wro.model.resource.support.naming.TestTimestampNamingStrategy#testWithExtension",
            "ro.isdc.wro.extensions.support.spi.TestDefaultConfigurableProvider#shouldHavePreProcessors",
            "ro.isdc.wro.extensions.processor.css.TestLessCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldCreateEmptyModelWhenAllGroupsAreAbstract",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#cannotAcceptNullImageUrl",
            "ro.isdc.wro.config.factory.TestPropertyWroConfigurationFactory#invalidBooleanFallbacksToFalse",
            "ro.isdc.wro.model.resource.processor.decorator.TestCopyrightKeeperProcessorDecorator#testCopyrightStripperProcessor",
            "ro.isdc.wro.extensions.processor.TestDustJsProcessor#shouldTransformFilesFromFolder",
            "ro.isdc.wro.http.TestWroFilter#cannotProcessInvalidUri",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldChangeSupportedTypesWhenInternalMethodIsOverriden",
            "ro.isdc.wro.model.resource.processor.factory.TestConfigurableProcessorsFactory#testInvalidPreProcessorSet",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#cannotConfigureInvalidAlias",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.processor.decorator.TestSupportAwareProcessorDecorator#shouldInvokeDecoratedProcessorWhenProcessorIsSupported",
            "ro.isdc.wro.util.TestSchedulerHelper#schedulerHelperIsSynchronized",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#shouldLoadWroManagerFactoryFromServletContextAttribute",
            "ro.isdc.wro.model.resource.locator.wildcard.TestJarWildcardStreamLocator#shouldGetJarFileFromFile",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldUseTimestampNamingStrategyForValidAlias",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotUseInvalidPreProcessorsSet",
            "ro.isdc.wro.TestWroRuntimeException#shouldNotWrapWhenExceptionIsAWroRuntimeException",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#shouldValidateWithNoOptions",
            "ro.isdc.wro.extensions.processor.TestSassCssProcessor#testFromFolder",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#testDuplicateGroupName",
            "ro.isdc.wro.manager.TestWroManager#testAggregatedComputedFolder",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldNotFailWhenASingleProviderFails",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testMojoWithConfigurableWroManagerFactory",
            "ro.isdc.wro.model.resource.support.hash.TestHashStrategy#testSHA1",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#onMockFactoryProvided",
            "ro.isdc.wro.extensions.support.lint.TestResourceLintReport#shouldHaveNoLintsByDefault",
            "ro.isdc.wro.manager.factory.TestBaseWroManagerFactory#shouldReloadOnlyModelWhenClearModelIsInvoked",
            "ro.isdc.wro.extensions.processor.TestHandlebarsJsProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testGroupWithGroupRefWithoutOrder",
            "ro.isdc.wro.model.resource.processor.TestCssVariablesProcessor#testFromFolder",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldNotFailWhenNoErrorsAreReported",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotConfigureInvalidCacheStrategy",
            "ro.isdc.wro.cache.factory.TestDefaultCacheKeyFactory#cannotBuildCacheKeyFromNullRequest",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldFailWhenInvalidSassCssIsProcessed",
            "ro.isdc.wro.extensions.processor.TestLess4jProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeImageUrlInClasspathCssResourceWhenContextPathIsNotDefault",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#shouldUseOverridenNamingStrategyMap",
            "ro.isdc.wro.http.TestWroFilter#requestInvalidGroup",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#usePredefOptions",
            "ro.isdc.wro.http.TestWroServletContextListener#cannotSetNullWroConfiguration",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldReturnClasspathResource",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#testWildcardInexistentResources",
            "ro.isdc.wro.model.resource.processor.TestJawrCssMinifierProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#cannotExecuteWhenInvalidResourcesPresentAndDoNotIgnoreMissingResources",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldTestFromFolder",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#cannotCreateInvalidConfiguredManagerFactory",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadTwoTimesForDifferentKeys",
            "ro.isdc.wro.model.resource.support.naming.TestHashEncoderNamingStrategy#cannotAcceptNullStream",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldCreateNonEmptyModelWhenSomeGroupsAreAbstract",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkContextRelativeUrlInClasspathCssResource",
            "ro.isdc.wro.extensions.processor.TestLess4jProcessor#testFromFolder",
            "ro.isdc.wro.extensions.http.TestSpringWroFilter#testFilterWithoutInitParam",
            "ro.isdc.wro.model.resource.locator.wildcard.TestDefaultWildcardStreamLocator#testWildcardPresent3",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldFailWhenInvalidResourceIsFound",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldDetectConfiguredLocators",
            "ro.isdc.wro.util.provider.TestProviderPriority#shouldSortFromLowToHigh",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#testProcessorsExecutionOrder",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#shouldCompileAllFromFolderUsingBareOption",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testOnlyCssDestinationFolderSet",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#shouldDetectResourceChange",
            "ro.isdc.wro.model.resource.support.naming.TestNamingStrategy#testNoExtension",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldLoadValidManagerClassConfiguredInProperties",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#shouldFindWildcardResourcesForFolderContainingSpaces",
            "ro.isdc.wro.http.support.TestRedirectedStreamServletResponseWrapper#shouldRedirectWriter",
            "ro.isdc.wro.http.TestWroFilter#testFilterInitParamsAreSetProperly",
            "ro.isdc.wro.model.group.processor.TestInjectorBuilder#shouldBuildValidInjectorWithFewFieldsSet",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#shouldWorkProperlyWithCssImportPreProcessor",
            "ro.isdc.wro.extensions.processor.TestRhinoLessCssProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#cannotUpdateHashForNullGroup",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#testSetNullOptions",
            "ro.isdc.wro.extensions.processor.TestHoganJsProcessor#shouldTransformFilesFromFolder",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources",
            "ro.isdc.wro.extensions.processor.TestCJsonProcessor#testPackFromFolder",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldNotFailWhenThresholdIsGreaterThanNumberOfErrors",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitOptionsWithHiphen",
            "ro.isdc.wro.extensions.locator.TestWebjarUriLocator#cannotFindInvalidWebjar",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testResourceWithUndefVariables",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#cannotProcessInvalidCss",
            "ro.isdc.wro.config.factory.TestPropertyWroConfigurationFactory#configWithProperties",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#cannotExecuteWhenInvalidResourcesPresentAndDoNotIgnoreMissingResources",
            "ro.isdc.wro.model.factory.TestConfigurableModelFactory#cannotConfigureInvalidStrategy",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#testComputedAggregatedFolder",
            "ro.isdc.wro.model.resource.support.naming.TestDefaultHashEncoderNamingStrategy#cannotAcceptNullResourceName",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#shouldComputeCorrectlyAvailableStrategiesDependingOnProviderFinder",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldUseNullMBeanWhenNotSet",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldOverrideCustomProcessorsFactory",
            "ro.isdc.wro.http.TestConfigurableWroFilter#shouldUseConfiguredMBeanNameWhenSet",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldFindProcessorProviders",
            "ro.isdc.wro.model.resource.processor.TestLessCssImportPreProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldComputeEligibilityForMinimizeAwareProcessorWithCssType",
            "ro.isdc.wro.http.support.TestServletContextAttributeHelper#cannotGetObjectForNullAttribute",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotConfigureInvalidRequestHandler",
            "ro.isdc.wro.model.resource.support.change.TestResourceWatcher#shouldNotDetectErroneouslyChange",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#shouldGenerateReportWithCheckstyleFormat",
            "ro.isdc.wro.extensions.model.factory.TestSmartWroModelFactory#testWithInvalidWroFileSet",
            "ro.isdc.wro.http.TestWroFilter#shouldNotChainWhenFilterIsEnabled",
            "ro.isdc.wro.extensions.processor.TestRhinoTypeScriptProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#processServletContextResourceTypeWithAggregatedFolderSet",
            "ro.isdc.wro.model.resource.processor.TestFallbackCssDataUriProcessor#shouldTransformLargeResources",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#testConfigureCacheUpdatePeriod",
            "ro.isdc.wro.manager.TestWroManager#testMinimizeAttributeIsFalseOnResource",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#shouldFailWhenProcessingInvalidResource",
            "ro.isdc.wro.model.resource.support.naming.TestConfigurableNamingStrategy#cannotSetNullProperties",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingOneOption",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldInjectContext",
            "ro.isdc.wro.manager.runnable.TestReloadModelRunnable#shouldDestroyModelWhenInvokingRun",
            "ro.isdc.wro.extensions.processor.TestNodeCoffeeScriptProcessor#shouldCompileAllFromFolder",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#testWithNoOptions",
            "ro.isdc.wro.extensions.processor.TestGoogleClosureCompressorProcessor#shouldMinimizeWhenUsedAsLazyProcessor",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldFailWhenInvalidResourcesAreUsed",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#cannotConfigureInvalidNamingStrategy",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldUseCRC32StrategyForValidAlias",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelParser#testGroupWithGroupRef",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldNotInvokeMinimizePreProcessorWhenMinimizeIsNotRequired",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldCorrectlyDetectImportWithSimpleQuotes",
            "ro.isdc.wro.model.resource.processor.TestConformColorsCssProcessor#testFromFolder",
            "ro.isdc.wro.model.resource.processor.TestPlaceholderProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.http.handler.TestReloadCacheRequestHandler#shouldReloadCache",
            "ro.isdc.wro.config.factory.TestPropertiesAndFilterConfigWroConfigurationFactory#shouldBuildConfigurationEvenWhenDefaultPropertiesFileIsNotAvailable",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#cannotAddNegativeNumberOfErrors",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#testInvalidUrl",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldLeaveContentUnchangedWhenProcessorIsSkipped",
            "ro.isdc.wro.manager.TestWroManager#shouldNotIgnoreInvalidImportWhenImportedResourceIsMissing",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#shouldSupportOnlyCssResources",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldDetectChangeForUpdatedGroupsOnly",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#shouldBuildOptionsFromNullArray",
            "ro.isdc.wro.extensions.processor.TestRhinoCoffeeScriptProcessor#testExceptions",
            "ro.isdc.wro.extensions.support.lint.TestReportXmlFormatter#shouldFormatLintReportFromFolder",
            "ro.isdc.wro.cache.factory.TestCacheKeyFactoryDecorator#cannotDecorateNullObject",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#shouldGenerateXmlReportFileWithDefaultFormat",
            "ro.isdc.wro.model.resource.processor.TestFallbackCssDataUriProcessor#shouldTransformResourcesFromFolder",
            "ro.isdc.wro.maven.plugin.TestCssLintMojo#testResourceWithErrors",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#testWroXmlWithInvalidResourcesAndIgnoreMissingResourcesTrue",
            "ro.isdc.wro.extensions.processor.support.coffeescript.TestCoffeeScript#shouldCompileSimpleAlert",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotProcessWithExcludeWhenResourceIsUnknown",
            "ro.isdc.wro.extensions.support.TestDefaultProcessorProvider#shouldLoadNonEmptyPreProcessors",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldNotBeImportAwareForDefaultProcessor",
            "ro.isdc.wro.model.resource.processor.TestCssVariablesProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#createValidModelContainingHiphen",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotIncludeNullPatterns",
            "ro.isdc.wro.model.resource.TestResource#cannotCreateResourceWithUnkownExtension",
            "ro.isdc.wro.http.TestWroFilter#testFilterInitParamsAreWrong",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldUseOverridenManagerFactory",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotAcceptRequestsWithWrongURI",
            "ro.isdc.wro.cache.impl.TestMemoryCacheStrategy#testCache",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#testOptionWithNoValue",
            "ro.isdc.wro.manager.TestWroManager#shouldClearAuthorizationManagerWhenModelPeriodChanged",
            "ro.isdc.wro.util.provider.TestProviderFinder#shouldFindNamingStrategyProviders",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#checkRelativeWithDotsImageUrlInClasspathCssResource",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#shouldLocateWildcard1Resources",
            "ro.isdc.wro.model.group.processor.TestGroupsProcessor#shouldFailWhenGroupHasNoResourcesAndIgnoreEmptyGroupIsFalse",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#cannotIncludeNullProcessor",
            "ro.isdc.wro.extensions.processor.TestCssLintProcessor#testFromFolder",
            "ro.isdc.wro.manager.TestWroManager#shouldDestroyDestroyableProcessorWhenManagerIsDestroyed",
            "ro.isdc.wro.extensions.processor.support.TestObjectPoolHelper#shouldReuseExistingObject",
            "ro.isdc.wro.model.resource.processor.TestPlaceholderProcessor#testProcessor",
            "ro.isdc.wro.http.handler.factory.TestDefaultRequestHandlerFactory#shouldCreateListOfDefaultRequestHandlers",
            "ro.isdc.wro.model.resource.processor.decorator.TestCopyrightKeeperProcessorDecorator#testMinimizeAwareDecorator1",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldReturnEmptyStringWhenNullContentIsProcessed",
            "ro.isdc.wro.extensions.processor.css.TestLessCssProcessor#shouldWorkAsAPreProcessorWithCssImportPreProcessor",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldNotFailWhenInvalidResourceIsFound",
            "ro.isdc.wro.cache.factory.TestCacheKeyFactoryDecorator#shouldReturnCorrectDecorateObject",
            "ro.isdc.wro.manager.factory.TestDefaultWroManagerFactory#shouldUseValidModelIsProvidedWhenUsingConfigurableWroManagerFactory",
            "ro.isdc.wro.model.resource.processor.support.TestImageUrlRewriter#cannotAcceptNullCssUri",
            "ro.isdc.wro.util.TestProxyFactory#shouldCreateProxyForAValidObject",
            "ro.isdc.wro.http.handler.TestResourceProxyRequestHandler#shouldNotAcceptCallsTo_OtherUris",
            "ro.isdc.wro.extensions.processor.TestJsHintProcessor#canSetNullOptions",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsHint#testInvalidOptions",
            "ro.isdc.wro.extensions.support.TestDefaultProcessorProvider#shouldLoadNonEmptyPostProcessors",
            "ro.isdc.wro.util.TestWroUtil#cannotComputeEmptyLocation",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveUnknownExtenstion",
            "ro.isdc.wro.http.TestWroFilter#testReloadModelCall",
            "ro.isdc.wro.model.resource.processor.TestCssUrlRewritingProcessor#shouldUseCorrectAggregatedFolderSetEvenWhenContextIsChangedInAnotherThread",
            "ro.isdc.wro.extensions.processor.TestRhinoCoffeeScriptProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.http.TestWroFilter#shouldUseCorrectWroManagerFactoryWhenOneIsSet",
            "ro.isdc.wro.model.factory.TestDefaultWroModelFactoryDecorator#shouldNotRedundantlyDecorateCacheStrategy",
            "ro.isdc.wro.model.TestWroModelInspector#shouldReturnAllResourcesFromModel",
            "ro.isdc.wro.model.resource.processor.TestFallbackCssDataUriProcessor#shouldSupportOnlyCssResources",
            "ro.isdc.wro.extensions.processor.TestLess4jProcessor#shouldFailWhenInvalidLessCssIsProcessed",
            "ro.isdc.wro.extensions.processor.support.TestObjectPoolHelper#cannotSetNullObjectPool",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredModelFactory",
            "ro.isdc.wro.extensions.processor.support.csslint.TestCssLint#shouldHaveNoErrorWhenNoOptions",
            "ro.isdc.wro.model.group.TestGroup#testReplaceWithEmptyCollection",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#shouldRequireChangeByDefault",
            "ro.isdc.wro.util.provider.TestDefaultConfigurableProvider#shouldHaveLocators",
            "ro.isdc.wro.http.handler.TestLazyRequestHandlerDecorator#test",
            "ro.isdc.wro.manager.factory.TestConfigurableWroManagerFactory#shouldUseConfiguredHashStrategy",
            "ro.isdc.wro.model.resource.locator.TestClasspathUriLocator#shouldNotLocateWildcardResourcesWhenWildcardIsDisabled",
            "ro.isdc.wro.extensions.processor.TestDojoShrinksafeCompressorProcessor#testFromFolder",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#shouldProcessMultipleGroupsMore",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#testErrorsWithNoFailFast",
            "ro.isdc.wro.model.resource.support.hash.TestConfigurableHashStrategy#shouldUseOverridenStrategyMap",
            "ro.isdc.wro.model.group.processor.TestInjector#canInjectContextOutsideOfContextScope",
            "ro.isdc.wro.extensions.processor.support.dustjs.TestDustJs#shouldCompileNullContent",
            "ro.isdc.wro.extensions.model.factory.TestJsonModelFactory#testInvalidStream",
            "ro.isdc.wro.extensions.processor.TestPathPatternProcessorDecorator#shouldNotApplyPatternsWhenExcludeMatches",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldDetectIncrementalChange",
            "ro.isdc.wro.maven.plugin.TestJsHintMojo#cannotGenerateReportWithInvalidFormat",
            "ro.isdc.wro.util.TestSchedulerHelper#runLongRunningThread",
            "ro.isdc.wro.model.resource.factory.TestUriLocatorFactory#testValidUri",
            "ro.isdc.wro.maven.plugin.TestJsLintMojo#usePredefOptions",
            "ro.isdc.wro.model.resource.processor.TestCssImportPreProcessor#shouldCorrectlyDetectImportWithDoubleQuotes",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#predefOptionWithManyOptions",
            "ro.isdc.wro.model.resource.processor.decorator.TestDefaultProcessorDecorator#cannotAcceptNullCriteria",
            "ro.isdc.wro.model.group.processor.TestInjector#shouldInjectWroConfiguration",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeDetector#shouldRequireChangeAfterReset",
            "ro.isdc.wro.model.resource.processor.decorator.TestCopyrightKeeperProcessorDecorator#testMinimizeAwareDecorator2",
            "ro.isdc.wro.model.resource.locator.TestServletContextUriLocator#shouldFindWildcardResourcesForFolderContainingSpaces",
            "ro.isdc.wro.config.factory.TestPropertyWroConfigurationFactory#createDefaultConfig",
            "ro.isdc.wro.model.resource.support.hash.TestHashStrategy#testCRC32",
            "ro.isdc.wro.model.resource.processor.decorator.TestMinimizeAwareProcessorDecorator#shouldInvokePostProcessorWhenMinimizeIsNotRequired",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldProcessValidSass",
            "ro.isdc.wro.extensions.model.factory.TestGroovyModelFactory#createGroupReferenceOrderShouldNotMatter",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldContainOnlyNonAbstractGroups",
            "ro.isdc.wro.http.TestWroServletContextListener#shouldUseOverridenConfiguration",
            "ro.isdc.wro.model.resource.processor.decorator.TestImportAwareProcessorDecorator#shouldNotInvokePostProcessorWhichIsNotImportAware",
            "ro.isdc.wro.model.resource.locator.factory.TestConfigurableLocatorFactory#cannotSetInvalidLocatorAlias",
            "ro.isdc.wro.http.TestWroFilter#shouldUseInitiallySetManagerEvenIfAnInvalidAppFactoryClassNameIsSet",
            "ro.isdc.wro.model.resource.support.change.TestResourceChangeInfo#cannotIfCheckRequiredForNullGroup",
            "ro.isdc.wro.util.TestWroUtil#computeServletPathFromLocation",
            "ro.isdc.wro.model.resource.processor.decorator.TestProcessorDecorator#shouldDecoratePostProcessor",
            "ro.isdc.wro.http.support.TestContentTypeResolver#shouldResolveCSSExtenstion",
            "ro.isdc.wro.http.support.TestAbstractProcessorsFilter#shouldDoNothingWhenNullProcessorsProvided",
            "ro.isdc.wro.model.factory.TestXmlModelFactory#shouldBeThreadSafe",
            "ro.isdc.wro.http.TestWroFilter#testDisableCacheInitParamInDevelopmentMode",
            "ro.isdc.wro.model.resource.processor.decorator.TestExceptionHandlingProcessorDecorator#shouldInvokeDecoratedProcessor",
            "ro.isdc.wro.model.resource.support.naming.TestNamingStrategy#cannotAcceptNullStream",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#splitingEmptyOption",
            "ro.isdc.wro.extensions.model.resource.TestConfigurableAntPathPatternsResourceAuthorizationManager#shoudAuthorizeResourceMatchingExistingPattern",
            "ro.isdc.wro.extensions.processor.TestUglifyJsProcessor#shouldSupportCorrectResourceTypes",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#shouldLocateRecursiveWildcardResources",
            "ro.isdc.wro.extensions.processor.support.linter.TestOptionsBuilder#predefOptionWithQuotes",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldAcceptRequestsWithCorrectURI",
            "ro.isdc.wro.model.resource.locator.factory.TestDefaultUriLocatorFactory#shouldUseServletContextLocatorWithPreferredLocatorStrategy",
            "ro.isdc.wro.extensions.processor.support.linter.TestJsLint#testInvalidScript",
            "ro.isdc.wro.model.TestWroModel#cannotMergeNullModel",
            "ro.isdc.wro.model.resource.processor.support.TestLessCssImportInspector#shouldFindImports"
        ],
        "passed_tests": [],
        "failed_tests": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "chaos_failed_tests": [
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadOnlyOnceForTheSameKey",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldNotHaveVerboseInfoLog",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.maven.plugin.support.TestForkJoinTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldTestFromFolder",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#executeMultipleTimesDoesntThrowOutOfMemoryException",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadTwoTimesForDifferentKeys",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldSucceedAfterAFailure"
        ],
        "flaky_tests": [
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldFailWhenInvalidSassCssIsProcessed",
            "ro.isdc.wro.cache.support.TestDefaultSynchronizedCacheStrategyDecorator#shouldCheckOnlyAfterTimeout",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldProcessValidSass",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.model.resource.locator.TestUrlUriLocator#testValidUrl",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#cannotProcessInvalidCss",
            "ro.isdc.wro.model.resource.locator.support.TestDispatcherStreamLocator#canLocateValidResource",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldTestFromFolder",
            "ro.isdc.wro.extensions.processor.support.sass.TestRubySassEngine#shouldProcessValidCss",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#executeMultipleTimesDoesntThrowOutOfMemoryException",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldSucceedAfterAFailure"
        ],
        "tests": [],
        "od_tests": [
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadTwoTimesForDifferentKeys"
        ],
        "config_only_sleep_decrease": [
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_random_max": [
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldTestFromFolder",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#executeMultipleTimesDoesntThrowOutOfMemoryException",
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources",
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldSucceedAfterAFailure"
        ],
        "config_only_sleep_increase": [
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadOnlyOnceForTheSameKey",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.maven.plugin.support.TestForkJoinTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.cache.support.TestSynchronizedCacheStrategyDecorator#shouldInvokeLoadTwoTimesForDifferentKeys",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_time_round": [
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_random_fix": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_locale_fix": [
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_date_relative": [
            "ro.isdc.wro.extensions.processor.TestBourbonCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_socket_0.1": [
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_clock_relative": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_time_increment": [
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.maven.plugin.support.TestProgressIndicator#shouldNotHaveVerboseInfoLog",
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.maven.plugin.support.TestForkJoinTaskExecutor#shouldBeFasterWhenRunningMultipleSlowTasks",
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_time_relative": [
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_random_min": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_sleep_random": [
            "ro.isdc.wro.model.group.processor.TestPreProcessorExecutor#preProcessingInParallelIsFaster",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_zone_fix": [
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_time_speedup": [
            "ro.isdc.wro.util.concurrent.TestTaskExecutor#shouldHaveMinimalOverheadWhenRunningASingleTask",
            "ro.isdc.wro.maven.plugin.TestWro4jMojo#shouldBeFasterWhenRunningProcessingInParallel"
        ],
        "config_only_time_slow": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_fix_date": [
            "ro.isdc.wro.extensions.processor.TestRubySassCssProcessor#shouldBeThreadSafe",
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ],
        "config_only_date_bk": [
            "ro.isdc.wro.extensions.http.handler.TestModelAsJsonRequestHandler#shouldNotProvideProxyUriForExternalResources"
        ]
    },
    "tootallnate-java-websocket": {
        "total_tests": [
            "org.java_websocket.drafts.Draft_6455Test#createFramesBinary",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario1",
            "org.java_websocket.framing.TextFrameTest#testConstructor",
            "org.java_websocket.framing.FramedataImpl1Test#testDefaultValues",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario7",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase6",
            "org.java_websocket.framing.BinaryFrameTest#testIsValid",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferCheckNullSource",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario2",
            "org.java_websocket.util.ByteBufferUtilsTest#testEmptyByteBufferNewObject",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario0",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase7",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase14",
            "org.java_websocket.drafts.Draft_6455Test#testGetProtocol",
            "org.java_websocket.drafts.Draft_6455Test#testGetExtension",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.extensions.DefaultExtensionTest#testIsFrameValid",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase4",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase4",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferBigToSmall",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario3",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase8",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase3",
            "org.java_websocket.issues.Issue713Test#testIssue",
            "org.java_websocket.framing.TextFrameTest#testIsValid",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario3",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase3",
            "org.java_websocket.framing.PongFrameTest#testConstructor",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.drafts.Draft_6455Test#postProcessHandshakeResponseAsServer",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase11",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario8",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase10",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase9",
            "org.java_websocket.framing.CloseFrameTest#testIsValid",
            "org.java_websocket.framing.BinaryFrameTest#testExtends",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario0",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase1",
            "org.java_websocket.issues.Issue666Test#testServer",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8",
            "org.java_websocket.framing.PongFrameTest#testIsValid",
            "org.java_websocket.drafts.Draft_6455Test#testToString",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario1",
            "org.java_websocket.framing.BinaryFrameTest#testConstructor",
            "org.java_websocket.framing.TextFrameTest#testExtends",
            "org.java_websocket.extensions.DefaultExtensionTest#testCopyInstance",
            "org.java_websocket.drafts.Draft_6455Test#acceptHandshakeAsServer",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase1",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario9",
            "org.java_websocket.drafts.Draft_6455Test#testGetKnownProtocols",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase7",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario7",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario5",
            "org.java_websocket.drafts.Draft_6455Test#testHashCode",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferCheckNullDest",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario9",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.framing.PingFrameTest#testExtends",
            "org.java_websocket.framing.ContinuousFrameTest#testIsValid",
            "org.java_websocket.framing.PingFrameTest#testConstructor",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferCheckNullBoth",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario7",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario0",
            "org.java_websocket.protocols.ProtocolTest#testAcceptProvidedProtocol",
            "org.java_websocket.framing.CloseFrameTest#testExtends",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase9",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase2",
            "org.java_websocket.drafts.Draft_6455Test#testGetKnownExtensions",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario2",
            "org.java_websocket.issues.Issue609Test#testIssue",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario9",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario6",
            "org.java_websocket.extensions.DefaultExtensionTest#testDecodeFrame",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6",
            "org.java_websocket.framing.PongFrameTest#testExtends",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario1",
            "org.java_websocket.extensions.DefaultExtensionTest#testGetProvidedExtensionAsClient",
            "org.java_websocket.drafts.Draft_6455Test#testConstructor",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase5",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase15",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario1",
            "org.java_websocket.client.AttachmentTest#testDefaultValue",
            "org.java_websocket.drafts.Draft_6455Test#createFramesText",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario8",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase2",
            "org.java_websocket.extensions.DefaultExtensionTest#testGetProvidedExtensionAsServer",
            "org.java_websocket.protocols.ProtocolTest#testEquals",
            "org.java_websocket.util.ByteBufferUtilsTest#testEmptyByteBufferCapacity",
            "org.java_websocket.framing.FramedataImpl1Test#testSetters",
            "org.java_websocket.framing.PingFrameTest#testIsValid",
            "org.java_websocket.extensions.DefaultExtensionTest#testAcceptProvidedExtensionAsServer",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase11",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase5",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario8",
            "org.java_websocket.protocols.ProtocolTest#testCopyInstance",
            "org.java_websocket.misc.OpeningHandshakeRejectionTest#testHandshakeRejectionTestCase0",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase10",
            "org.java_websocket.framing.ContinuousFrameTest#testConstructor",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario5",
            "org.java_websocket.extensions.DefaultExtensionTest#testAcceptProvidedExtensionAsClient",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario5",
            "org.java_websocket.drafts.Draft_6455Test#testEquals",
            "org.java_websocket.protocols.ProtocolTest#testConstructor",
            "org.java_websocket.protocols.ProtocolTest#testHashCode",
            "org.java_websocket.protocols.ProtocolTest#testGetProvidedProtocol",
            "org.java_websocket.extensions.DefaultExtensionTest#testEquals",
            "org.java_websocket.extensions.DefaultExtensionTest#testEncodeFrame",
            "org.java_websocket.framing.FramedataImpl1Test#testAppend",
            "org.java_websocket.extensions.DefaultExtensionTest#testHashCode",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase13",
            "org.java_websocket.client.AttachmentTest#testSetter",
            "org.java_websocket.extensions.DefaultExtensionTest#testToString",
            "org.java_websocket.issues.Issue732Test#testIssue",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase17",
            "org.java_websocket.protocols.ProtocolTest#testToString",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase6",
            "org.java_websocket.issues.Issue666Test#testClient",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario4",
            "org.java_websocket.issues.Issue621Test#testIssue",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferSmallToBig",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase12",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testProtocolRejectionTestCase0",
            "org.java_websocket.drafts.Draft_6455Test#testCopyInstance",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario4",
            "org.java_websocket.drafts.Draft_6455Test#testReset",
            "org.java_websocket.drafts.Draft_6455Test#acceptHandshakeAsClient",
            "org.java_websocket.framing.PongFrameTest#testCopyConstructor",
            "org.java_websocket.drafts.Draft_6455Test#postProcessHandshakeRequestAsClient",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase8",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue580Test#runCloseBlockingTestScenario9",
            "org.java_websocket.drafts.Draft_6455Test#testGetCloseHandshakeType",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase16",
            "org.java_websocket.framing.FramedataImpl1Test#testGet",
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario3",
            "org.java_websocket.framing.CloseFrameTest#testConstructor",
            "org.java_websocket.util.ByteBufferUtilsTest#testTransferByteBufferSmallToEmpty",
            "org.java_websocket.framing.ContinuousFrameTest#testExtends"
        ],
        "passed_tests": [],
        "failed_tests": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario8",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6"
        ],
        "chaos_failed_tests": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario1",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario9",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario1",
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8"
        ],
        "flaky_tests": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario1",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario1",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario8",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario9",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5",
            "org.java_websocket.issues.Issue580Test#runNoCloseBlockingTestScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario9",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario3",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.protocols.ProtoclHandshakeRejectionTest#testHandshakeRejectionTestCase10",
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario5",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario7"
        ],
        "tests": [],
        "od_tests": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6"
        ],
        "config_only_sleep_decrease": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario0"
        ],
        "config_only_random_max": [
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario1",
            "org.java_websocket.issues.Issue661Test#initializationError"
        ],
        "config_only_sleep_increase": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario1",
            "org.java_websocket.issues.Issue677Test#testIssue",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8"
        ],
        "config_only_time_round": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5"
        ],
        "config_only_random_fix": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6"
        ],
        "config_only_locale_fix": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue661Test#initializationError"
        ],
        "config_only_date_relative": [
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6"
        ],
        "config_only_socket_0.1": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario9",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario4",
            "org.java_websocket.issues.Issue677Test#testIssue"
        ],
        "config_only_clock_relative": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError"
        ],
        "config_only_time_increment": [
            "org.java_websocket.issues.Issue661Test#initializationError"
        ],
        "config_only_time_relative": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario1",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario5",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6"
        ],
        "config_only_random_min": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario2",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario2"
        ],
        "config_only_sleep_random": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario7",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario6"
        ],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [
            "org.java_websocket.issues.Issue256Test#runReconnectScenario0",
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario8"
        ],
        "config_only_fix_date": [
            "org.java_websocket.issues.Issue661Test#initializationError",
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario6"
        ],
        "config_only_date_bk": [
            "org.java_websocket.issues.Issue256Test#runReconnectBlockingScenario4",
            "org.java_websocket.issues.Issue256Test#runReconnectScenario3",
            "org.java_websocket.issues.Issue661Test#initializationError"
        ]
    },
    "google-jimfs": {
        "total_tests": [
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_fromAbsolute",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateLink_absolute",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testLinks_failsWhenTargetFileAlreadyExists",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_truncate_toZero",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testLock",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testPositionNegative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromBeforeEnd_byteArray",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativePath_twoNames",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_copy_multipleTimes",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_singleBuffer_atNonZeroPosition",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_read_singleByte",
            "com.google.common.io.jimfs.JimfsPathTest#testPathParsing_withExtraSeparators",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTruncateNegative",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_parentSymlinkDoesPointsToNonDirectory",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testSymbolicLinks",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromEnd_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toMiddle_countGreaterThanSrcSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testSize_forNewFile_isZero",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativize_bothAbsolute",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testWrite",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testSize_forFileAfterWrite_isNumberOfBytesWritten",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferTo_fromMiddle_countEqualsSize",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testReadNegative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_byteArray_atStart",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testRead_forFileAfterWriteLines_isLinesWritten",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromEnd_singleByte",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateDirectory_relative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_byteArray_atNonZeroPosition",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths_toAbsolutePath",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testIsSameFile_forPathFromDifferentFileSystemProvider",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_truncate_sizeUp",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testMove_cannotMoveDirIntoOwnSubtree",
            "com.google.common.io.jimfs.ByteStoreAsynchronousFileChannelTest#testAsyncChannel",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTruncate",
            "com.google.common.io.jimfs.JimfsPathTest#testNullPointerExceptions",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDelete_directory",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromStart_countEqualsSrcSize",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_singleBuffer",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_absolute",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromBeyondStart_countGreaterThanSrcSize",
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_fromRelative",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_doesNotSupportAtomicMove",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_hugeOverestimateCount",
            "com.google.common.io.jimfs.JimfsPathTest#testAbsolutePath_singleName",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testRegexTranslation",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withThisAndParentDirNames",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTransferFrom",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testNullPointerExceptions",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_withReplaceExisting",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_truncate_partial",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromMiddle_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_truncate_sizeUp",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDirectories_creatingNonDirectoryDoesNotAddLinkToParent",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromPastEnd_byteArray",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateSymbolicLink_absolute",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromBeyondStart_countLessThanSrcSize",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withExtraParentDirNamesAtRoot",
            "com.google.common.io.jimfs.JimfsPathTest#testPathParsing",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testInvalidSyntax",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testMove_withoutReplaceExisting_failsWhenTargetExists",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromPastEnd_multipleBuffers",
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_givenAbsolutePath",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativePath_fourNames",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_fileToOutputStream",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_multipleBuffers_atNonZeroPosition",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty",
            "com.google.common.io.jimfs.JimfsPathTest#testRootPath",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_withReplaceExisting_cantReplaceNonEmptyDirectory",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromMiddle_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toMiddle_countEqualsSrcSize",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testWriteNegative",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_various",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testRead",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths_startsWith_endsWith",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromBeforeEnd_singleBuffer",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths_relativize",
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_fromRoot",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testPosition",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_singleByte_atNonZeroPosition",
            "com.google.common.io.jimfs.JimfsPathTest#testAbsoluteMultiNamePath_fourNames",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_byteArray_largerThanContent",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDelete_directory_cantDeleteNonEmptyDirectory",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromStart_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toStart_countLessThanSrcSize",
            "com.google.common.io.jimfs.JimfsPathTest#testPathWithExtraSlashes",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_literal",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromStart_singleBuffer",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_brackets",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testLink",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withLeadingThisAndParentDirNames",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromStart_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_truncate_toZero",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_directoryToPath_doesNotCopyDirectoryContents",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toEnd",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testIsSameFile",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testLink_forSymbolicLink_usesSymbolicLinkTarget",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromStart_countGreaterThanSrcSize",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_read_byteArray",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromBeforeEnd_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toMiddle_countLessThanSrcSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateDirectory_absolute",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testSymbolicLinks_lookupOfAbsoluteSymlinkPathFromRelativePath",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPathLookups",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testRegexEscaping",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testWriteLines_withStandardOptions",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testWriteFile_succeeds",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withThisDirName",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testLockNegative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_copy",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_read_multipleBuffers",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testSymbolicLinks_symlinkCycle",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testWriteFile_withStandardOptions",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths_resolve",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_inputStreamToFile",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDirectories_creatingDirectoryAddsOneLinkToParent",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_parentSymlinkDoesNotExist",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateSymbolicLink_relative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_partialByteArray_atStart",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testLink_failsForNonRegularFile",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromEnd_byteArray",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_singleByte",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_star",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testReadsInWriteOnlyMode",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testClose",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_fromPastEnd_byteArray",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromStart_singleByte",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromEnd_byteArray",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_symlinkHigherInPathPointsToNonDirectory",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTransferToNegative",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateDirectories",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_starStar",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_singleBuffer_largerThanContent",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_fileToPath",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_multipleBuffers_largerThanContent",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toStart_countEqualsSrcSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_symlinkHigherInPathDoesNotExist",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromStart_byteArray",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTransferFromNegative",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_existing",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testChannels",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromStart_countLessThanSrcSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testWrite_fileExistsButIsNotRegularFile",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromMiddle_byteArray",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_parentIsNotDirectory",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromMiddle_singleByte",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferTo_fromMiddle_countLessThanSize",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferTo",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativize_oneAbsoluteOneRelative",
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_givenEmptyPath",
            "com.google.common.io.jimfs.JimfsPathTest#testPathParsing_withAlternateSeparator",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_directoryToPath",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toStart_countGreaterThanSrcSize",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_escapes",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_questionMark",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_parentDoesNotExist",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testWriteLines_succeeds",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateLink_relative",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testStreams",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testMove",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testLink_failsWhenTargetDoesNotExist",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toPastEnd",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testAppend",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_singleBuffer_atStart",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_fromPastEnd_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_multipleBuffers_atStart",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_fromPastEnd_multipleBuffers",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testWritesInReadOnlyMode",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_nonDirectoryHigherInPath",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDelete_file",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromMiddle_byteArray",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testRead_forNewFile_isEmpty",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferFrom_toMiddle_transferGoesBeyondContentSize",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromStart_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_overwrite_sameLength",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_copy",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withLeadingParentDirNames",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferTo_fromStart_countLessThanSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDirectories_newlyCreatedDirectoryHasTwoLinks",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromEnd_multipleBuffers",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testSize",
            "com.google.common.io.jimfs.JimfsPathTest#testResolve_withThisAndParentDirNames",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_transferFrom_fromBeyondStart_countEqualsSrcSize",
            "com.google.common.io.jimfs.ByteStoreFileChannelTest#testTransferTo",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty",
            "com.google.common.io.jimfs.JimfsPathTest#testAbsolutePath_twoNames",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testNewFileSystem_hasRootAndWorkingDirectory",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testPaths_normalize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testDelete_directory_cantDeleteRoot",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_all_byteArray",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromPastEnd_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_singleByte_atStart",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testMatching_curlyBraces",
            "com.google.common.io.jimfs.RegexGlobMatcherTest#testRegexTranslationWithMultipleSeparators",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativize_bothRelative",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromEnd_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_partial_fromEnd_singleBuffer",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testRead_forFileAfterWrite_isBytesWritten",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCreateFile_relative",
            "com.google.common.io.jimfs.JimfsPathTest#testRelativePath_singleName",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_transferTo_fromStart_countEqualsSize",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_withoutReplaceExisting_failsWhenTargetExists",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_read_singleBuffer",
            "com.google.common.io.jimfs.JimfsPathTest#testNormalize_withParentDirName",
            "com.google.common.io.jimfs.JimfsIntegrationTest#testCopy_symbolicLinkToPath",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromStart_byteArray",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromMiddle_multipleBuffers",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testEmpty_write_partialByteArray_atNonZeroPosition",
            "com.google.common.io.jimfs.JimfsPathTest#testPathParsing_windowsStylePaths",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_read_partial_fromMiddle_singleBuffer",
            "com.google.common.io.jimfs.ArrayByteStoreTest#testNonEmpty_write_overwrite_greaterLength"
        ],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [],
        "tests": [],
        "od_tests": [],
        "config_only_sleep_decrease": [],
        "config_only_random_max": [],
        "config_only_sleep_increase": [],
        "config_only_time_round": [],
        "config_only_random_fix": [],
        "config_only_locale_fix": [],
        "config_only_date_relative": [],
        "config_only_socket_0.1": [],
        "config_only_clock_relative": [],
        "config_only_time_increment": [],
        "config_only_time_relative": [],
        "config_only_random_min": [],
        "config_only_sleep_random": [],
        "config_only_zone_fix": [],
        "config_only_time_speedup": [],
        "config_only_time_slow": [],
        "config_only_fix_date": [],
        "config_only_date_bk": []
    },
    "spring-projects-spring-boot": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [],
        "tests": [],
        "od_tests": []
    },
    "square-okhttp": {
        "total_tests": [],
        "passed_tests": [],
        "failed_tests": [],
        "chaos_failed_tests": [],
        "flaky_tests": [],
        "tests": [],
        "od_tests": []
    }
}