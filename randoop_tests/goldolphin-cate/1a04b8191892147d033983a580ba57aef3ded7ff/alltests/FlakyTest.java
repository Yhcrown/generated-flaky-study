package flaky; 

import org.junit.FixMethodOrder;

import org.junit.Test;

import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class FlakyTest{
    public static boolean debug = false;

	@Test
    public void test086_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test086");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner0 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask1 = null;
        net.goldolphin.cate.Action0 action0_2 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask3 = net.goldolphin.cate.Task.create(action0_2);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter4 = unitTask3.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitWaiter4.continueWithWaiter();
        java.util.concurrent.Executor executor6 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler7 = new net.goldolphin.cate.ExecutorScheduler(executor6);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask8 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler7);
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler12 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask1, (net.goldolphin.cate.IScheduler) executorScheduler10);
        int int14 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler12, (int) (byte) 10);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner16 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore17 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner16);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner18 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask19 = null;
        net.goldolphin.cate.Action0 action0_20 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask21 = net.goldolphin.cate.Task.create(action0_20);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter22 = unitTask21.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter23 = unitWaiter22.continueWithWaiter();
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask29 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler28);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler30 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask19, (net.goldolphin.cate.IScheduler) executorScheduler28);
        int int32 = iSchedulerTaskWithSchedulerHashedPartitioner18.partition(iSchedulerTaskWithScheduler30, (int) (byte) 10);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner16.partition(iSchedulerTaskWithScheduler30, (int) '4');
        int int36 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler30, (int) (short) -1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner0);
        org.junit.Assert.assertNotNull(unitTask3);
        org.junit.Assert.assertNotNull(unitWaiter4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitTask8);
        org.junit.Assert.assertNotNull(unitTask11);
         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner16);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner18);
        org.junit.Assert.assertNotNull(unitTask21);
        org.junit.Assert.assertNotNull(unitWaiter22);
        org.junit.Assert.assertNotNull(unitWaiter23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask29);
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 36 + "'", int34 == 36);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }
	@Test
    public void test086_2() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test086");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner0 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask1 = null;
        net.goldolphin.cate.Action0 action0_2 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask3 = net.goldolphin.cate.Task.create(action0_2);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter4 = unitTask3.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitWaiter4.continueWithWaiter();
        java.util.concurrent.Executor executor6 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler7 = new net.goldolphin.cate.ExecutorScheduler(executor6);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask8 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler7);
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler12 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask1, (net.goldolphin.cate.IScheduler) executorScheduler10);
        int int14 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler12, (int) (byte) 10);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner16 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore17 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner16);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner18 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask19 = null;
        net.goldolphin.cate.Action0 action0_20 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask21 = net.goldolphin.cate.Task.create(action0_20);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter22 = unitTask21.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter23 = unitWaiter22.continueWithWaiter();
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask29 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler28);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler30 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask19, (net.goldolphin.cate.IScheduler) executorScheduler28);
        int int32 = iSchedulerTaskWithSchedulerHashedPartitioner18.partition(iSchedulerTaskWithScheduler30, (int) (byte) 10);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner16.partition(iSchedulerTaskWithScheduler30, (int) '4');
        int int36 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler30, (int) (short) -1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner0);
        org.junit.Assert.assertNotNull(unitTask3);
        org.junit.Assert.assertNotNull(unitWaiter4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitTask8);
        org.junit.Assert.assertNotNull(unitTask11);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner16);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner18);
        org.junit.Assert.assertNotNull(unitTask21);
        org.junit.Assert.assertNotNull(unitWaiter22);
        org.junit.Assert.assertNotNull(unitWaiter23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask29);
         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 36 + "'", int34 == 36);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }
	@Test
    public void test086_3() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test086");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner0 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask1 = null;
        net.goldolphin.cate.Action0 action0_2 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask3 = net.goldolphin.cate.Task.create(action0_2);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter4 = unitTask3.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitWaiter4.continueWithWaiter();
        java.util.concurrent.Executor executor6 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler7 = new net.goldolphin.cate.ExecutorScheduler(executor6);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask8 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler7);
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter4.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler12 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask1, (net.goldolphin.cate.IScheduler) executorScheduler10);
        int int14 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler12, (int) (byte) 10);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner16 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore17 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner16);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner18 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask19 = null;
        net.goldolphin.cate.Action0 action0_20 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask21 = net.goldolphin.cate.Task.create(action0_20);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter22 = unitTask21.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter23 = unitWaiter22.continueWithWaiter();
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask29 = unitWaiter22.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler28);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler30 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask19, (net.goldolphin.cate.IScheduler) executorScheduler28);
        int int32 = iSchedulerTaskWithSchedulerHashedPartitioner18.partition(iSchedulerTaskWithScheduler30, (int) (byte) 10);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner16.partition(iSchedulerTaskWithScheduler30, (int) '4');
        int int36 = iSchedulerTaskWithSchedulerHashedPartitioner0.partition(iSchedulerTaskWithScheduler30, (int) (short) -1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner0);
        org.junit.Assert.assertNotNull(unitTask3);
        org.junit.Assert.assertNotNull(unitWaiter4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitTask8);
        org.junit.Assert.assertNotNull(unitTask11);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7 + "'", int14 == 7);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner16);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner18);
        org.junit.Assert.assertNotNull(unitTask21);
        org.junit.Assert.assertNotNull(unitWaiter22);
        org.junit.Assert.assertNotNull(unitWaiter23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask29);
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 36 + "'", int34 == 36);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }
	@Test
    public void test090_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test090");
        net.goldolphin.cate.Action0 action0_0 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask1 = net.goldolphin.cate.Task.create(action0_0);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter2 = unitTask1.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter3 = unitWaiter2.continueWithWaiter();
        java.util.concurrent.Executor executor4 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler5 = new net.goldolphin.cate.ExecutorScheduler(executor4);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = unitWaiter2.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler5);
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter2.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask12 = null;
        net.goldolphin.cate.Action0 action0_13 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = net.goldolphin.cate.Task.create(action0_13);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter15 = unitTask14.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter16 = unitWaiter15.continueWithWaiter();
        java.util.concurrent.Executor executor17 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler18 = new net.goldolphin.cate.ExecutorScheduler(executor17);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = unitWaiter15.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler18);
        java.util.concurrent.Executor executor20 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler21 = new net.goldolphin.cate.ExecutorScheduler(executor20);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask22 = unitWaiter15.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler21);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler23 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask12, (net.goldolphin.cate.IScheduler) executorScheduler21);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.IScheduler[] iSchedulerArray26 = new net.goldolphin.cate.IScheduler[] { executorScheduler8, executorScheduler11, executorScheduler21, executorScheduler25 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner27 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool28 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray26, unitWaiterFunc0TaskIPartitioner27);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore29 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool28);
        int int30 = unitWaiterFunc0TaskPartitionedSchedulerPool28.getPartitionNum();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore31 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool28);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner33 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask34 = null;
        net.goldolphin.cate.Action0 action0_35 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = net.goldolphin.cate.Task.create(action0_35);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter37 = unitTask36.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitWaiter37.continueWithWaiter();
        java.util.concurrent.Executor executor39 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler40 = new net.goldolphin.cate.ExecutorScheduler(executor39);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask41 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler40);
        java.util.concurrent.Executor executor42 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler43 = new net.goldolphin.cate.ExecutorScheduler(executor42);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask44 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler43);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler45 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask34, (net.goldolphin.cate.IScheduler) executorScheduler43);
        int int47 = iSchedulerTaskWithSchedulerHashedPartitioner33.partition(iSchedulerTaskWithScheduler45, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore48 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner33);
        net.goldolphin.cate.Action0 action0_49 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask50 = net.goldolphin.cate.Task.create(action0_49);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter51 = unitTask50.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter52 = unitWaiter51.continueWithWaiter();
        java.util.concurrent.Executor executor53 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler54 = new net.goldolphin.cate.ExecutorScheduler(executor53);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask55 = unitWaiter51.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler54);
        java.util.concurrent.Executor executor56 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler57 = new net.goldolphin.cate.ExecutorScheduler(executor56);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask58 = unitWaiter51.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler57);
        java.util.concurrent.Executor executor59 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler60 = new net.goldolphin.cate.ExecutorScheduler(executor59);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask61 = null;
        net.goldolphin.cate.Action0 action0_62 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask63 = net.goldolphin.cate.Task.create(action0_62);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter64 = unitTask63.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter65 = unitWaiter64.continueWithWaiter();
        java.util.concurrent.Executor executor66 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler67 = new net.goldolphin.cate.ExecutorScheduler(executor66);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask68 = unitWaiter64.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler67);
        java.util.concurrent.Executor executor69 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler70 = new net.goldolphin.cate.ExecutorScheduler(executor69);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask71 = unitWaiter64.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler70);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler72 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask61, (net.goldolphin.cate.IScheduler) executorScheduler70);
        java.util.concurrent.Executor executor73 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler74 = new net.goldolphin.cate.ExecutorScheduler(executor73);
        net.goldolphin.cate.IScheduler[] iSchedulerArray75 = new net.goldolphin.cate.IScheduler[] { executorScheduler57, executorScheduler60, executorScheduler70, executorScheduler74 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner76 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool77 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray75, unitWaiterFunc0TaskIPartitioner76);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore78 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool77);
        int int79 = unitWaiterFunc0TaskPartitionedSchedulerPool77.getPartitionNum();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore80 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool77);
        net.goldolphin.cate.partitioned.IPartitioner iPartitioner81 = unitWaiterFunc0TaskPartitionedSchedulerPool77.getPartitioner();
        net.goldolphin.cate.IScheduler iScheduler82 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore48.get(unitWaiterFunc0TaskPartitionedSchedulerPool77);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore31.contains(unitWaiterFunc0TaskPartitionedSchedulerPool77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unitTask1);
        org.junit.Assert.assertNotNull(unitWaiter2);
        org.junit.Assert.assertNotNull(unitWaiter3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask14);
        org.junit.Assert.assertNotNull(unitWaiter15);
        org.junit.Assert.assertNotNull(unitWaiter16);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(unitTask22);
        org.junit.Assert.assertNotNull(iSchedulerArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitWaiter37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitTask41);
        org.junit.Assert.assertNotNull(unitTask44);
         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(unitTask50);
        org.junit.Assert.assertNotNull(unitWaiter51);
        org.junit.Assert.assertNotNull(unitWaiter52);
        org.junit.Assert.assertNotNull(unitTask55);
        org.junit.Assert.assertNotNull(unitTask58);
        org.junit.Assert.assertNotNull(unitTask63);
        org.junit.Assert.assertNotNull(unitWaiter64);
        org.junit.Assert.assertNotNull(unitWaiter65);
        org.junit.Assert.assertNotNull(unitTask68);
        org.junit.Assert.assertNotNull(unitTask71);
        org.junit.Assert.assertNotNull(iSchedulerArray75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNull(iPartitioner81);
        org.junit.Assert.assertNull(iScheduler82);
    }
	@Test
    public void test091_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test091");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask17 = null;
        net.goldolphin.cate.Action0 action0_18 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = net.goldolphin.cate.Task.create(action0_18);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitTask19.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter21 = unitWaiter20.continueWithWaiter();
        java.util.concurrent.Executor executor22 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler23 = new net.goldolphin.cate.ExecutorScheduler(executor22);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask24 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler23);
        java.util.concurrent.Executor executor25 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler26 = new net.goldolphin.cate.ExecutorScheduler(executor25);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask27 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler26);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler28 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask17, (net.goldolphin.cate.IScheduler) executorScheduler26);
        int int30 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler28, (int) (short) 100);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner32 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore33 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner32);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner34 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask35 = null;
        net.goldolphin.cate.Action0 action0_36 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask37 = net.goldolphin.cate.Task.create(action0_36);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitTask37.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter39 = unitWaiter38.continueWithWaiter();
        java.util.concurrent.Executor executor40 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler41 = new net.goldolphin.cate.ExecutorScheduler(executor40);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask42 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler41);
        java.util.concurrent.Executor executor43 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler44 = new net.goldolphin.cate.ExecutorScheduler(executor43);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask45 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler44);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler46 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask35, (net.goldolphin.cate.IScheduler) executorScheduler44);
        int int48 = iSchedulerTaskWithSchedulerHashedPartitioner34.partition(iSchedulerTaskWithScheduler46, (int) (byte) 10);
        int int50 = iSchedulerTaskWithSchedulerHashedPartitioner32.partition(iSchedulerTaskWithScheduler46, (int) '4');
        int int52 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler46, (int) (byte) 1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9 + "'", int15 == 9);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitWaiter21);
        org.junit.Assert.assertNotNull(unitTask24);
        org.junit.Assert.assertNotNull(unitTask27);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 56 + "'", int30 == 56);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner32);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner34);
        org.junit.Assert.assertNotNull(unitTask37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitWaiter39);
        org.junit.Assert.assertNotNull(unitTask42);
        org.junit.Assert.assertNotNull(unitTask45);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 12 + "'", int50 == 12);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }
	@Test
    public void test091_2() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test091");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask17 = null;
        net.goldolphin.cate.Action0 action0_18 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = net.goldolphin.cate.Task.create(action0_18);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitTask19.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter21 = unitWaiter20.continueWithWaiter();
        java.util.concurrent.Executor executor22 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler23 = new net.goldolphin.cate.ExecutorScheduler(executor22);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask24 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler23);
        java.util.concurrent.Executor executor25 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler26 = new net.goldolphin.cate.ExecutorScheduler(executor25);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask27 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler26);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler28 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask17, (net.goldolphin.cate.IScheduler) executorScheduler26);
        int int30 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler28, (int) (short) 100);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner32 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore33 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner32);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner34 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask35 = null;
        net.goldolphin.cate.Action0 action0_36 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask37 = net.goldolphin.cate.Task.create(action0_36);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitTask37.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter39 = unitWaiter38.continueWithWaiter();
        java.util.concurrent.Executor executor40 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler41 = new net.goldolphin.cate.ExecutorScheduler(executor40);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask42 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler41);
        java.util.concurrent.Executor executor43 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler44 = new net.goldolphin.cate.ExecutorScheduler(executor43);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask45 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler44);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler46 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask35, (net.goldolphin.cate.IScheduler) executorScheduler44);
        int int48 = iSchedulerTaskWithSchedulerHashedPartitioner34.partition(iSchedulerTaskWithScheduler46, (int) (byte) 10);
        int int50 = iSchedulerTaskWithSchedulerHashedPartitioner32.partition(iSchedulerTaskWithScheduler46, (int) '4');
        int int52 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler46, (int) (byte) 1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9 + "'", int15 == 9);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitWaiter21);
        org.junit.Assert.assertNotNull(unitTask24);
        org.junit.Assert.assertNotNull(unitTask27);
         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 56 + "'", int30 == 56);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner32);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner34);
        org.junit.Assert.assertNotNull(unitTask37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitWaiter39);
        org.junit.Assert.assertNotNull(unitTask42);
        org.junit.Assert.assertNotNull(unitTask45);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 12 + "'", int50 == 12);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }
	@Test
    public void test091_3() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test091");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask17 = null;
        net.goldolphin.cate.Action0 action0_18 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = net.goldolphin.cate.Task.create(action0_18);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitTask19.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter21 = unitWaiter20.continueWithWaiter();
        java.util.concurrent.Executor executor22 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler23 = new net.goldolphin.cate.ExecutorScheduler(executor22);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask24 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler23);
        java.util.concurrent.Executor executor25 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler26 = new net.goldolphin.cate.ExecutorScheduler(executor25);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask27 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler26);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler28 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask17, (net.goldolphin.cate.IScheduler) executorScheduler26);
        int int30 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler28, (int) (short) 100);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner32 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore33 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner32);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner34 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask35 = null;
        net.goldolphin.cate.Action0 action0_36 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask37 = net.goldolphin.cate.Task.create(action0_36);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitTask37.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter39 = unitWaiter38.continueWithWaiter();
        java.util.concurrent.Executor executor40 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler41 = new net.goldolphin.cate.ExecutorScheduler(executor40);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask42 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler41);
        java.util.concurrent.Executor executor43 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler44 = new net.goldolphin.cate.ExecutorScheduler(executor43);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask45 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler44);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler46 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask35, (net.goldolphin.cate.IScheduler) executorScheduler44);
        int int48 = iSchedulerTaskWithSchedulerHashedPartitioner34.partition(iSchedulerTaskWithScheduler46, (int) (byte) 10);
        int int50 = iSchedulerTaskWithSchedulerHashedPartitioner32.partition(iSchedulerTaskWithScheduler46, (int) '4');
        int int52 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler46, (int) (byte) 1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9 + "'", int15 == 9);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitWaiter21);
        org.junit.Assert.assertNotNull(unitTask24);
        org.junit.Assert.assertNotNull(unitTask27);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 56 + "'", int30 == 56);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner32);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner34);
        org.junit.Assert.assertNotNull(unitTask37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitWaiter39);
        org.junit.Assert.assertNotNull(unitTask42);
        org.junit.Assert.assertNotNull(unitTask45);
         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 12 + "'", int50 == 12);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }
	@Test
    public void test091_4() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test091");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask17 = null;
        net.goldolphin.cate.Action0 action0_18 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = net.goldolphin.cate.Task.create(action0_18);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitTask19.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter21 = unitWaiter20.continueWithWaiter();
        java.util.concurrent.Executor executor22 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler23 = new net.goldolphin.cate.ExecutorScheduler(executor22);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask24 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler23);
        java.util.concurrent.Executor executor25 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler26 = new net.goldolphin.cate.ExecutorScheduler(executor25);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask27 = unitWaiter20.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler26);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler28 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask17, (net.goldolphin.cate.IScheduler) executorScheduler26);
        int int30 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler28, (int) (short) 100);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner32 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore33 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner32);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner34 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask35 = null;
        net.goldolphin.cate.Action0 action0_36 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask37 = net.goldolphin.cate.Task.create(action0_36);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitTask37.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter39 = unitWaiter38.continueWithWaiter();
        java.util.concurrent.Executor executor40 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler41 = new net.goldolphin.cate.ExecutorScheduler(executor40);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask42 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler41);
        java.util.concurrent.Executor executor43 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler44 = new net.goldolphin.cate.ExecutorScheduler(executor43);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask45 = unitWaiter38.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler44);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler46 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask35, (net.goldolphin.cate.IScheduler) executorScheduler44);
        int int48 = iSchedulerTaskWithSchedulerHashedPartitioner34.partition(iSchedulerTaskWithScheduler46, (int) (byte) 10);
        int int50 = iSchedulerTaskWithSchedulerHashedPartitioner32.partition(iSchedulerTaskWithScheduler46, (int) '4');
        int int52 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler46, (int) (byte) 1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9 + "'", int15 == 9);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitWaiter21);
        org.junit.Assert.assertNotNull(unitTask24);
        org.junit.Assert.assertNotNull(unitTask27);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 56 + "'", int30 == 56);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner32);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner34);
        org.junit.Assert.assertNotNull(unitTask37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitWaiter39);
        org.junit.Assert.assertNotNull(unitTask42);
        org.junit.Assert.assertNotNull(unitTask45);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6 + "'", int48 == 6);
         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 12 + "'", int50 == 12);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }
	@Test
    public void test097_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test097");
        net.goldolphin.cate.Action0 action0_0 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask1 = net.goldolphin.cate.Task.create(action0_0);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter2 = unitTask1.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter3 = unitWaiter2.continueWithWaiter();
        java.util.concurrent.Executor executor4 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler5 = new net.goldolphin.cate.ExecutorScheduler(executor4);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = unitWaiter2.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler5);
        net.goldolphin.cate.Unit unit7 = net.goldolphin.cate.Unit.VALUE;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask8 = unitWaiter2.withInitState(unit7);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter9 = unitWaiter2.continueWithWaiter();
        net.goldolphin.cate.Action0 action0_10 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = net.goldolphin.cate.Task.create(action0_10);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter12 = unitTask11.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter13 = unitWaiter12.continueWithWaiter();
        java.util.concurrent.Executor executor14 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler15 = new net.goldolphin.cate.ExecutorScheduler(executor14);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask16 = unitWaiter12.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler15);
        java.util.concurrent.Executor executor17 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler18 = new net.goldolphin.cate.ExecutorScheduler(executor17);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask19 = unitWaiter12.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler18);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner20 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask21 = null;
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler32 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask21, (net.goldolphin.cate.IScheduler) executorScheduler30);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner20.partition(iSchedulerTaskWithScheduler32, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler35 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler36 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler32, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
        // The following exception was thrown during execution in test generation
        try {
            unitWaiter9.execute((java.lang.Object) executorScheduler18, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unitTask1);
        org.junit.Assert.assertNotNull(unitWaiter2);
        org.junit.Assert.assertNotNull(unitWaiter3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unit7);
        org.junit.Assert.assertNotNull(unitTask8);
        org.junit.Assert.assertNotNull(unitWaiter9);
        org.junit.Assert.assertNotNull(unitTask11);
        org.junit.Assert.assertNotNull(unitWaiter12);
        org.junit.Assert.assertNotNull(unitWaiter13);
        org.junit.Assert.assertNotNull(unitTask16);
        org.junit.Assert.assertNotNull(unitTask19);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 9 + "'", int34 == 9);
    }
	@Test
    public void test120_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test120");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        boolean boolean46 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool45);
        net.goldolphin.cate.Action0 action0_47 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask48 = net.goldolphin.cate.Task.create(action0_47);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter49 = unitTask48.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter50 = unitWaiter49.continueWithWaiter();
        java.util.concurrent.Executor executor51 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler52 = new net.goldolphin.cate.ExecutorScheduler(executor51);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask53 = unitWaiter49.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler52);
        java.util.concurrent.Executor executor54 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler55 = new net.goldolphin.cate.ExecutorScheduler(executor54);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask56 = unitWaiter49.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler55);
        java.util.concurrent.Executor executor57 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler58 = new net.goldolphin.cate.ExecutorScheduler(executor57);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask59 = null;
        net.goldolphin.cate.Action0 action0_60 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask61 = net.goldolphin.cate.Task.create(action0_60);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter62 = unitTask61.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter63 = unitWaiter62.continueWithWaiter();
        java.util.concurrent.Executor executor64 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler65 = new net.goldolphin.cate.ExecutorScheduler(executor64);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask66 = unitWaiter62.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler65);
        java.util.concurrent.Executor executor67 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler68 = new net.goldolphin.cate.ExecutorScheduler(executor67);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask69 = unitWaiter62.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler68);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler70 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask59, (net.goldolphin.cate.IScheduler) executorScheduler68);
        java.util.concurrent.Executor executor71 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler72 = new net.goldolphin.cate.ExecutorScheduler(executor71);
        net.goldolphin.cate.IScheduler[] iSchedulerArray73 = new net.goldolphin.cate.IScheduler[] { executorScheduler55, executorScheduler58, executorScheduler68, executorScheduler72 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner74 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool75 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray73, unitWaiterFunc0TaskIPartitioner74);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore76 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool75);
        int int77 = unitWaiterFunc0TaskPartitionedSchedulerPool75.getPartitionNum();
        net.goldolphin.cate.IScheduler iScheduler78 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.remove(unitWaiterFunc0TaskPartitionedSchedulerPool75);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore79 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool75);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 6 + "'", int15 == 6);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(unitTask48);
        org.junit.Assert.assertNotNull(unitWaiter49);
        org.junit.Assert.assertNotNull(unitWaiter50);
        org.junit.Assert.assertNotNull(unitTask53);
        org.junit.Assert.assertNotNull(unitTask56);
        org.junit.Assert.assertNotNull(unitTask61);
        org.junit.Assert.assertNotNull(unitWaiter62);
        org.junit.Assert.assertNotNull(unitWaiter63);
        org.junit.Assert.assertNotNull(unitTask66);
        org.junit.Assert.assertNotNull(unitTask69);
        org.junit.Assert.assertNotNull(iSchedulerArray73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNull(iScheduler78);
    }
	@Test
    public void test121_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test121");
        net.goldolphin.cate.Func0<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>> unitWaiterFunc0_0 = null;
        net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>> unitWaiterFunc0Task1 = new net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>(unitWaiterFunc0_0);
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter7 = new net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter6);
        net.goldolphin.cate.IContinuation iContinuation8 = null;
        net.goldolphin.cate.FlattenTask.Continuation continuation9 = new net.goldolphin.cate.FlattenTask.Continuation(iContinuation8);
        net.goldolphin.cate.IContinuation iContinuation10 = unitWaiter6.buildContinuation(iContinuation8);
        net.goldolphin.cate.CollectTask.IndexContinuation indexContinuation11 = new net.goldolphin.cate.CollectTask.IndexContinuation((int) (byte) 100, iContinuation8);
        net.goldolphin.cate.IContinuation iContinuation12 = unitWaiterFunc0Task1.buildContinuation(iContinuation8);
        net.goldolphin.cate.ContextAction<java.lang.CharSequence, java.lang.reflect.GenericDeclaration> charSequenceContextAction14 = null;
        net.goldolphin.cate.ContextTask<java.lang.CharSequence, java.lang.reflect.GenericDeclaration> charSequenceContextTask15 = new net.goldolphin.cate.ContextTask<java.lang.CharSequence, java.lang.reflect.GenericDeclaration>(charSequenceContextAction14);
        net.goldolphin.cate.Action0 action0_16 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask17 = net.goldolphin.cate.Task.create(action0_16);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter18 = unitTask17.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitWaiter18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = new net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter19);
        net.goldolphin.cate.IContinuation iContinuation21 = null;
        net.goldolphin.cate.FlattenTask.Continuation continuation22 = new net.goldolphin.cate.FlattenTask.Continuation(iContinuation21);
        net.goldolphin.cate.IContinuation iContinuation23 = unitWaiter19.buildContinuation(iContinuation21);
        net.goldolphin.cate.IContinuation iContinuation24 = charSequenceContextTask15.buildContinuation(iContinuation23);
        net.goldolphin.cate.CollectTask.IndexContinuation indexContinuation25 = new net.goldolphin.cate.CollectTask.IndexContinuation(10, iContinuation24);
        net.goldolphin.cate.IContinuation iContinuation26 = unitWaiterFunc0Task1.buildContinuation((net.goldolphin.cate.IContinuation) indexContinuation25);
        net.goldolphin.cate.Action0 action0_27 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = net.goldolphin.cate.Task.create(action0_27);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter29 = unitTask28.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter30 = unitWaiter29.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter31 = new net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter30);
        net.goldolphin.cate.Environment environment32 = null;
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner33 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask34 = null;
        net.goldolphin.cate.Action0 action0_35 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = net.goldolphin.cate.Task.create(action0_35);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter37 = unitTask36.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitWaiter37.continueWithWaiter();
        java.util.concurrent.Executor executor39 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler40 = new net.goldolphin.cate.ExecutorScheduler(executor39);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask41 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler40);
        java.util.concurrent.Executor executor42 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler43 = new net.goldolphin.cate.ExecutorScheduler(executor42);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask44 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler43);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler45 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask34, (net.goldolphin.cate.IScheduler) executorScheduler43);
        int int47 = iSchedulerTaskWithSchedulerHashedPartitioner33.partition(iSchedulerTaskWithScheduler45, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler48 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler49 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler45, (net.goldolphin.cate.IScheduler) synchronizedScheduler48);
        // The following exception was thrown during execution in test generation
        try {
            indexContinuation25.apply((java.lang.Object) unitWaiter31, environment32, (net.goldolphin.cate.IScheduler) synchronizedScheduler48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(iContinuation10);
        org.junit.Assert.assertNotNull(iContinuation12);
        org.junit.Assert.assertNotNull(unitTask17);
        org.junit.Assert.assertNotNull(unitWaiter18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(iContinuation23);
        org.junit.Assert.assertNotNull(iContinuation24);
        org.junit.Assert.assertNotNull(iContinuation26);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitWaiter29);
        org.junit.Assert.assertNotNull(unitWaiter30);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitWaiter37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitTask41);
        org.junit.Assert.assertNotNull(unitTask44);
         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 6 + "'", int47 == 6);
    }
	@Test
    public void test136_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test136");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        boolean boolean46 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool45);
        java.util.Map<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>[] func0TaskPartitionedSchedulerPoolMapArray47 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.getData();
        net.goldolphin.cate.Action0 action0_48 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask49 = net.goldolphin.cate.Task.create(action0_48);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter50 = unitTask49.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter51 = unitWaiter50.continueWithWaiter();
        java.util.concurrent.Executor executor52 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler53 = new net.goldolphin.cate.ExecutorScheduler(executor52);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask54 = unitWaiter50.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler53);
        java.util.concurrent.Executor executor55 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler56 = new net.goldolphin.cate.ExecutorScheduler(executor55);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask57 = unitWaiter50.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler56);
        java.util.concurrent.Executor executor58 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler59 = new net.goldolphin.cate.ExecutorScheduler(executor58);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask60 = null;
        net.goldolphin.cate.Action0 action0_61 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask62 = net.goldolphin.cate.Task.create(action0_61);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter63 = unitTask62.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter64 = unitWaiter63.continueWithWaiter();
        java.util.concurrent.Executor executor65 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler66 = new net.goldolphin.cate.ExecutorScheduler(executor65);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask67 = unitWaiter63.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler66);
        java.util.concurrent.Executor executor68 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler69 = new net.goldolphin.cate.ExecutorScheduler(executor68);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask70 = unitWaiter63.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler69);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler71 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask60, (net.goldolphin.cate.IScheduler) executorScheduler69);
        java.util.concurrent.Executor executor72 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler73 = new net.goldolphin.cate.ExecutorScheduler(executor72);
        net.goldolphin.cate.IScheduler[] iSchedulerArray74 = new net.goldolphin.cate.IScheduler[] { executorScheduler56, executorScheduler59, executorScheduler69, executorScheduler73 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner75 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool76 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray74, unitWaiterFunc0TaskIPartitioner75);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore77 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool76);
        net.goldolphin.cate.partitioned.IPartitioner iPartitioner78 = unitWaiterFunc0TaskPartitionedSchedulerPool76.getPartitioner();
        net.goldolphin.cate.IScheduler iScheduler79 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.get(unitWaiterFunc0TaskPartitionedSchedulerPool76);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(func0TaskPartitionedSchedulerPoolMapArray47);
        org.junit.Assert.assertNotNull(unitTask49);
        org.junit.Assert.assertNotNull(unitWaiter50);
        org.junit.Assert.assertNotNull(unitWaiter51);
        org.junit.Assert.assertNotNull(unitTask54);
        org.junit.Assert.assertNotNull(unitTask57);
        org.junit.Assert.assertNotNull(unitTask62);
        org.junit.Assert.assertNotNull(unitWaiter63);
        org.junit.Assert.assertNotNull(unitWaiter64);
        org.junit.Assert.assertNotNull(unitTask67);
        org.junit.Assert.assertNotNull(unitTask70);
        org.junit.Assert.assertNotNull(iSchedulerArray74);
        org.junit.Assert.assertNull(iPartitioner78);
        org.junit.Assert.assertNull(iScheduler79);
    }
	@Test
    public void test137_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test137");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore2 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner3 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask4 = null;
        net.goldolphin.cate.Action0 action0_5 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = net.goldolphin.cate.Task.create(action0_5);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter7 = unitTask6.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter8 = unitWaiter7.continueWithWaiter();
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        java.util.concurrent.Executor executor12 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler13 = new net.goldolphin.cate.ExecutorScheduler(executor12);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler13);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler15 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask4, (net.goldolphin.cate.IScheduler) executorScheduler13);
        int int17 = iSchedulerTaskWithSchedulerHashedPartitioner3.partition(iSchedulerTaskWithScheduler15, (int) (byte) 10);
        int int19 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler15, (int) '4');
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner20 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask21 = null;
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler32 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask21, (net.goldolphin.cate.IScheduler) executorScheduler30);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner20.partition(iSchedulerTaskWithScheduler32, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler35 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler36 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler32, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
        int int38 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler36, 9);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unitWaiter7);
        org.junit.Assert.assertNotNull(unitWaiter8);
        org.junit.Assert.assertNotNull(unitTask11);
        org.junit.Assert.assertNotNull(unitTask14);
         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }
	@Test
    public void test137_2() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test137");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore2 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner3 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask4 = null;
        net.goldolphin.cate.Action0 action0_5 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = net.goldolphin.cate.Task.create(action0_5);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter7 = unitTask6.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter8 = unitWaiter7.continueWithWaiter();
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        java.util.concurrent.Executor executor12 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler13 = new net.goldolphin.cate.ExecutorScheduler(executor12);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler13);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler15 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask4, (net.goldolphin.cate.IScheduler) executorScheduler13);
        int int17 = iSchedulerTaskWithSchedulerHashedPartitioner3.partition(iSchedulerTaskWithScheduler15, (int) (byte) 10);
        int int19 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler15, (int) '4');
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner20 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask21 = null;
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler32 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask21, (net.goldolphin.cate.IScheduler) executorScheduler30);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner20.partition(iSchedulerTaskWithScheduler32, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler35 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler36 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler32, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
        int int38 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler36, 9);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unitWaiter7);
        org.junit.Assert.assertNotNull(unitWaiter8);
        org.junit.Assert.assertNotNull(unitTask11);
        org.junit.Assert.assertNotNull(unitTask14);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }
	@Test
    public void test137_3() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test137");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore2 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner3 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask4 = null;
        net.goldolphin.cate.Action0 action0_5 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = net.goldolphin.cate.Task.create(action0_5);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter7 = unitTask6.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter8 = unitWaiter7.continueWithWaiter();
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        java.util.concurrent.Executor executor12 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler13 = new net.goldolphin.cate.ExecutorScheduler(executor12);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler13);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler15 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask4, (net.goldolphin.cate.IScheduler) executorScheduler13);
        int int17 = iSchedulerTaskWithSchedulerHashedPartitioner3.partition(iSchedulerTaskWithScheduler15, (int) (byte) 10);
        int int19 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler15, (int) '4');
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner20 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask21 = null;
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler32 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask21, (net.goldolphin.cate.IScheduler) executorScheduler30);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner20.partition(iSchedulerTaskWithScheduler32, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler35 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler36 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler32, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
        int int38 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler36, 9);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unitWaiter7);
        org.junit.Assert.assertNotNull(unitWaiter8);
        org.junit.Assert.assertNotNull(unitTask11);
        org.junit.Assert.assertNotNull(unitTask14);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }
	@Test
    public void test137_4() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test137");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore2 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>(1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner3 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask4 = null;
        net.goldolphin.cate.Action0 action0_5 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask6 = net.goldolphin.cate.Task.create(action0_5);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter7 = unitTask6.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter8 = unitWaiter7.continueWithWaiter();
        java.util.concurrent.Executor executor9 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler10 = new net.goldolphin.cate.ExecutorScheduler(executor9);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask11 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler10);
        java.util.concurrent.Executor executor12 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler13 = new net.goldolphin.cate.ExecutorScheduler(executor12);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = unitWaiter7.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler13);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler15 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask4, (net.goldolphin.cate.IScheduler) executorScheduler13);
        int int17 = iSchedulerTaskWithSchedulerHashedPartitioner3.partition(iSchedulerTaskWithScheduler15, (int) (byte) 10);
        int int19 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler15, (int) '4');
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner20 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask21 = null;
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler32 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask21, (net.goldolphin.cate.IScheduler) executorScheduler30);
        int int34 = iSchedulerTaskWithSchedulerHashedPartitioner20.partition(iSchedulerTaskWithScheduler32, (int) (byte) 10);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler35 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler36 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>((net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>) iSchedulerTaskWithScheduler32, (net.goldolphin.cate.IScheduler) synchronizedScheduler35);
        int int38 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler36, 9);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner3);
        org.junit.Assert.assertNotNull(unitTask6);
        org.junit.Assert.assertNotNull(unitWaiter7);
        org.junit.Assert.assertNotNull(unitWaiter8);
        org.junit.Assert.assertNotNull(unitTask11);
        org.junit.Assert.assertNotNull(unitTask14);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }
	@Test
    public void test138_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test138");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner2 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.Maybe<java.lang.Comparable<java.lang.String>>, net.goldolphin.cate.Unit> strComparableMaybePartitionedStore3 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.Maybe<java.lang.Comparable<java.lang.String>>, net.goldolphin.cate.Unit>((int) '#', (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner2);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore4 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (short) 100, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner2);
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner6 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask7 = null;
        net.goldolphin.cate.Action0 action0_8 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = net.goldolphin.cate.Task.create(action0_8);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter10 = unitTask9.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter11 = unitWaiter10.continueWithWaiter();
        java.util.concurrent.Executor executor12 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler13 = new net.goldolphin.cate.ExecutorScheduler(executor12);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask14 = unitWaiter10.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler13);
        java.util.concurrent.Executor executor15 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler16 = new net.goldolphin.cate.ExecutorScheduler(executor15);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask17 = unitWaiter10.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler16);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler18 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask7, (net.goldolphin.cate.IScheduler) executorScheduler16);
        int int20 = iSchedulerTaskWithSchedulerHashedPartitioner6.partition(iSchedulerTaskWithScheduler18, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore21 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner6);
        net.goldolphin.cate.Action0 action0_22 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = net.goldolphin.cate.Task.create(action0_22);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter24 = unitTask23.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter25 = unitWaiter24.continueWithWaiter();
        java.util.concurrent.Executor executor26 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler27 = new net.goldolphin.cate.ExecutorScheduler(executor26);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask28 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler27);
        java.util.concurrent.Executor executor29 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler30 = new net.goldolphin.cate.ExecutorScheduler(executor29);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = unitWaiter24.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler30);
        java.util.concurrent.Executor executor32 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler33 = new net.goldolphin.cate.ExecutorScheduler(executor32);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask34 = null;
        net.goldolphin.cate.Action0 action0_35 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = net.goldolphin.cate.Task.create(action0_35);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter37 = unitTask36.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter38 = unitWaiter37.continueWithWaiter();
        java.util.concurrent.Executor executor39 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler40 = new net.goldolphin.cate.ExecutorScheduler(executor39);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask41 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler40);
        java.util.concurrent.Executor executor42 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler43 = new net.goldolphin.cate.ExecutorScheduler(executor42);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask44 = unitWaiter37.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler43);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler45 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask34, (net.goldolphin.cate.IScheduler) executorScheduler43);
        java.util.concurrent.Executor executor46 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler47 = new net.goldolphin.cate.ExecutorScheduler(executor46);
        net.goldolphin.cate.IScheduler[] iSchedulerArray48 = new net.goldolphin.cate.IScheduler[] { executorScheduler30, executorScheduler33, executorScheduler43, executorScheduler47 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner49 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool50 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray48, unitWaiterFunc0TaskIPartitioner49);
        boolean boolean51 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore21.contains(unitWaiterFunc0TaskPartitionedSchedulerPool50);
        net.goldolphin.cate.Action0 action0_52 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask53 = net.goldolphin.cate.Task.create(action0_52);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter54 = unitTask53.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter55 = unitWaiter54.continueWithWaiter();
        java.util.concurrent.Executor executor56 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler57 = new net.goldolphin.cate.ExecutorScheduler(executor56);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask58 = unitWaiter54.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler57);
        java.util.concurrent.Executor executor59 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler60 = new net.goldolphin.cate.ExecutorScheduler(executor59);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask61 = unitWaiter54.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler60);
        java.util.concurrent.Executor executor62 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler63 = new net.goldolphin.cate.ExecutorScheduler(executor62);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask64 = null;
        net.goldolphin.cate.Action0 action0_65 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask66 = net.goldolphin.cate.Task.create(action0_65);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter67 = unitTask66.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter68 = unitWaiter67.continueWithWaiter();
        java.util.concurrent.Executor executor69 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler70 = new net.goldolphin.cate.ExecutorScheduler(executor69);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask71 = unitWaiter67.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler70);
        java.util.concurrent.Executor executor72 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler73 = new net.goldolphin.cate.ExecutorScheduler(executor72);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask74 = unitWaiter67.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler73);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler75 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask64, (net.goldolphin.cate.IScheduler) executorScheduler73);
        java.util.concurrent.Executor executor76 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler77 = new net.goldolphin.cate.ExecutorScheduler(executor76);
        net.goldolphin.cate.IScheduler[] iSchedulerArray78 = new net.goldolphin.cate.IScheduler[] { executorScheduler60, executorScheduler63, executorScheduler73, executorScheduler77 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner79 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool80 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray78, unitWaiterFunc0TaskIPartitioner79);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore81 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool80);
        int int82 = unitWaiterFunc0TaskPartitionedSchedulerPool80.getPartitionNum();
        net.goldolphin.cate.IScheduler iScheduler83 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore21.remove(unitWaiterFunc0TaskPartitionedSchedulerPool80);
        net.goldolphin.cate.IScheduler iScheduler84 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore4.remove(unitWaiterFunc0TaskPartitionedSchedulerPool80);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner2);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitWaiter10);
        org.junit.Assert.assertNotNull(unitWaiter11);
        org.junit.Assert.assertNotNull(unitTask14);
        org.junit.Assert.assertNotNull(unitTask17);
         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 7 + "'", int20 == 7);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitWaiter24);
        org.junit.Assert.assertNotNull(unitWaiter25);
        org.junit.Assert.assertNotNull(unitTask28);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitWaiter37);
        org.junit.Assert.assertNotNull(unitWaiter38);
        org.junit.Assert.assertNotNull(unitTask41);
        org.junit.Assert.assertNotNull(unitTask44);
        org.junit.Assert.assertNotNull(iSchedulerArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(unitTask53);
        org.junit.Assert.assertNotNull(unitWaiter54);
        org.junit.Assert.assertNotNull(unitWaiter55);
        org.junit.Assert.assertNotNull(unitTask58);
        org.junit.Assert.assertNotNull(unitTask61);
        org.junit.Assert.assertNotNull(unitTask66);
        org.junit.Assert.assertNotNull(unitWaiter67);
        org.junit.Assert.assertNotNull(unitWaiter68);
        org.junit.Assert.assertNotNull(unitTask71);
        org.junit.Assert.assertNotNull(unitTask74);
        org.junit.Assert.assertNotNull(iSchedulerArray78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNull(iScheduler83);
        org.junit.Assert.assertNull(iScheduler84);
    }
	@Test
    public void test140_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test140");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore46 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool45);
        int int47 = unitWaiterFunc0TaskPartitionedSchedulerPool45.getPartitionNum();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore48 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool45);
        net.goldolphin.cate.partitioned.IPartitioner iPartitioner49 = unitWaiterFunc0TaskPartitionedSchedulerPool45.getPartitioner();
        boolean boolean50 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool45);
        net.goldolphin.cate.Action0 action0_51 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask52 = net.goldolphin.cate.Task.create(action0_51);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter53 = unitTask52.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter54 = unitWaiter53.continueWithWaiter();
        java.util.concurrent.Executor executor55 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler56 = new net.goldolphin.cate.ExecutorScheduler(executor55);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask57 = unitWaiter53.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler56);
        java.util.concurrent.Executor executor58 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler59 = new net.goldolphin.cate.ExecutorScheduler(executor58);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask60 = unitWaiter53.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler59);
        java.util.concurrent.Executor executor61 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler62 = new net.goldolphin.cate.ExecutorScheduler(executor61);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask63 = null;
        net.goldolphin.cate.Action0 action0_64 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask65 = net.goldolphin.cate.Task.create(action0_64);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter66 = unitTask65.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter67 = unitWaiter66.continueWithWaiter();
        java.util.concurrent.Executor executor68 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler69 = new net.goldolphin.cate.ExecutorScheduler(executor68);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask70 = unitWaiter66.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler69);
        java.util.concurrent.Executor executor71 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler72 = new net.goldolphin.cate.ExecutorScheduler(executor71);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask73 = unitWaiter66.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler72);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler74 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask63, (net.goldolphin.cate.IScheduler) executorScheduler72);
        java.util.concurrent.Executor executor75 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler76 = new net.goldolphin.cate.ExecutorScheduler(executor75);
        net.goldolphin.cate.IScheduler[] iSchedulerArray77 = new net.goldolphin.cate.IScheduler[] { executorScheduler59, executorScheduler62, executorScheduler72, executorScheduler76 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner78 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool79 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray77, unitWaiterFunc0TaskIPartitioner78);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore80 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool79);
        net.goldolphin.cate.partitioned.IPartitioner iPartitioner81 = unitWaiterFunc0TaskPartitionedSchedulerPool79.getPartitioner();
        net.goldolphin.cate.Action0 action0_82 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask83 = net.goldolphin.cate.Task.create(action0_82);
        net.goldolphin.cate.util.ExecutorTimer executorTimer84 = new net.goldolphin.cate.util.ExecutorTimer();
        net.goldolphin.cate.Action0 action0_85 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask86 = net.goldolphin.cate.Task.create(action0_85);
        net.goldolphin.cate.Action0 action0_87 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask88 = net.goldolphin.cate.Task.create(action0_87);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter89 = unitTask88.continueWithWaiter();
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask90 = unitTask86.continueWith((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter89);
        net.goldolphin.cate.Action1<net.goldolphin.cate.Unit> unitAction1_91 = null;
        java.util.concurrent.TimeUnit timeUnit93 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Maybe<net.goldolphin.cate.Unit>> unitTask94 = executorTimer84.withTimeout((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitTask86, unitAction1_91, (long) (byte) -1, timeUnit93);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler95 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask96 = unitTask86.withScheduler((net.goldolphin.cate.IScheduler) synchronizedScheduler95);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask97 = unitTask83.withScheduler((net.goldolphin.cate.IScheduler) synchronizedScheduler95);
        waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.put(unitWaiterFunc0TaskPartitionedSchedulerPool79, (net.goldolphin.cate.IScheduler) synchronizedScheduler95);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNull(iPartitioner49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(unitTask52);
        org.junit.Assert.assertNotNull(unitWaiter53);
        org.junit.Assert.assertNotNull(unitWaiter54);
        org.junit.Assert.assertNotNull(unitTask57);
        org.junit.Assert.assertNotNull(unitTask60);
        org.junit.Assert.assertNotNull(unitTask65);
        org.junit.Assert.assertNotNull(unitWaiter66);
        org.junit.Assert.assertNotNull(unitWaiter67);
        org.junit.Assert.assertNotNull(unitTask70);
        org.junit.Assert.assertNotNull(unitTask73);
        org.junit.Assert.assertNotNull(iSchedulerArray77);
        org.junit.Assert.assertNull(iPartitioner81);
        org.junit.Assert.assertNotNull(unitTask83);
        org.junit.Assert.assertNotNull(unitTask86);
        org.junit.Assert.assertNotNull(unitTask88);
        org.junit.Assert.assertNotNull(unitWaiter89);
        org.junit.Assert.assertNotNull(unitTask90);
        org.junit.Assert.assertNotNull(unitTask94);
        org.junit.Assert.assertNotNull(unitTask96);
        org.junit.Assert.assertNotNull(unitTask97);
    }
	@Test
    public void test143_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test143");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        boolean boolean46 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool45);
        java.util.Map<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>[] func0TaskPartitionedSchedulerPoolMapArray47 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.getData();
        net.goldolphin.cate.Action0 action0_48 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask49 = net.goldolphin.cate.Task.create(action0_48);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter50 = unitTask49.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter51 = unitWaiter50.continueWithWaiter();
        java.util.concurrent.Executor executor52 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler53 = new net.goldolphin.cate.ExecutorScheduler(executor52);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask54 = unitWaiter50.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler53);
        java.util.concurrent.Executor executor55 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler56 = new net.goldolphin.cate.ExecutorScheduler(executor55);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask57 = unitWaiter50.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler56);
        java.util.concurrent.Executor executor58 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler59 = new net.goldolphin.cate.ExecutorScheduler(executor58);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask60 = null;
        net.goldolphin.cate.Action0 action0_61 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask62 = net.goldolphin.cate.Task.create(action0_61);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter63 = unitTask62.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter64 = unitWaiter63.continueWithWaiter();
        java.util.concurrent.Executor executor65 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler66 = new net.goldolphin.cate.ExecutorScheduler(executor65);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask67 = unitWaiter63.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler66);
        java.util.concurrent.Executor executor68 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler69 = new net.goldolphin.cate.ExecutorScheduler(executor68);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask70 = unitWaiter63.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler69);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler71 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask60, (net.goldolphin.cate.IScheduler) executorScheduler69);
        java.util.concurrent.Executor executor72 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler73 = new net.goldolphin.cate.ExecutorScheduler(executor72);
        net.goldolphin.cate.IScheduler[] iSchedulerArray74 = new net.goldolphin.cate.IScheduler[] { executorScheduler56, executorScheduler59, executorScheduler69, executorScheduler73 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner75 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool76 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray74, unitWaiterFunc0TaskIPartitioner75);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore77 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool76);
        int int78 = unitWaiterFunc0TaskPartitionedSchedulerPool76.getPartitionNum();
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore79 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool76);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.CollectTask<java.lang.CharSequence, java.lang.Object[]>, java.lang.reflect.AnnotatedElement> charSequenceCollectTaskPartitionedStore80 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.CollectTask<java.lang.CharSequence, java.lang.Object[]>, java.lang.reflect.AnnotatedElement>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool76);
        boolean boolean81 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool76);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(func0TaskPartitionedSchedulerPoolMapArray47);
        org.junit.Assert.assertNotNull(unitTask49);
        org.junit.Assert.assertNotNull(unitWaiter50);
        org.junit.Assert.assertNotNull(unitWaiter51);
        org.junit.Assert.assertNotNull(unitTask54);
        org.junit.Assert.assertNotNull(unitTask57);
        org.junit.Assert.assertNotNull(unitTask62);
        org.junit.Assert.assertNotNull(unitWaiter63);
        org.junit.Assert.assertNotNull(unitWaiter64);
        org.junit.Assert.assertNotNull(unitTask67);
        org.junit.Assert.assertNotNull(unitTask70);
        org.junit.Assert.assertNotNull(iSchedulerArray74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }
	@Test
    public void test144_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test144");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        boolean boolean46 = waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.contains(unitWaiterFunc0TaskPartitionedSchedulerPool45);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore47 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool45);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9 + "'", int15 == 9);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }
	@Test
    public void test149_1() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test149");
        net.goldolphin.cate.partitioned.HashedPartitioner<net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>> iSchedulerTaskWithSchedulerHashedPartitioner1 = net.goldolphin.cate.partitioned.HashedPartitioner.instance();
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask2 = null;
        net.goldolphin.cate.Action0 action0_3 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask4 = net.goldolphin.cate.Task.create(action0_3);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter5 = unitTask4.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter6 = unitWaiter5.continueWithWaiter();
        java.util.concurrent.Executor executor7 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler8 = new net.goldolphin.cate.ExecutorScheduler(executor7);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask9 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler8);
        java.util.concurrent.Executor executor10 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler11 = new net.goldolphin.cate.ExecutorScheduler(executor10);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask12 = unitWaiter5.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler11);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler13 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask2, (net.goldolphin.cate.IScheduler) executorScheduler11);
        int int15 = iSchedulerTaskWithSchedulerHashedPartitioner1.partition(iSchedulerTaskWithScheduler13, (int) (byte) 10);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((int) (byte) 1, (net.goldolphin.cate.partitioned.IPartitioner) iSchedulerTaskWithSchedulerHashedPartitioner1);
        net.goldolphin.cate.Action0 action0_17 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask18 = net.goldolphin.cate.Task.create(action0_17);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter19 = unitTask18.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter20 = unitWaiter19.continueWithWaiter();
        java.util.concurrent.Executor executor21 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler22 = new net.goldolphin.cate.ExecutorScheduler(executor21);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask23 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler22);
        java.util.concurrent.Executor executor24 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler25 = new net.goldolphin.cate.ExecutorScheduler(executor24);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask26 = unitWaiter19.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler25);
        java.util.concurrent.Executor executor27 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler28 = new net.goldolphin.cate.ExecutorScheduler(executor27);
        net.goldolphin.cate.ITask<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerITask29 = null;
        net.goldolphin.cate.Action0 action0_30 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask31 = net.goldolphin.cate.Task.create(action0_30);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter32 = unitTask31.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter33 = unitWaiter32.continueWithWaiter();
        java.util.concurrent.Executor executor34 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler35 = new net.goldolphin.cate.ExecutorScheduler(executor34);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask36 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler35);
        java.util.concurrent.Executor executor37 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler38 = new net.goldolphin.cate.ExecutorScheduler(executor37);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask39 = unitWaiter32.withScheduler((net.goldolphin.cate.IScheduler) executorScheduler38);
        net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>> iSchedulerTaskWithScheduler40 = new net.goldolphin.cate.TaskWithScheduler<net.goldolphin.cate.IScheduler, net.goldolphin.cate.TaskWithInitState<java.lang.CharSequence, java.io.Serializable>>(iSchedulerITask29, (net.goldolphin.cate.IScheduler) executorScheduler38);
        java.util.concurrent.Executor executor41 = null;
        net.goldolphin.cate.ExecutorScheduler executorScheduler42 = new net.goldolphin.cate.ExecutorScheduler(executor41);
        net.goldolphin.cate.IScheduler[] iSchedulerArray43 = new net.goldolphin.cate.IScheduler[] { executorScheduler25, executorScheduler28, executorScheduler38, executorScheduler42 };
        net.goldolphin.cate.partitioned.IPartitioner<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskIPartitioner44 = null;
        net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>> unitWaiterFunc0TaskPartitionedSchedulerPool45 = new net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>(iSchedulerArray43, unitWaiterFunc0TaskIPartitioner44);
        net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler> waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore46 = new net.goldolphin.cate.partitioned.PartitionedStore<net.goldolphin.cate.partitioned.PartitionedSchedulerPool<net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>>, net.goldolphin.cate.IScheduler>((net.goldolphin.cate.partitioned.PartitionedSchedulerPool) unitWaiterFunc0TaskPartitionedSchedulerPool45);
        net.goldolphin.cate.partitioned.IPartitioner iPartitioner47 = unitWaiterFunc0TaskPartitionedSchedulerPool45.getPartitioner();
        net.goldolphin.cate.Func0<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>> unitWaiterFunc0_48 = null;
        net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>> unitWaiterFunc0Task49 = new net.goldolphin.cate.Func0Task<net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>>(unitWaiterFunc0_48);
        net.goldolphin.cate.Action0 action0_51 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask52 = net.goldolphin.cate.Task.create(action0_51);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter53 = unitTask52.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter54 = unitWaiter53.continueWithWaiter();
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter55 = new net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter54);
        net.goldolphin.cate.IContinuation iContinuation56 = null;
        net.goldolphin.cate.FlattenTask.Continuation continuation57 = new net.goldolphin.cate.FlattenTask.Continuation(iContinuation56);
        net.goldolphin.cate.IContinuation iContinuation58 = unitWaiter54.buildContinuation(iContinuation56);
        net.goldolphin.cate.CollectTask.IndexContinuation indexContinuation59 = new net.goldolphin.cate.CollectTask.IndexContinuation((int) (byte) 100, iContinuation56);
        net.goldolphin.cate.IContinuation iContinuation60 = unitWaiterFunc0Task49.buildContinuation(iContinuation56);
        net.goldolphin.cate.IContinuation iContinuation62 = net.goldolphin.cate.IContinuation.END_CONTINUATION;
        net.goldolphin.cate.CollectTask.IndexContinuation indexContinuation63 = new net.goldolphin.cate.CollectTask.IndexContinuation((int) (short) -1, iContinuation62);
        net.goldolphin.cate.IContinuation iContinuation64 = unitWaiterFunc0Task49.buildContinuation((net.goldolphin.cate.IContinuation) indexContinuation63);
        net.goldolphin.cate.Action0 action0_65 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask66 = net.goldolphin.cate.Task.create(action0_65);
        net.goldolphin.cate.Action0 action0_67 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask68 = net.goldolphin.cate.Task.create(action0_67);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter69 = unitTask68.continueWithWaiter();
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask70 = unitTask66.continueWith((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter69);
        net.goldolphin.cate.Environment environment71 = null;
        net.goldolphin.cate.Action0 action0_72 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask73 = net.goldolphin.cate.Task.create(action0_72);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter74 = unitTask73.continueWithWaiter();
        net.goldolphin.cate.util.ExecutorTimer executorTimer75 = new net.goldolphin.cate.util.ExecutorTimer();
        net.goldolphin.cate.Action0 action0_76 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask77 = net.goldolphin.cate.Task.create(action0_76);
        net.goldolphin.cate.Action0 action0_78 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask79 = net.goldolphin.cate.Task.create(action0_78);
        net.goldolphin.cate.Waiter<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitWaiter80 = unitTask79.continueWithWaiter();
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask81 = unitTask77.continueWith((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitWaiter80);
        net.goldolphin.cate.Action1<net.goldolphin.cate.Unit> unitAction1_82 = null;
        java.util.concurrent.TimeUnit timeUnit84 = null;
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Maybe<net.goldolphin.cate.Unit>> unitTask85 = executorTimer75.withTimeout((net.goldolphin.cate.ITask<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit>) unitTask77, unitAction1_82, (long) (byte) -1, timeUnit84);
        net.goldolphin.cate.SynchronizedScheduler synchronizedScheduler86 = new net.goldolphin.cate.SynchronizedScheduler();
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask87 = unitTask77.withScheduler((net.goldolphin.cate.IScheduler) synchronizedScheduler86);
        net.goldolphin.cate.Task<net.goldolphin.cate.Unit, net.goldolphin.cate.Unit> unitTask88 = unitTask73.withScheduler((net.goldolphin.cate.IScheduler) synchronizedScheduler86);
        indexContinuation63.apply((java.lang.Object) unitTask70, environment71, (net.goldolphin.cate.IScheduler) synchronizedScheduler86);
        waiterFunc0TaskPartitionedSchedulerPoolPartitionedStore16.put(unitWaiterFunc0TaskPartitionedSchedulerPool45, (net.goldolphin.cate.IScheduler) synchronizedScheduler86);
        org.junit.Assert.assertNotNull(iSchedulerTaskWithSchedulerHashedPartitioner1);
        org.junit.Assert.assertNotNull(unitTask4);
        org.junit.Assert.assertNotNull(unitWaiter5);
        org.junit.Assert.assertNotNull(unitWaiter6);
        org.junit.Assert.assertNotNull(unitTask9);
        org.junit.Assert.assertNotNull(unitTask12);
         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(unitTask18);
        org.junit.Assert.assertNotNull(unitWaiter19);
        org.junit.Assert.assertNotNull(unitWaiter20);
        org.junit.Assert.assertNotNull(unitTask23);
        org.junit.Assert.assertNotNull(unitTask26);
        org.junit.Assert.assertNotNull(unitTask31);
        org.junit.Assert.assertNotNull(unitWaiter32);
        org.junit.Assert.assertNotNull(unitWaiter33);
        org.junit.Assert.assertNotNull(unitTask36);
        org.junit.Assert.assertNotNull(unitTask39);
        org.junit.Assert.assertNotNull(iSchedulerArray43);
        org.junit.Assert.assertNull(iPartitioner47);
        org.junit.Assert.assertNotNull(unitTask52);
        org.junit.Assert.assertNotNull(unitWaiter53);
        org.junit.Assert.assertNotNull(unitWaiter54);
        org.junit.Assert.assertNotNull(iContinuation58);
        org.junit.Assert.assertNotNull(iContinuation60);
        org.junit.Assert.assertNotNull(iContinuation62);
        org.junit.Assert.assertNotNull(iContinuation64);
        org.junit.Assert.assertNotNull(unitTask66);
        org.junit.Assert.assertNotNull(unitTask68);
        org.junit.Assert.assertNotNull(unitWaiter69);
        org.junit.Assert.assertNotNull(unitTask70);
        org.junit.Assert.assertNotNull(unitTask73);
        org.junit.Assert.assertNotNull(unitWaiter74);
        org.junit.Assert.assertNotNull(unitTask77);
        org.junit.Assert.assertNotNull(unitTask79);
        org.junit.Assert.assertNotNull(unitWaiter80);
        org.junit.Assert.assertNotNull(unitTask81);
        org.junit.Assert.assertNotNull(unitTask85);
        org.junit.Assert.assertNotNull(unitTask87);
        org.junit.Assert.assertNotNull(unitTask88);
    }
}