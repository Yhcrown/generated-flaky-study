import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class TestGroup100Case0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test001");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.BufferedWriter bufferedWriter3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = null;
        java.nio.charset.Charset charset5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, bufferedWriter3, strComparator4, charset5, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test002");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.BinaryFileBuffer binaryFileBuffer1 = new com.google.code.externalsorting.BinaryFileBuffer(bufferedReader0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test003");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test004");
        java.util.List<java.io.File> fileList0 = null;
        java.io.File file1 = null;
        java.util.Comparator<java.lang.String> strComparator2 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList0, file1, strComparator2, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator2);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test005");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file5 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test006");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test007");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset5 = null;
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file10 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList2, strComparator4, charset5, file6, false, false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test008");
        java.io.BufferedWriter bufferedWriter0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions1 = null;
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray2 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList3 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList3, cSVRecordBufferArray2);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray5 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList6 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList6, cSVRecordArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions1, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList3, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordBufferArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test009");
        java.io.File file0 = null;
        java.io.File file1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file0, file1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test010");
        int int0 = com.google.code.externalsorting.csv.CsvExternalSort.DEFAULTMAXTEMPFILES;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1024 + "'", int0 == 1024);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test011");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 10.0f);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 68L + "'", long1 == 68L);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test012");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test013");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset2 = null;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, charset2, file3, false, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test014");
        java.io.BufferedReader bufferedReader1 = null;
        java.io.File file2 = null;
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions3 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray4 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList5 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList5, cSVRecordArray4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList7 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(1L, bufferedReader1, file2, csvSortOptions3, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test015");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            long long5 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test016");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks((long) 0, (int) (byte) 0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test017");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = null;
        java.nio.charset.Charset charset3 = null;
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, (int) (byte) 1, charset3, file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test018");
        long long1 = com.google.code.externalsorting.StringSizeEstimator.estimatedSizeOf("");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 60L + "'", long1 == 60L);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test019");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test020");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) 1024);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test021");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 70L + "'", long1 == 70L);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test022");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) 10, 100, (-1L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test023");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test024");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray3 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList4 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList4, iOStringStackArray3);
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator1, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
        org.junit.Assert.assertNotNull(iOStringStackArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test025");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset5, true, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test026");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 62L + "'", long1 == 62L);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test027");
        long long0 = com.google.code.externalsorting.ExternalSort.estimateAvailableMemory();
// flaky:         org.junit.Assert.assertTrue("'" + long0 + "' != '" + 3806833608L + "'", long0 == 3806833608L);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test028");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file3, true, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test029");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray4 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList5 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList5, iOStringStackArray4);
        // The following exception was thrown during execution in test generation
        try {
            long long7 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator1, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
        org.junit.Assert.assertNotNull(iOStringStackArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test030");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset3 = null;
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList8 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, (int) (byte) 1, charset3, file4, true, 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test031");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test032");
        int int0 = com.google.code.externalsorting.ExternalSort.DEFAULTMAXTEMPFILES;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1024 + "'", int0 == 1024);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test033");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList3 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test034");
        java.io.BufferedReader bufferedReader0 = null;
        java.util.Comparator<java.lang.String> strComparator2 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) 1, strComparator2, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator2);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test035");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions4 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray6 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList7 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList7, cSVRecordArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, csvSortOptions4, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test036");
        org.apache.commons.csv.CSVParser cSVParser0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.csv.CSVRecordBuffer cSVRecordBuffer1 = new com.google.code.externalsorting.csv.CSVRecordBuffer(cSVParser0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test037");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset3 = null;
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList8 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, (int) (byte) 1, charset3, file4, false, (int) (byte) 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test038");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 60L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test039");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file3, false, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test040");
        com.google.code.externalsorting.ExternalSort externalSort0 = new com.google.code.externalsorting.ExternalSort();
        java.lang.Class<?> wildcardClass1 = externalSort0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test041");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset2 = null;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, charset2, file3, true, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test042");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file2, true, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test043");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test044");
        long long0 = com.google.code.externalsorting.csv.CsvExternalSort.estimateAvailableMemory();
// flaky:         org.junit.Assert.assertTrue("'" + long0 + "' != '" + 211603576L + "'", long0 == 211603576L);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test045");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray3 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList4 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList4, iOStringStackArray3);
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator1, false, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
        org.junit.Assert.assertNotNull(iOStringStackArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test046");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.util.Comparator<java.lang.String> strComparator2 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file0, file1, strComparator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator2);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test047");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test048");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test049");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file2, false, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test050");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 1L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 62L + "'", long1 == 62L);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test051");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset2 = null;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, charset2, file3, true, 1024);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test052");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file2, false, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test053");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test054");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        java.nio.charset.Charset charset6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test055");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator2 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator2, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder7.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray9 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList10 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList10, cSVRecordArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList12 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file0, file1, csvSortOptions8, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertNotNull(cSVRecordArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test056");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList4 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test057");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        java.nio.charset.Charset charset6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test058");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = null;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray3 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList4 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList4, iOStringStackArray3);
        // The following exception was thrown during execution in test generation
        try {
            long long6 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator1, false, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(iOStringStackArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test059");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file3, false, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test060");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.Comparator<java.lang.String> strComparator5 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator5;
        java.nio.charset.Charset charset7 = null;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file12 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList3, strComparator5, charset7, file8, true, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strComparator5);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test061");
        java.io.File[] fileArray0 = new java.io.File[] {};
        java.util.ArrayList<java.io.File> fileList1 = new java.util.ArrayList<java.io.File>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList1, fileArray0);
        java.io.File file3 = null;
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList1, file3, strComparator4, charset5, false, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strComparator4);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test062");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file2, true, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test063");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset3 = null;
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList6 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, (int) (byte) -1, charset3, file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test064");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator1;
        java.nio.charset.Charset charset4 = null;
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList8 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, (int) (byte) 100, charset4, file5, false, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator1);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test065");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.io.BufferedWriter bufferedWriter14 = null;
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator15;
        java.nio.charset.Charset charset17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long20 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, bufferedWriter14, strComparator15, charset17, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7753620494967685975flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(strComparator15);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test066");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.io.File[] fileArray28 = new java.io.File[] { file12, file26 };
        java.util.ArrayList<java.io.File> fileList29 = new java.util.ArrayList<java.io.File>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList29, fileArray28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray31 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList32 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList32, cSVRecordArray31);
        java.io.File file34 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator35, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = csvSortOptions41.getComparator();
        java.io.File file43 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList32, file34, csvSortOptions41);
        java.util.Comparator<java.lang.String> strComparator44 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset45 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long46 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList29, file34, strComparator44, charset45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6563204697684354958flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7638100972389040005flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(cSVRecordArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNull(cSVRecordComparator42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2495911335267690112flatfile");
        org.junit.Assert.assertNotNull(strComparator44);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test067");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.io.File[] fileArray14 = new java.io.File[] { file12 };
        java.util.ArrayList<java.io.File> fileList15 = new java.util.ArrayList<java.io.File>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList15, fileArray14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29);
        java.util.Comparator<java.lang.String> strComparator31 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator31;
        java.nio.charset.Charset charset33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList15, file29, strComparator31, charset33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8150026135799942173flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(fileArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3590384412564108962flatfile");
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(strComparator31);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test068");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.io.File[] fileArray26 = new java.io.File[] { file12, file16 };
        java.util.ArrayList<java.io.File> fileList27 = new java.util.ArrayList<java.io.File>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList27, fileArray26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        java.util.Comparator<java.lang.String> strComparator43 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator43;
        java.nio.charset.Charset charset45 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long46 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList27, file41, strComparator43, charset45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3885140689675608003flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1553431591156442722flatfile");
        org.junit.Assert.assertNotNull(fileArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4848972671994761605flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(strComparator43);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test069");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks((long) (byte) 0, (-1), (long) 100);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 16L + "'", long3 == 16L);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test070");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.Comparator<java.lang.String> strComparator27 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file12, file17, strComparator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4154682969847843161flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2903384421225748005flatfile");
        org.junit.Assert.assertNotNull(strComparator27);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test071");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (byte) 10, (int) (short) 0, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test072");
        java.io.BufferedReader bufferedReader1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions15 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch((long) (short) 1, bufferedReader1, file14, csvSortOptions15, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6075158555118713395flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2955724073872825721flatfile");
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test073");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.Comparator<java.lang.String> strComparator35 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator35;
        java.nio.charset.Charset charset38 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray39 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList40 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList40, cSVRecordArray39);
        java.io.File file42 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions49 = builder48.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = csvSortOptions49.getComparator();
        java.io.File file51 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList40, file42, csvSortOptions49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList54 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator35, 10, charset38, file51, true, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4717145692987823294flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5836706869425702251flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5067426313544872679flatfile");
        org.junit.Assert.assertNotNull(strComparator35);
        org.junit.Assert.assertNotNull(cSVRecordArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(csvSortOptions49);
        org.junit.Assert.assertNull(cSVRecordComparator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4957937741309688352flatfile");
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test074");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator13;
        java.nio.charset.Charset charset16 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, 1, charset16, file20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3702785383151961835flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7266378949515240323flatfile");
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test075");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.util.Comparator<java.lang.String> strComparator14 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator14;
        java.nio.charset.Charset charset16 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray30 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList31 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList31, cSVRecordArray30);
        java.io.File file33 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = csvSortOptions40.getComparator();
        java.io.File file42 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList31, file33, csvSortOptions40);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions49 = builder48.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = csvSortOptions49.getComparator();
        java.io.File file51 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file33, csvSortOptions49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList54 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator14, charset16, file51, false, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7148065316538050795flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(strComparator14);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7458970011839020819flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertNull(cSVRecordComparator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8761353408805185338flatfile");
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(csvSortOptions49);
        org.junit.Assert.assertNull(cSVRecordComparator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4045684029984168610flatfile");
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test076");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test077");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator13;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator41, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = builder44.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions47 = builder46.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = csvSortOptions47.getComparator();
        java.io.File file49 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file31, csvSortOptions47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, file49, true, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7105806586667040574flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2463973354921107707flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7363015494264833098flatfile");
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(csvSortOptions47);
        org.junit.Assert.assertNull(cSVRecordComparator48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2178359111668353013flatfile");
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test078");
        long long1 = com.google.code.externalsorting.StringSizeEstimator.estimatedSizeOf("hi!");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 66L + "'", long1 == 66L);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test079");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray26 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList27 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList27, cSVRecordArray26);
        java.io.File file29 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator30, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = builder33.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions36 = builder35.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = csvSortOptions36.getComparator();
        java.io.File file38 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList27, file29, csvSortOptions36);
        java.util.List<java.io.File> fileList39 = com.google.code.externalsorting.ExternalSort.sortInBatch(file38);
        java.util.List<java.io.File> fileList40 = com.google.code.externalsorting.ExternalSort.sortInBatch(file38);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        java.util.List<java.io.File> fileList54 = com.google.code.externalsorting.ExternalSort.sortInBatch(file53);
        java.io.File[] fileArray55 = new java.io.File[] { file12, file16, file38, file53 };
        java.util.ArrayList<java.io.File> fileList56 = new java.util.ArrayList<java.io.File>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.io.File>) fileList56, fileArray55);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray58 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList59 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList59, cSVRecordArray58);
        java.io.File file61 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator62, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = csvSortOptions68.getComparator();
        java.io.File file70 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList59, file61, csvSortOptions68);
        java.util.List<java.io.File> fileList71 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70);
        java.util.Comparator<java.lang.String> strComparator72 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset73 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long75 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles((java.util.List<java.io.File>) fileList56, file70, strComparator72, charset73, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3276006644165234988flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7440400459264275143flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(csvSortOptions36);
        org.junit.Assert.assertNull(cSVRecordComparator37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file38.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6623478205763214295flatfile");
        org.junit.Assert.assertNotNull(fileList39);
        org.junit.Assert.assertNotNull(fileList40);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4209563460400894694flatfile");
        org.junit.Assert.assertNotNull(fileList54);
        org.junit.Assert.assertNotNull(fileArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(cSVRecordArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNull(cSVRecordComparator69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file70.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8101804045525161457flatfile");
        org.junit.Assert.assertNotNull(fileList71);
        org.junit.Assert.assertNotNull(strComparator72);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test080");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(100L, 10, (long) 100);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 50L + "'", long3 == 50L);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test081");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        java.nio.charset.Charset charset6 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray7 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList8 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList8, cSVRecordArray7);
        java.io.File file10 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator11, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder14.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions17 = builder16.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = csvSortOptions17.getComparator();
        java.io.File file19 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList8, file10, csvSortOptions17);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray20 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList21 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList21, cSVRecordArray20);
        java.io.File file23 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator24, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = builder27.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions30 = builder29.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = csvSortOptions30.getComparator();
        java.io.File file32 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList21, file23, csvSortOptions30);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList8, file23, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file46 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList2, strComparator4, charset6, file41, false, false, true);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strComparator4);
        org.junit.Assert.assertNotNull(cSVRecordArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(csvSortOptions17);
        org.junit.Assert.assertNull(cSVRecordComparator18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch30485602477136533flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(csvSortOptions30);
        org.junit.Assert.assertNull(cSVRecordComparator31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4543608553325531683flatfile");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8734001586473739857flatfile");
        org.junit.Assert.assertNotNull(fileList42);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test082");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(10L, 100, 3806833608L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1903416804L + "'", long3 == 1903416804L);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test083");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        java.nio.charset.Charset charset6 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray7 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList8 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList8, cSVRecordArray7);
        java.io.File file10 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator11, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder14.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions17 = builder16.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = csvSortOptions17.getComparator();
        java.io.File file19 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList8, file10, csvSortOptions17);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray20 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList21 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList21, cSVRecordArray20);
        java.io.File file23 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator24, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = builder27.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions30 = builder29.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = csvSortOptions30.getComparator();
        java.io.File file32 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList21, file23, csvSortOptions30);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList8, file23, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file46 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList2, strComparator4, charset6, file41, false, false, false);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strComparator4);
        org.junit.Assert.assertNotNull(cSVRecordArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(csvSortOptions17);
        org.junit.Assert.assertNull(cSVRecordComparator18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3040544632330475165flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(csvSortOptions30);
        org.junit.Assert.assertNull(cSVRecordComparator31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7678538281435590946flatfile");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4264376943901517501flatfile");
        org.junit.Assert.assertNotNull(fileList42);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test084");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator41, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = builder44.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions47 = builder46.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = csvSortOptions47.getComparator();
        java.io.File file49 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file31, csvSortOptions47);
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file49);
        java.util.Comparator<java.lang.String> strComparator51 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file13, file49, strComparator51);
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray54 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList55 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList55, iOStringStackArray54);
        // The following exception was thrown during execution in test generation
        try {
            long long57 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator51, false, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6273929810166362755flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4273748508595542924flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2542265237926424487flatfile");
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(csvSortOptions47);
        org.junit.Assert.assertNull(cSVRecordComparator48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6068105779040445892flatfile");
        org.junit.Assert.assertNotNull(fileList50);
        org.junit.Assert.assertNotNull(strComparator51);
        org.junit.Assert.assertNotNull(iOStringStackArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test085");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.io.BufferedWriter bufferedWriter36 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray37 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList38 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList38, cSVRecordArray37);
        java.io.File file40 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator41, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = builder44.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions47 = builder46.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = csvSortOptions47.getComparator();
        java.io.File file49 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList38, file40, csvSortOptions47);
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file49);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray51 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList52 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList52, cSVRecordArray51);
        java.io.File file54 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions61 = builder60.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = csvSortOptions61.getComparator();
        java.io.File file63 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file54, csvSortOptions61);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray64 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList65 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList65, cSVRecordArray64);
        java.io.File file67 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList65, file67, csvSortOptions74);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator77, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder82 = builder80.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions83 = builder82.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator84 = csvSortOptions83.getComparator();
        java.io.File file85 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file67, csvSortOptions83);
        java.util.List<java.io.File> fileList86 = com.google.code.externalsorting.ExternalSort.sortInBatch(file85);
        java.util.Comparator<java.lang.String> strComparator87 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file49, file85, strComparator87);
        java.nio.charset.Charset charset89 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long92 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, bufferedWriter36, strComparator87, charset89, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1121712948881172767flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4696692307098598466flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch430340720117858000flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(csvSortOptions47);
        org.junit.Assert.assertNull(cSVRecordComparator48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5583968652476438636flatfile");
        org.junit.Assert.assertNotNull(fileList50);
        org.junit.Assert.assertNotNull(cSVRecordArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(csvSortOptions61);
        org.junit.Assert.assertNull(cSVRecordComparator62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2730239119488216176flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7042014726530394787flatfile");
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(csvSortOptions83);
        org.junit.Assert.assertNull(cSVRecordComparator84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch749014179929785689flatfile");
        org.junit.Assert.assertNotNull(fileList86);
        org.junit.Assert.assertNotNull(strComparator87);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test086");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test087");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.io.BufferedWriter bufferedWriter36 = null;
        java.util.Comparator<java.lang.String> strComparator37 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long41 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, bufferedWriter36, strComparator37, charset38, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3440061845549339432flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3529815322489773556flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4244322000242893661flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(strComparator37);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test088");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray35 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList36 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList36, cSVRecordArray35);
        java.io.File file38 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = csvSortOptions45.getComparator();
        java.io.File file47 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList36, file38, csvSortOptions45);
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file47);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray62 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList63 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList63, cSVRecordArray62);
        java.io.File file65 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder69 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator66, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = builder69.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions72 = builder71.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator73 = csvSortOptions72.getComparator();
        java.io.File file74 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList63, file65, csvSortOptions72);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder78 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator75, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = builder78.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions81 = builder80.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator82 = csvSortOptions81.getComparator();
        java.io.File file83 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file65, csvSortOptions81);
        java.util.List<java.io.File> fileList84 = com.google.code.externalsorting.ExternalSort.sortInBatch(file83);
        java.util.Comparator<java.lang.String> strComparator85 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file47, file83, strComparator85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList87 = com.google.code.externalsorting.ExternalSort.sortInBatch(file16, strComparator85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3201448897066196343flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7177790224040087672flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5109611585290635126flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertNull(cSVRecordComparator46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file47.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1732700849099174639flatfile");
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch44777945508687066flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(csvSortOptions72);
        org.junit.Assert.assertNull(cSVRecordComparator73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file74.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7481294956563071315flatfile");
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(csvSortOptions81);
        org.junit.Assert.assertNull(cSVRecordComparator82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file83.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7470605874594190679flatfile");
        org.junit.Assert.assertNotNull(fileList84);
        org.junit.Assert.assertNotNull(strComparator85);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test089");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(0L, 100, (long) 1024);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 512L + "'", long3 == 512L);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test090");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray3 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList4 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList4, cSVRecordArray3);
        java.io.File file6 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator7, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = builder10.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions13 = builder12.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator14 = csvSortOptions13.getComparator();
        java.io.File file15 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList4, file6, csvSortOptions13);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file15);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file15, csvSortOptions23);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(csvSortOptions13);
        org.junit.Assert.assertNull(cSVRecordComparator14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file15.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4727472707893340299flatfile");
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test091");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.Comparator<java.lang.String> strComparator35 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset37 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray38 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList39 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList39, cSVRecordArray38);
        java.io.File file41 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file41, csvSortOptions48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator35, (int) (short) 100, charset37, file50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6381970361628464230flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8777206218332631595flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2208427724696943574flatfile");
        org.junit.Assert.assertNotNull(strComparator35);
        org.junit.Assert.assertNotNull(cSVRecordArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2769022092274617116flatfile");
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test092");
        java.io.BufferedReader bufferedReader0 = null;
        java.util.Comparator<java.lang.String> strComparator2 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList5 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 16L, strComparator2, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator2);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test093");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.Comparator<java.lang.String> strComparator35 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file16, strComparator35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8163207975854887941flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch60255260616067215flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6135154546659690528flatfile");
        org.junit.Assert.assertNotNull(strComparator35);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test094");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test095");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        java.util.List<java.io.File> fileList45 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray46 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList47 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList47, cSVRecordArray46);
        java.io.File file49 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator50, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder55 = builder53.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions56 = builder55.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions56.getComparator();
        java.io.File file58 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList47, file49, csvSortOptions56);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray59 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList60 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList60, cSVRecordArray59);
        java.io.File file62 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator63, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder68 = builder66.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions69 = builder68.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator70 = csvSortOptions69.getComparator();
        java.io.File file71 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList60, file62, csvSortOptions69);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator72 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder75 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator72, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder77 = builder75.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions78 = builder77.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator79 = csvSortOptions78.getComparator();
        java.io.File file80 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList47, file62, csvSortOptions78);
        java.util.List<java.io.File> fileList81 = com.google.code.externalsorting.ExternalSort.sortInBatch(file80);
        java.util.Comparator<java.lang.String> strComparator82 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file44, file80, strComparator82);
        java.util.Comparator<java.lang.String> strComparator84 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator84;
        // The following exception was thrown during execution in test generation
        try {
            long long86 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file80, strComparator84);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8979727239754186854flatfile (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6351360947898101071flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2910847872815449668flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5715474170737742467flatfile");
        org.junit.Assert.assertNotNull(fileList45);
        org.junit.Assert.assertNotNull(cSVRecordArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(csvSortOptions56);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6038603319124020334flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(csvSortOptions69);
        org.junit.Assert.assertNull(cSVRecordComparator70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file71.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6673404720818057357flatfile");
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(csvSortOptions78);
        org.junit.Assert.assertNull(cSVRecordComparator79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file80.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4399497145114273355flatfile");
        org.junit.Assert.assertNotNull(fileList81);
        org.junit.Assert.assertNotNull(strComparator82);
        org.junit.Assert.assertNotNull(strComparator84);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test096");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file26, file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9002242938695136249flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4270463504655714781flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test097");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(60L, (int) (byte) 100, 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test098");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        // The following exception was thrown during execution in test generation
        try {
            long long45 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file44);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6041495371987549912flatfile (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3702606869937346852flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3838345637074727988flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3384401468232938840flatfile");
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test099");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.charset(charset6);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test100");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray35 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList36 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList36, cSVRecordArray35);
        java.io.File file38 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = csvSortOptions45.getComparator();
        java.io.File file47 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList36, file38, csvSortOptions45);
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file47);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        java.util.List<java.io.File> fileList62 = com.google.code.externalsorting.ExternalSort.sortInBatch(file61);
        java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(file61);
        java.util.Comparator<java.lang.String> strComparator64 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long66 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList48, file61, strComparator64, true);
        java.nio.charset.Charset charset68 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray69 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList70 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList70, cSVRecordArray69);
        java.io.File file72 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator73 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator73, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder78 = builder76.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions79 = builder78.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator80 = csvSortOptions79.getComparator();
        java.io.File file81 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList70, file72, csvSortOptions79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator64, (int) (short) 10, charset68, file81, false, (-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: charset");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8406686514812129083flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1790665452634521289flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6581527453292830274flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertNull(cSVRecordComparator46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file47.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1524529190159074548flatfile");
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7953332007930462011flatfile");
        org.junit.Assert.assertNotNull(fileList62);
        org.junit.Assert.assertNotNull(fileList63);
        org.junit.Assert.assertNotNull(strComparator64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(csvSortOptions79);
        org.junit.Assert.assertNull(cSVRecordComparator80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file81.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2471986777658537757flatfile");
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test101");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.util.Comparator<java.lang.String> strComparator4 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator4;
        java.nio.charset.Charset charset6 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray7 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList8 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList8, cSVRecordArray7);
        java.io.File file10 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator11, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder14.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions17 = builder16.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = csvSortOptions17.getComparator();
        java.io.File file19 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList8, file10, csvSortOptions17);
        java.util.List<java.io.File> fileList20 = com.google.code.externalsorting.ExternalSort.sortInBatch(file19);
        java.util.List<java.io.File> fileList21 = com.google.code.externalsorting.ExternalSort.sortInBatch(file19);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file22 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList2, strComparator4, charset6, file19);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strComparator4);
        org.junit.Assert.assertNotNull(cSVRecordArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(csvSortOptions17);
        org.junit.Assert.assertNull(cSVRecordComparator18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2511233971213637958flatfile");
        org.junit.Assert.assertNotNull(fileList20);
        org.junit.Assert.assertNotNull(fileList21);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test102");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray27 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList28 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList28, cSVRecordArray27);
        java.io.File file30 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions37 = builder36.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator38 = csvSortOptions37.getComparator();
        java.io.File file39 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList28, file30, csvSortOptions37);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file30, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        java.util.Comparator<java.lang.String> strComparator50 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file12, file48, strComparator50);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator50;
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5429677324356226657flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4182552629371328980flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(csvSortOptions37);
        org.junit.Assert.assertNull(cSVRecordComparator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5532955436346330389flatfile");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6768642640840026718flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(strComparator50);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test103");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(1L, (int) (short) -1, 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test104");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) 'a', 1903416804L);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test105");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.io.File file14 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray56 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList57 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList57, cSVRecordArray56);
        java.io.File file59 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator60, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions66 = builder65.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = csvSortOptions66.getComparator();
        java.io.File file68 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57, file59, csvSortOptions66);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator69, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = builder72.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions75 = builder74.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = csvSortOptions75.getComparator();
        java.io.File file77 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file59, csvSortOptions75);
        java.util.List<java.io.File> fileList78 = com.google.code.externalsorting.ExternalSort.sortInBatch(file77);
        java.util.Comparator<java.lang.String> strComparator79 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file41, file77, strComparator79);
        java.util.List<java.io.File> fileList82 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27, strComparator79, false);
        // The following exception was thrown during execution in test generation
        try {
            long long84 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file14, strComparator79, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4527181372846329196flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7883745702238130676flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8243160810113826697flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch365754146447969987flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(csvSortOptions66);
        org.junit.Assert.assertNull(cSVRecordComparator67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6181174511194184856flatfile");
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(csvSortOptions75);
        org.junit.Assert.assertNull(cSVRecordComparator76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file77.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5736080628633813623flatfile");
        org.junit.Assert.assertNotNull(fileList78);
        org.junit.Assert.assertNotNull(strComparator79);
        org.junit.Assert.assertNotNull(fileList82);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test106");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.List<java.io.File> fileList36 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.io.BufferedWriter bufferedWriter37 = null;
        java.util.Comparator<java.lang.String> strComparator38 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.nio.charset.Charset charset39 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long42 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList36, bufferedWriter37, strComparator38, charset39, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2993135507196329277flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4710295860752595607flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8928424952896447385flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(fileList36);
        org.junit.Assert.assertNotNull(strComparator38);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test107");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        java.util.Comparator<java.lang.String> strComparator30 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long32 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList14, file27, strComparator30, true);
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray34 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList35 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList35, iOStringStackArray34);
        // The following exception was thrown during execution in test generation
        try {
            long long37 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator30, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8306358262830514711flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3449996361795117938flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(strComparator30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(iOStringStackArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test108");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks((long) (short) -1, 1, (long) (short) 10);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test109");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.List<java.io.File> fileList26 = com.google.code.externalsorting.ExternalSort.sortInBatch(file25);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray27 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList28 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList28, cSVRecordArray27);
        java.io.File file30 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions37 = builder36.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator38 = csvSortOptions37.getComparator();
        java.io.File file39 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList28, file30, csvSortOptions37);
        java.util.List<java.io.File> fileList40 = com.google.code.externalsorting.ExternalSort.sortInBatch(file39);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray54 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList55 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList55, cSVRecordArray54);
        java.io.File file57 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator58 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator58, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = builder61.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions64 = builder63.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator65 = csvSortOptions64.getComparator();
        java.io.File file66 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList55, file57, csvSortOptions64);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file57, csvSortOptions73);
        java.util.List<java.io.File> fileList76 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75);
        java.util.Comparator<java.lang.String> strComparator77 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file39, file75, strComparator77);
        java.util.List<java.io.File> fileList80 = com.google.code.externalsorting.ExternalSort.sortInBatch(file25, strComparator77, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder84 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator81, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = builder84.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions87 = builder86.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = csvSortOptions87.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file89 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file25, csvSortOptions87);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5528685650997598446flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8742460482604941012flatfile");
        org.junit.Assert.assertNotNull(fileList26);
        org.junit.Assert.assertNotNull(cSVRecordArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(csvSortOptions37);
        org.junit.Assert.assertNull(cSVRecordComparator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4659786182614460827flatfile");
        org.junit.Assert.assertNotNull(fileList40);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch352689444929774281flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(csvSortOptions64);
        org.junit.Assert.assertNull(cSVRecordComparator65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file66.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4123896343926080343flatfile");
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4697619277209690015flatfile");
        org.junit.Assert.assertNotNull(fileList76);
        org.junit.Assert.assertNotNull(strComparator77);
        org.junit.Assert.assertNotNull(fileList80);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(csvSortOptions87);
        org.junit.Assert.assertNull(cSVRecordComparator88);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test110");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray4 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList5 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList5, cSVRecordArray4);
        java.io.File file7 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = csvSortOptions14.getComparator();
        java.io.File file16 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList5, file7, csvSortOptions14);
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file16);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray18 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList19 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList19, cSVRecordArray18);
        java.io.File file21 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = csvSortOptions28.getComparator();
        java.io.File file30 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file21, csvSortOptions28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray31 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList32 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList32, cSVRecordArray31);
        java.io.File file34 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator35, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = csvSortOptions41.getComparator();
        java.io.File file43 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList32, file34, csvSortOptions41);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator44, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = builder47.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions50 = builder49.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator51 = csvSortOptions50.getComparator();
        java.io.File file52 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file34, csvSortOptions50);
        java.util.List<java.io.File> fileList53 = com.google.code.externalsorting.ExternalSort.sortInBatch(file52);
        java.util.Comparator<java.lang.String> strComparator54 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file16, file52, strComparator54);
        java.nio.charset.Charset charset56 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray57 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList58 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList58, cSVRecordArray57);
        java.io.File file60 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = csvSortOptions67.getComparator();
        java.io.File file69 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58, file60, csvSortOptions67);
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file69);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file71 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList2, strComparator54, charset56, file69);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(cSVRecordArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertNull(cSVRecordComparator15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7651849590400529739flatfile");
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(cSVRecordArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertNull(cSVRecordComparator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2443026979773385950flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNull(cSVRecordComparator42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch507704238793525871flatfile");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(csvSortOptions50);
        org.junit.Assert.assertNull(cSVRecordComparator51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3932935521062019752flatfile");
        org.junit.Assert.assertNotNull(fileList53);
        org.junit.Assert.assertNotNull(strComparator54);
        org.junit.Assert.assertNotNull(cSVRecordArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertNull(cSVRecordComparator68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch16320250279154378flatfile");
        org.junit.Assert.assertNotNull(fileList70);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test111");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        long long32 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) long31);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8180156512311842104flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4377514484108565998flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 62L + "'", long32 == 62L);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test112");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.lang.Class<?> wildcardClass7 = builder5.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test113");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder91 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator88, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = builder91.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions94 = builder93.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray95 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList96 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList96, cSVRecordArray95);
        java.util.List<java.io.File> fileList98 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file48, csvSortOptions94, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList96);
        int int99 = csvSortOptions94.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5522706985786772573flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5164974503122186323flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1076035149956940564flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1538658486553083595flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2971954182514797558flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4584483080179270264flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5889840531294040423flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(csvSortOptions94);
        org.junit.Assert.assertNotNull(cSVRecordArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(fileList98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test114");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 62L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test115");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(60L, 10, (long) (byte) 10);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 6L + "'", long3 == 6L);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test116");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        long long6 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 68L + "'", long6 == 68L);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test117");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (short) -1, (int) '#', (long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test118");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder91 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator88, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = builder91.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions94 = builder93.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray95 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList96 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList96, cSVRecordArray95);
        java.util.List<java.io.File> fileList98 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file48, csvSortOptions94, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList96);
        boolean boolean99 = csvSortOptions94.isSkipHeader();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3061700102600842422flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8302378238758100726flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3609325808884908614flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2987015334947349773flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2453848691610785581flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8925820241575602332flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8583647260089606884flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(csvSortOptions94);
        org.junit.Assert.assertNotNull(cSVRecordArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(fileList98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test119");
        java.io.File file0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator27, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder30.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions33 = builder32.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = csvSortOptions33.getComparator();
        java.io.File file35 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file17, csvSortOptions33);
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file0, file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2069246520159081134flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3143033094493255909flatfile");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(csvSortOptions33);
        org.junit.Assert.assertNull(cSVRecordComparator34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7876848898315639260flatfile");
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test120");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file58, csvSortOptions74);
        boolean boolean77 = csvSortOptions74.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat78 = csvSortOptions74.getFormat();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9158109084405131595flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4078797098691056843flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3274585424934677472flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7199130192304645096flatfile");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6332259012845589033flatfile");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(cSVFormat78);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test121");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<java.lang.String> strComparator68 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file67, strComparator68, false);
        java.util.Comparator<java.lang.String> strComparator71 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        // The following exception was thrown during execution in test generation
        try {
            long long72 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file67, strComparator71);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8787476137629436806flatfile (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8235650922199291164flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7113374486490564902flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1302120828580589486flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1420548005097311999flatfile");
        org.junit.Assert.assertNotNull(strComparator68);
        org.junit.Assert.assertNotNull(fileList70);
        org.junit.Assert.assertNotNull(strComparator71);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test122");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '#', 1L);
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        java.lang.Class<?> wildcardClass6 = builder5.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test123");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray35 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList36 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList36, cSVRecordArray35);
        java.io.File file38 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = csvSortOptions45.getComparator();
        java.io.File file47 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList36, file38, csvSortOptions45);
        java.util.Comparator<java.lang.String> strComparator48 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file47, strComparator48, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator51 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator51, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = builder54.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions57 = builder56.build();
        long long58 = csvSortOptions57.getMaxMemory();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file59 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file47, csvSortOptions57);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8272800837479012889flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7635808160009456886flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4759650894011377364flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertNull(cSVRecordComparator46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file47.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1233030036429677392flatfile");
        org.junit.Assert.assertNotNull(strComparator48);
        org.junit.Assert.assertNotNull(fileList50);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(csvSortOptions57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test124");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 66L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test125");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        org.apache.commons.csv.CSVFormat cSVFormat8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.format(cSVFormat8);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder7.numHeader((int) (byte) 1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test126");
        java.io.BufferedReader bufferedReader0 = null;
        java.util.Comparator<java.lang.String> strComparator2 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        long long12 = csvSortOptions11.getMaxMemory();
        java.nio.charset.Charset charset13 = csvSortOptions11.getCharset();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 1903416804L, strComparator2, (int) (byte) 10, 1L, charset13, file26, true, (int) '4', true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparator2);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(charset13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6683170474854938558flatfile");
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test127");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder7.numHeader(100);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test128");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray27 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList28 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList28, cSVRecordArray27);
        java.io.File file30 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions37 = builder36.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator38 = csvSortOptions37.getComparator();
        java.io.File file39 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList28, file30, csvSortOptions37);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file30, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        java.util.Comparator<java.lang.String> strComparator50 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file12, file48, strComparator50);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray52 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList53 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList53, cSVRecordArray52);
        java.io.File file55 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator56, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = builder59.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions62 = builder61.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = csvSortOptions62.getComparator();
        java.io.File file64 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList53, file55, csvSortOptions62);
        java.util.Comparator<java.lang.String> strComparator65 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList67 = com.google.code.externalsorting.ExternalSort.sortInBatch(file64, strComparator65, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        long long75 = csvSortOptions74.getMaxMemory();
        java.nio.charset.Charset charset76 = csvSortOptions74.getCharset();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray77 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList78 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList78, cSVRecordArray77);
        java.io.File file80 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder84 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator81, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = builder84.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions87 = builder86.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = csvSortOptions87.getComparator();
        java.io.File file89 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList78, file80, csvSortOptions87);
        java.util.List<java.io.File> fileList90 = com.google.code.externalsorting.ExternalSort.sortInBatch(file89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList93 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48, strComparator65, charset76, file89, false, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1925140540470567058flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3116326904258323453flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(csvSortOptions37);
        org.junit.Assert.assertNull(cSVRecordComparator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch45060967415633973flatfile");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2271724793165794880flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(strComparator50);
        org.junit.Assert.assertNotNull(cSVRecordArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(csvSortOptions62);
        org.junit.Assert.assertNull(cSVRecordComparator63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8659963361872360657flatfile");
        org.junit.Assert.assertNotNull(strComparator65);
        org.junit.Assert.assertNotNull(fileList67);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(charset76);
        org.junit.Assert.assertNotNull(cSVRecordArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(csvSortOptions87);
        org.junit.Assert.assertNull(cSVRecordComparator88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file89.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2919066519371399858flatfile");
        org.junit.Assert.assertNotNull(fileList90);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test129");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder91 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator88, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = builder91.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions94 = builder93.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray95 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList96 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList96, cSVRecordArray95);
        java.util.List<java.io.File> fileList98 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file48, csvSortOptions94, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList96);
        long long99 = csvSortOptions94.getMaxMemory();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6319404918100264539flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7206975534141713723flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3367110101130514880flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5437487665943953162flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8213187584923202993flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8440683614693433858flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7473142469554894972flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(csvSortOptions94);
        org.junit.Assert.assertNotNull(cSVRecordArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(fileList98);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 0L + "'", long99 == 0L);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test130");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test131");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file58, csvSortOptions74);
        int int77 = csvSortOptions74.getNumHeader();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch531471910664735124flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8993374234149743776flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4637122770439475467flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8092509359447856957flatfile");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2048901516178048060flatfile");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test132");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        boolean boolean55 = csvSortOptions39.isDistinct();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8731652559951139428flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7944495581608305172flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3790426855304954462flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test133");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator30, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = builder33.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray42 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList43 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList43, cSVRecordArray42);
        java.io.File file45 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator46, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = builder49.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions52 = builder51.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = csvSortOptions52.getComparator();
        java.io.File file54 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList43, file45, csvSortOptions52);
        int int55 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList14, file27, csvSortOptions40, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList43);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray56 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList57 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList57, cSVRecordArray56);
        java.io.File file59 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator60, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions66 = builder65.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = csvSortOptions66.getComparator();
        java.io.File file68 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57, file59, csvSortOptions66);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator69, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = builder72.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions75 = builder74.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = csvSortOptions75.getComparator();
        java.io.File file77 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList43, file59, csvSortOptions75);
        boolean boolean78 = csvSortOptions75.isSkipHeader();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray79 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList80 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList80, cSVRecordBufferArray79);
        java.util.List<org.apache.commons.csv.CSVRecord> cSVRecordList82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions75, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList80, cSVRecordList82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5341409350523795170flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2785023534977662744flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertNotNull(cSVRecordArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(csvSortOptions52);
        org.junit.Assert.assertNull(cSVRecordComparator53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8208205232496136238flatfile");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(csvSortOptions66);
        org.junit.Assert.assertNull(cSVRecordComparator67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1797626143055659982flatfile");
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(csvSortOptions75);
        org.junit.Assert.assertNull(cSVRecordComparator76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file77.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3382573520332679046flatfile");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test134");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray30 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList31 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList31, cSVRecordArray30);
        java.io.File file33 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = csvSortOptions40.getComparator();
        java.io.File file42 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList31, file33, csvSortOptions40);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator56, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = builder59.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions62 = builder61.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = csvSortOptions62.getComparator();
        java.io.File file64 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList31, file46, csvSortOptions62);
        java.util.List<java.io.File> fileList65 = com.google.code.externalsorting.ExternalSort.sortInBatch(file64);
        java.util.Comparator<java.lang.String> strComparator66 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file28, file64, strComparator66);
        java.util.List<java.io.File> fileList69 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator66, false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList71 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (-1L), strComparator66, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3797043061152284888flatfile");
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8236634045207779821flatfile");
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(cSVRecordArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertNull(cSVRecordComparator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5336660453473068134flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1480282098995850840flatfile");
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(csvSortOptions62);
        org.junit.Assert.assertNull(cSVRecordComparator63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1961090912061491206flatfile");
        org.junit.Assert.assertNotNull(fileList65);
        org.junit.Assert.assertNotNull(strComparator66);
        org.junit.Assert.assertNotNull(fileList69);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test135");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.io.BufferedWriter bufferedWriter36 = null;
        java.util.Comparator<java.lang.String> strComparator37 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator38 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator38, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = builder41.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions44 = builder43.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = csvSortOptions44.getComparator();
        java.nio.charset.Charset charset46 = csvSortOptions44.getCharset();
        // The following exception was thrown during execution in test generation
        try {
            long long49 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, bufferedWriter36, strComparator37, charset46, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8845762486614442392flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3518719782747363609flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3230790993388870503flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(strComparator37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(csvSortOptions44);
        org.junit.Assert.assertNull(cSVRecordComparator45);
        org.junit.Assert.assertNotNull(charset46);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test136");
        java.util.List<java.io.File> fileList0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator27, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder30.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions33 = builder32.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = csvSortOptions33.getComparator();
        java.io.File file35 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file17, csvSortOptions33);
        java.util.List<java.io.File> fileList36 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35);
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray38 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList39 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList39, cSVRecordArray38);
        java.io.File file41 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file41, csvSortOptions48);
        java.util.Comparator<java.lang.String> strComparator51 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList53 = com.google.code.externalsorting.ExternalSort.sortInBatch(file50, strComparator51, false);
        // The following exception was thrown during execution in test generation
        try {
            long long55 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList0, file35, strComparator51, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8768472339433602649flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4829805844758481771flatfile");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(csvSortOptions33);
        org.junit.Assert.assertNull(cSVRecordComparator34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1595363915470123175flatfile");
        org.junit.Assert.assertNotNull(fileList36);
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(cSVRecordArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4709392649948656192flatfile");
        org.junit.Assert.assertNotNull(strComparator51);
        org.junit.Assert.assertNotNull(fileList53);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test137");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray42 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList43 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList43, cSVRecordArray42);
        java.io.File file45 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator46, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = builder49.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions52 = builder51.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = csvSortOptions52.getComparator();
        java.io.File file54 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList43, file45, csvSortOptions52);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions61 = builder60.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = csvSortOptions61.getComparator();
        java.io.File file63 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file45, csvSortOptions61);
        java.util.List<java.io.File> fileList64 = com.google.code.externalsorting.ExternalSort.sortInBatch(file63);
        java.util.Comparator<java.lang.String> strComparator65 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file27, file63, strComparator65);
        java.util.List<java.io.File> fileList68 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13, strComparator65, false);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator65;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray71 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList72 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList72, iOStringStackArray71);
        // The following exception was thrown during execution in test generation
        try {
            long long74 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator65, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3017318570639100641flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7212759971644044762flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4743365504332810713flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(csvSortOptions52);
        org.junit.Assert.assertNull(cSVRecordComparator53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6551341517223551047flatfile");
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(csvSortOptions61);
        org.junit.Assert.assertNull(cSVRecordComparator62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1511678745775475698flatfile");
        org.junit.Assert.assertNotNull(fileList64);
        org.junit.Assert.assertNotNull(strComparator65);
        org.junit.Assert.assertNotNull(fileList68);
        org.junit.Assert.assertNotNull(iOStringStackArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test138");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 100, 50L);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test139");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.List<java.io.File> fileList36 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.Comparator<java.lang.String> strComparator37 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray38 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList39 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList39, cSVRecordArray38);
        java.io.File file41 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file41, csvSortOptions48);
        java.util.List<java.io.File> fileList51 = com.google.code.externalsorting.ExternalSort.sortInBatch(file50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList54 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator37, file50, false, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6263934380371381605flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4722268381486426661flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1046586894808703582flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(fileList36);
        org.junit.Assert.assertNotNull(strComparator37);
        org.junit.Assert.assertNotNull(cSVRecordArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch309051560744564801flatfile");
        org.junit.Assert.assertNotNull(fileList51);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test140");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat8 = csvSortOptions6.getFormat();
        long long9 = csvSortOptions6.getMaxMemory();
        long long10 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(cSVFormat8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test141");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat8 = csvSortOptions6.getFormat();
        long long9 = csvSortOptions6.getMaxMemory();
        java.nio.charset.Charset charset10 = csvSortOptions6.getCharset();
        boolean boolean11 = csvSortOptions6.isDistinct();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(cSVFormat8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(charset10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test142");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(211603576L, (int) (short) -1, (long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test143");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (byte) 10, (int) 'a', 194L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 97L + "'", long3 == 97L);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test144");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray35 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList36 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList36, cSVRecordArray35);
        java.io.File file38 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = csvSortOptions45.getComparator();
        java.io.File file47 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList36, file38, csvSortOptions45);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray48 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList49 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList49, cSVRecordArray48);
        java.io.File file51 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder55 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator52, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = builder55.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions58 = builder57.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = csvSortOptions58.getComparator();
        java.io.File file60 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList49, file51, csvSortOptions58);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = csvSortOptions67.getComparator();
        java.io.File file69 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList36, file51, csvSortOptions67);
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file69);
        java.util.Comparator<java.lang.String> strComparator71 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList72 = com.google.code.externalsorting.ExternalSort.sortInBatch(file69, strComparator71);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator73 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator73, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder78 = builder76.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions79 = builder76.build();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file80 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file69, csvSortOptions79);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1871523457853830271flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6835784203274456149flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8368603509053211077flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertNull(cSVRecordComparator46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file47.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8438462756269654847flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(csvSortOptions58);
        org.junit.Assert.assertNull(cSVRecordComparator59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file60.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3799382860441970291flatfile");
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertNull(cSVRecordComparator68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1052121115638335068flatfile");
        org.junit.Assert.assertNotNull(fileList70);
        org.junit.Assert.assertNotNull(strComparator71);
        org.junit.Assert.assertNotNull(fileList72);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(csvSortOptions79);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test145");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator28, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder31.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions34 = builder33.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions34.getComparator();
        java.io.File file36 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file18, csvSortOptions34);
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36);
        java.util.Comparator<java.lang.String> strComparator38 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList39 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36, strComparator38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList41 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) ' ', strComparator38, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8156246835389722240flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5621503383676775499flatfile");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(csvSortOptions34);
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6871856197218942934flatfile");
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(strComparator38);
        org.junit.Assert.assertNotNull(fileList39);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test146");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        boolean boolean8 = csvSortOptions6.isSkipHeader();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test147");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        java.lang.Class<?> wildcardClass9 = csvSortOptions6.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test148");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) ' ', (long) (short) -1);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test149");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '#', 1L);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions4 = builder3.build();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder3.distinct(true);
        org.junit.Assert.assertNotNull(csvSortOptions4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test150");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(0L, 100, (long) (short) -1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test151");
        java.io.BufferedReader bufferedReader1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator28, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder31.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions34 = builder33.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions34.getComparator();
        java.io.File file36 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file18, csvSortOptions34);
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36);
        java.util.List<java.io.File> fileList38 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        int int46 = csvSortOptions45.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions45.getComparator();
        int int48 = csvSortOptions45.getMaxTmpFiles();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(100L, bufferedReader1, file36, csvSortOptions45, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reader");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1314000433844407024flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3957896756513526578flatfile");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(csvSortOptions34);
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8572917690501219298flatfile");
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(fileList38);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test152");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 0, (long) 10);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions4 = builder3.build();
        org.junit.Assert.assertNotNull(csvSortOptions4);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test153");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) -1, 16L);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test154");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        java.util.Comparator<java.lang.String> strComparator32 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray46 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList47 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList47, cSVRecordArray46);
        java.io.File file49 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator50, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder55 = builder53.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions56 = builder55.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions56.getComparator();
        java.io.File file58 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList47, file49, csvSortOptions56);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file49, csvSortOptions65);
        java.util.List<java.io.File> fileList68 = com.google.code.externalsorting.ExternalSort.sortInBatch(file67);
        java.util.Comparator<java.lang.String> strComparator69 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file67, strComparator69);
        java.util.List<java.io.File> fileList71 = com.google.code.externalsorting.ExternalSort.sortInBatch(file67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList74 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26, strComparator32, file67, true, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5941258868658151447flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1719501013364616714flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(strComparator32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8230251511167481298flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(csvSortOptions56);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2760229416340437973flatfile");
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6594547695505839044flatfile");
        org.junit.Assert.assertNotNull(fileList68);
        org.junit.Assert.assertNotNull(strComparator69);
        org.junit.Assert.assertNotNull(fileList70);
        org.junit.Assert.assertNotNull(fileList71);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test155");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        java.nio.charset.Charset charset12 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.charset(charset12);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder11.numHeader((int) (short) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator16 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator16, (int) '#', 1L);
        org.apache.commons.csv.CSVFormat cSVFormat20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = builder19.format(cSVFormat20);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        boolean boolean29 = csvSortOptions28.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat30 = csvSortOptions28.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat31 = csvSortOptions28.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder19.format(cSVFormat31);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder15.format(cSVFormat31);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder5.format(cSVFormat31);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cSVFormat30);
        org.junit.Assert.assertNotNull(cSVFormat31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test156");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions7.getComparator();
        java.nio.charset.Charset charset9 = csvSortOptions7.getCharset();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray10 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList11 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList11, cSVRecordBufferArray10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList11, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertNotNull(charset9);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test157");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        java.nio.charset.Charset charset8 = csvSortOptions6.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charset8);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test158");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getMaxTmpFiles();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = csvSortOptions6.getComparator();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertNull(cSVRecordComparator9);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test159");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 1, (long) '#');
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        boolean boolean13 = csvSortOptions12.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions12.getFormat();
        java.nio.charset.Charset charset15 = csvSortOptions12.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder3.charset(charset15);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions17 = builder16.build();
        long long18 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder16);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(charset15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(csvSortOptions17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 194L + "'", long18 == 194L);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test160");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) (short) 1);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test161");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) -1, (long) (-1));
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader(1024);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.skipHeader(false);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test162");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.format(cSVFormat6);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.distinct(false);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test163");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 168L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test164");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator15, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = builder18.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions21 = builder20.build();
        boolean boolean22 = csvSortOptions21.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat23 = csvSortOptions21.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder12.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder7.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder7.distinct(true);
        java.lang.Class<?> wildcardClass28 = builder7.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 194L + "'", long8 == 194L);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(csvSortOptions21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cSVFormat23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test165");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray3 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList4 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList4, cSVRecordArray3);
        java.io.File file6 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator7, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = builder10.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions13 = builder12.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator14 = csvSortOptions13.getComparator();
        java.io.File file15 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList4, file6, csvSortOptions13);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file15);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29);
        java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray44 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList45 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList45, cSVRecordArray44);
        java.io.File file47 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator48, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = builder51.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions54 = builder53.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = csvSortOptions54.getComparator();
        java.io.File file56 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList45, file47, csvSortOptions54);
        int int57 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList16, file29, csvSortOptions42, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList45);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray58 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList59 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList59, cSVRecordArray58);
        java.io.File file61 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator62, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = csvSortOptions68.getComparator();
        java.io.File file70 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList59, file61, csvSortOptions68);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator71 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator71, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = builder74.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions77 = builder76.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator78 = csvSortOptions77.getComparator();
        java.io.File file79 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList45, file61, csvSortOptions77);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator80 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder83 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator80, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder85 = builder83.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions86 = builder85.build();
        int int87 = csvSortOptions86.getNumHeader();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file88 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file79, csvSortOptions86);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(csvSortOptions13);
        org.junit.Assert.assertNull(cSVRecordComparator14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file15.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6059251862523699273flatfile");
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch131479254492574308flatfile");
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(fileList31);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNotNull(cSVRecordArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(csvSortOptions54);
        org.junit.Assert.assertNull(cSVRecordComparator55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file56.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1658605576237495592flatfile");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNull(cSVRecordComparator69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file70.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1374800913568454228flatfile");
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(csvSortOptions77);
        org.junit.Assert.assertNull(cSVRecordComparator78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file79.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5865883510873440603flatfile");
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(csvSortOptions86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test166");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray56 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList57 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList57, cSVRecordArray56);
        java.io.File file59 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator60, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions66 = builder65.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = csvSortOptions66.getComparator();
        java.io.File file68 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57, file59, csvSortOptions66);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator69, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = builder72.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions75 = builder74.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = csvSortOptions75.getComparator();
        java.io.File file77 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file59, csvSortOptions75);
        java.util.List<java.io.File> fileList78 = com.google.code.externalsorting.ExternalSort.sortInBatch(file77);
        java.util.Comparator<java.lang.String> strComparator79 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file41, file77, strComparator79);
        java.util.List<java.io.File> fileList82 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27, strComparator79, false);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray83 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList84 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList84, cSVRecordArray83);
        java.io.File file86 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator87 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder90 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator87, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder92 = builder90.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions93 = builder92.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator94 = csvSortOptions93.getComparator();
        java.io.File file95 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList84, file86, csvSortOptions93);
        java.util.List<java.io.File> fileList96 = com.google.code.externalsorting.ExternalSort.sortInBatch(file95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList99 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator79, file95, false, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8541198091767584753flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6699012349933997707flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1204082107800452794flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8303822608917727039flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(csvSortOptions66);
        org.junit.Assert.assertNull(cSVRecordComparator67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1666506667089401441flatfile");
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(csvSortOptions75);
        org.junit.Assert.assertNull(cSVRecordComparator76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file77.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5088533328149950051flatfile");
        org.junit.Assert.assertNotNull(fileList78);
        org.junit.Assert.assertNotNull(strComparator79);
        org.junit.Assert.assertNotNull(fileList82);
        org.junit.Assert.assertNotNull(cSVRecordArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(csvSortOptions93);
        org.junit.Assert.assertNull(cSVRecordComparator94);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file95.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3870807972675759115flatfile");
        org.junit.Assert.assertNotNull(fileList96);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test167");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isSkipHeader();
        int int8 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test168");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.Comparator<java.lang.String> strComparator5 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator5;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator7, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = builder10.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions13 = builder12.build();
        boolean boolean14 = csvSortOptions13.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat15 = csvSortOptions13.getFormat();
        long long16 = csvSortOptions13.getMaxMemory();
        java.nio.charset.Charset charset17 = csvSortOptions13.getCharset();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray18 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList19 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList19, cSVRecordArray18);
        java.io.File file21 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = csvSortOptions28.getComparator();
        java.io.File file30 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file21, csvSortOptions28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray31 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList32 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList32, cSVRecordArray31);
        java.io.File file34 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator35, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = csvSortOptions41.getComparator();
        java.io.File file43 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList32, file34, csvSortOptions41);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator44, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = builder47.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions50 = builder49.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator51 = csvSortOptions50.getComparator();
        java.io.File file52 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file34, csvSortOptions50);
        java.util.List<java.io.File> fileList53 = com.google.code.externalsorting.ExternalSort.sortInBatch(file52);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray54 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList55 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList55, cSVRecordArray54);
        java.io.File file57 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator58 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator58, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = builder61.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions64 = builder63.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator65 = csvSortOptions64.getComparator();
        java.io.File file66 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList55, file57, csvSortOptions64);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray67 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList68 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList68, cSVRecordArray67);
        java.io.File file70 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator71 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator71, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = builder74.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions77 = builder76.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator78 = csvSortOptions77.getComparator();
        java.io.File file79 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList68, file70, csvSortOptions77);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator80 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder83 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator80, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder85 = builder83.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions86 = builder85.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator87 = csvSortOptions86.getComparator();
        java.io.File file88 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList55, file70, csvSortOptions86);
        com.google.code.externalsorting.ExternalSort.sort(file52, file88);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file93 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList3, strComparator5, charset17, file52, true, true, false);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strComparator5);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(csvSortOptions13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cSVFormat15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(charset17);
        org.junit.Assert.assertNotNull(cSVRecordArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertNull(cSVRecordComparator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch338674805360710300flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNull(cSVRecordComparator42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6207423712472287510flatfile");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(csvSortOptions50);
        org.junit.Assert.assertNull(cSVRecordComparator51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2241819442675587895flatfile");
        org.junit.Assert.assertNotNull(fileList53);
        org.junit.Assert.assertNotNull(cSVRecordArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(csvSortOptions64);
        org.junit.Assert.assertNull(cSVRecordComparator65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file66.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2226926494466667772flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(csvSortOptions77);
        org.junit.Assert.assertNull(cSVRecordComparator78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file79.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1083973507211601471flatfile");
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(csvSortOptions86);
        org.junit.Assert.assertNull(cSVRecordComparator87);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file88.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3494333148586209644flatfile");
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test169");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator15, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = builder18.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions21 = builder20.build();
        boolean boolean22 = csvSortOptions21.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat23 = csvSortOptions21.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder12.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder7.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder7.skipHeader(false);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = builder7.distinct(false);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder7.numHeader((int) '4');
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 192L + "'", long8 == 192L);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(csvSortOptions21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cSVFormat23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test170");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) 1024, 10, (long) '4');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 103L + "'", long3 == 103L);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test171");
        java.util.List<java.io.File> fileList0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator27, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder30.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions33 = builder32.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = csvSortOptions33.getComparator();
        java.io.File file35 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file17, csvSortOptions33);
        java.util.List<java.io.File> fileList36 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35);
        java.util.Comparator<java.lang.String> strComparator37 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList38 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35, strComparator37);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray39 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList40 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList40, cSVRecordArray39);
        java.io.File file42 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions49 = builder48.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = csvSortOptions49.getComparator();
        java.io.File file51 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList40, file42, csvSortOptions49);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray52 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList53 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList53, cSVRecordArray52);
        java.io.File file55 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator56, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = builder59.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions62 = builder61.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = csvSortOptions62.getComparator();
        java.io.File file64 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList53, file55, csvSortOptions62);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator65 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder68 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator65, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = builder68.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions71 = builder70.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator72 = csvSortOptions71.getComparator();
        java.io.File file73 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList40, file55, csvSortOptions71);
        java.util.List<java.io.File> fileList74 = com.google.code.externalsorting.ExternalSort.sortInBatch(file73);
        java.util.Comparator<java.lang.String> strComparator75 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList76 = com.google.code.externalsorting.ExternalSort.sortInBatch(file73, strComparator75);
        // The following exception was thrown during execution in test generation
        try {
            long long77 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList0, file35, strComparator75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5770029326703207668flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2680289415862130286flatfile");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(csvSortOptions33);
        org.junit.Assert.assertNull(cSVRecordComparator34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5419029427189785976flatfile");
        org.junit.Assert.assertNotNull(fileList36);
        org.junit.Assert.assertNotNull(strComparator37);
        org.junit.Assert.assertNotNull(fileList38);
        org.junit.Assert.assertNotNull(cSVRecordArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(csvSortOptions49);
        org.junit.Assert.assertNull(cSVRecordComparator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5494295564883331341flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(csvSortOptions62);
        org.junit.Assert.assertNull(cSVRecordComparator63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6584058695049656583flatfile");
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(csvSortOptions71);
        org.junit.Assert.assertNull(cSVRecordComparator72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file73.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8564106361946119285flatfile");
        org.junit.Assert.assertNotNull(fileList74);
        org.junit.Assert.assertNotNull(strComparator75);
        org.junit.Assert.assertNotNull(fileList76);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test172");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator15, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = builder18.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions21 = builder20.build();
        boolean boolean22 = csvSortOptions21.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat23 = csvSortOptions21.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder12.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder7.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 194L + "'", long8 == 194L);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(csvSortOptions21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cSVFormat23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test173");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder91 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator88, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = builder91.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions94 = builder93.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray95 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList96 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList96, cSVRecordArray95);
        java.util.List<java.io.File> fileList98 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file48, csvSortOptions94, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList96);
        java.lang.Class<?> wildcardClass99 = file48.getClass();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4970967492563269370flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5686110486267666906flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4905715968271741018flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3856493854867748299flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch218469606800875125flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch162127200592971839flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3185677330675827454flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(csvSortOptions94);
        org.junit.Assert.assertNotNull(cSVRecordArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(fileList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test174");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        int int8 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test175");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat8 = csvSortOptions6.getFormat();
        java.lang.Class<?> wildcardClass9 = cSVFormat8.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(cSVFormat8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test176");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        java.lang.Class<?> wildcardClass10 = csvSortOptions6.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test177");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        org.apache.commons.csv.CSVFormat cSVFormat35 = csvSortOptions32.getFormat();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9017379555665557653flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch614137747603427816flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch210311775444320833flatfile");
        org.junit.Assert.assertNotNull(cSVFormat35);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test178");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray26 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList27 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList27, cSVRecordArray26);
        java.io.File file29 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator30, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = builder33.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions36 = builder35.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = csvSortOptions36.getComparator();
        java.io.File file38 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList27, file29, csvSortOptions36);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator39, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder42.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions45 = builder44.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = csvSortOptions45.getComparator();
        java.io.File file47 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file29, csvSortOptions45);
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file12, file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5665047482147560849flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6571267251787888621flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(csvSortOptions36);
        org.junit.Assert.assertNull(cSVRecordComparator37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file38.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3855090237559028288flatfile");
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(csvSortOptions45);
        org.junit.Assert.assertNull(cSVRecordComparator46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file47.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1573130876427834938flatfile");
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test179");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray19 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList20 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList20, cSVRecordArray19);
        java.io.File file22 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator23 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator23, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = builder26.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions29 = builder28.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = csvSortOptions29.getComparator();
        java.io.File file31 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList20, file22, csvSortOptions29);
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file31);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file45, strComparator46, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator49, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = builder52.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions55 = builder54.build();
        boolean boolean56 = csvSortOptions55.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions55.getComparator();
        java.nio.charset.Charset charset58 = csvSortOptions55.getCharset();
        long long60 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList18, file31, strComparator46, charset58, false);
        long long61 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) strComparator46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) (byte) 100, strComparator46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7705557175863443834flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(cSVRecordArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(csvSortOptions29);
        org.junit.Assert.assertNull(cSVRecordComparator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9039690459650461787flatfile");
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5499600323902693669flatfile");
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(csvSortOptions55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(charset58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 168L + "'", long61 == 168L);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test180");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.Comparator<java.lang.String> strComparator14 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13, strComparator14, false);
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray18 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList19 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList19, cSVRecordArray18);
        java.io.File file21 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = csvSortOptions28.getComparator();
        java.io.File file30 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file21, csvSortOptions28);
        java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(file30);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        java.util.Comparator<java.lang.String> strComparator45 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList47 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44, strComparator45, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator48, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = builder51.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions54 = builder53.build();
        boolean boolean55 = csvSortOptions54.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = csvSortOptions54.getComparator();
        java.nio.charset.Charset charset57 = csvSortOptions54.getCharset();
        long long59 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList17, file30, strComparator45, charset57, false);
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray61 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList62 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList62, iOStringStackArray61);
        // The following exception was thrown during execution in test generation
        try {
            long long64 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator45, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2285328900666196802flatfile");
        org.junit.Assert.assertNotNull(strComparator14);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(cSVRecordArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertNull(cSVRecordComparator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8921102732552122996flatfile");
        org.junit.Assert.assertNotNull(fileList31);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4755818096496463138flatfile");
        org.junit.Assert.assertNotNull(strComparator45);
        org.junit.Assert.assertNotNull(fileList47);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(csvSortOptions54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(cSVRecordComparator56);
        org.junit.Assert.assertNotNull(charset57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(iOStringStackArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test181");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        boolean boolean8 = csvSortOptions6.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions6.getFormat();
        int int10 = csvSortOptions6.getNumHeader();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cSVFormat9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test182");
        java.io.BufferedReader bufferedReader1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        boolean boolean26 = csvSortOptions25.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat27 = csvSortOptions25.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat28 = csvSortOptions25.getFormat();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        java.util.List<java.io.File> fileList56 = com.google.code.externalsorting.ExternalSort.sortInBatch(file55);
        java.util.List<java.io.File> fileList57 = com.google.code.externalsorting.ExternalSort.sortInBatch(file55);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator58 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator58, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = builder61.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray70 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList71 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList71, cSVRecordArray70);
        java.io.File file73 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder77 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator74, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = builder77.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions80 = builder79.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = csvSortOptions80.getComparator();
        java.io.File file82 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71, file73, csvSortOptions80);
        int int83 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList42, file55, csvSortOptions68, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList84 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(0L, bufferedReader1, file14, csvSortOptions25, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reader");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3631599162713555478flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(cSVFormat27);
        org.junit.Assert.assertNotNull(cSVFormat28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5508174810872802828flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9082161982953468763flatfile");
        org.junit.Assert.assertNotNull(fileList56);
        org.junit.Assert.assertNotNull(fileList57);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNotNull(cSVRecordArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(csvSortOptions80);
        org.junit.Assert.assertNull(cSVRecordComparator81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file82.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4831814902128967823flatfile");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test183");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator62, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = csvSortOptions68.getComparator();
        java.io.File file70 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file52, csvSortOptions68);
        com.google.code.externalsorting.ExternalSort.sort(file34, file70);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray72 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList73 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList73, cSVRecordArray72);
        java.io.File file75 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList73, file75, csvSortOptions82);
        java.util.Comparator<java.lang.String> strComparator85 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList87 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84, strComparator85, false);
        java.util.List<java.io.File> fileList89 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70, strComparator85, false);
        java.util.List<java.io.File> fileList90 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70);
        java.util.List<java.io.File> fileList91 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1318504700837267999flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1966071889736274380flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch105657337644532676flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7251636575780487373flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8015226071720056452flatfile");
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNull(cSVRecordComparator69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file70.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8692053483421177666flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7219910010497969928flatfile");
        org.junit.Assert.assertNotNull(strComparator85);
        org.junit.Assert.assertNotNull(fileList87);
        org.junit.Assert.assertNotNull(fileList89);
        org.junit.Assert.assertNotNull(fileList90);
        org.junit.Assert.assertNotNull(fileList91);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test184");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getMaxTmpFiles();
        boolean boolean8 = csvSortOptions6.isDistinct();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test185");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        long long9 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) csvSortOptions6);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cSVRecordComparator8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 176L + "'", long9 == 176L);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test186");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        boolean boolean35 = csvSortOptions32.isSkipHeader();
        boolean boolean36 = csvSortOptions32.isDistinct();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch978001113192455274flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5157792425724396923flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7860672375992441251flatfile");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test187");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.numHeader((int) (short) 0);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder7.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder12.format(cSVFormat15);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder20.distinct(false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator25, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = builder28.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions31 = builder30.build();
        boolean boolean32 = csvSortOptions31.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat33 = csvSortOptions31.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder20.format(cSVFormat33);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = builder12.format(cSVFormat33);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder7.format(cSVFormat33);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(csvSortOptions31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(cSVFormat33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test188");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.Comparator<java.lang.String> strComparator14 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13, strComparator14, false);
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray18 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList19 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList19, cSVRecordArray18);
        java.io.File file21 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = csvSortOptions28.getComparator();
        java.io.File file30 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file21, csvSortOptions28);
        java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(file30);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        java.util.Comparator<java.lang.String> strComparator45 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList47 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44, strComparator45, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator48, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = builder51.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions54 = builder53.build();
        boolean boolean55 = csvSortOptions54.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = csvSortOptions54.getComparator();
        java.nio.charset.Charset charset57 = csvSortOptions54.getCharset();
        long long59 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList17, file30, strComparator45, charset57, false);
        long long60 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) strComparator45);
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray62 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList63 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList63, iOStringStackArray62);
        // The following exception was thrown during execution in test generation
        try {
            long long65 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator45, false, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1219355359392017483flatfile");
        org.junit.Assert.assertNotNull(strComparator14);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(cSVRecordArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertNull(cSVRecordComparator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5877807436230470749flatfile");
        org.junit.Assert.assertNotNull(fileList31);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5253674098321003465flatfile");
        org.junit.Assert.assertNotNull(strComparator45);
        org.junit.Assert.assertNotNull(fileList47);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(csvSortOptions54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(cSVRecordComparator56);
        org.junit.Assert.assertNotNull(charset57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 168L + "'", long60 == 168L);
        org.junit.Assert.assertNotNull(iOStringStackArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test189");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, false);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        java.util.Comparator<java.lang.String> strComparator30 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29, strComparator30, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, 1, (long) '#');
        java.nio.charset.Charset charset38 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.charset(charset38);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        boolean boolean47 = csvSortOptions46.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat48 = csvSortOptions46.getFormat();
        java.nio.charset.Charset charset49 = csvSortOptions46.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder37.charset(charset49);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray51 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList52 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList52, cSVRecordArray51);
        java.io.File file54 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions61 = builder60.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = csvSortOptions61.getComparator();
        java.io.File file63 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file54, csvSortOptions61);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray64 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList65 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList65, cSVRecordArray64);
        java.io.File file67 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList65, file67, csvSortOptions74);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator77, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder82 = builder80.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions83 = builder82.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator84 = csvSortOptions83.getComparator();
        java.io.File file85 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file67, csvSortOptions83);
        java.util.List<java.io.File> fileList86 = com.google.code.externalsorting.ExternalSort.sortInBatch(file85);
        java.util.Comparator<java.lang.String> strComparator87 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList88 = com.google.code.externalsorting.ExternalSort.sortInBatch(file85, strComparator87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList90 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator30, (int) '#', charset49, file85, true);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1291960935076707108flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4089824390357704873flatfile");
        org.junit.Assert.assertNotNull(strComparator30);
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(cSVFormat48);
        org.junit.Assert.assertNotNull(charset49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(cSVRecordArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(csvSortOptions61);
        org.junit.Assert.assertNull(cSVRecordComparator62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5879407405963632049flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5907568185077884827flatfile");
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(csvSortOptions83);
        org.junit.Assert.assertNull(cSVRecordComparator84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5077201603713111004flatfile");
        org.junit.Assert.assertNotNull(fileList86);
        org.junit.Assert.assertNotNull(strComparator87);
        org.junit.Assert.assertNotNull(fileList88);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test190");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        int int11 = csvSortOptions10.getNumHeader();
        java.nio.charset.Charset charset12 = csvSortOptions10.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(charset12);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test191");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(168L, 10, 512L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 85L + "'", long3 == 85L);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test192");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.Comparator<java.lang.String> strComparator36 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator36);
        java.util.List<java.io.File> fileList38 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray39 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList40 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList40, cSVRecordArray39);
        java.io.File file42 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions49 = builder48.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = csvSortOptions49.getComparator();
        java.io.File file51 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList40, file42, csvSortOptions49);
        java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.ExternalSort.sortInBatch(file51);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray53 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList54 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList54, cSVRecordArray53);
        java.io.File file56 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator57, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = builder60.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions63 = builder62.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator64 = csvSortOptions63.getComparator();
        java.io.File file65 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList54, file56, csvSortOptions63);
        java.util.List<java.io.File> fileList66 = com.google.code.externalsorting.ExternalSort.sortInBatch(file65);
        java.util.List<java.io.File> fileList67 = com.google.code.externalsorting.ExternalSort.sortInBatch(file65);
        java.util.Comparator<java.lang.String> strComparator68 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long70 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList52, file65, strComparator68, true);
        java.util.List<java.io.File> fileList72 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator68, false);
        java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3424985263469307196flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9027106301336277750flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7434810088717703442flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(strComparator36);
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(fileList38);
        org.junit.Assert.assertNotNull(cSVRecordArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(csvSortOptions49);
        org.junit.Assert.assertNull(cSVRecordComparator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5390439154384651137flatfile");
        org.junit.Assert.assertNotNull(fileList52);
        org.junit.Assert.assertNotNull(cSVRecordArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(csvSortOptions63);
        org.junit.Assert.assertNull(cSVRecordComparator64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file65.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1722481901852831721flatfile");
        org.junit.Assert.assertNotNull(fileList66);
        org.junit.Assert.assertNotNull(fileList67);
        org.junit.Assert.assertNotNull(strComparator68);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(fileList72);
        org.junit.Assert.assertNotNull(fileList73);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test193");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.distinct(true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test194");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.distinct(false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        boolean boolean15 = csvSortOptions14.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat16 = csvSortOptions14.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder3.format(cSVFormat16);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions18 = builder3.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = csvSortOptions18.getComparator();
        int int20 = csvSortOptions18.getNumHeader();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cSVFormat16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(csvSortOptions18);
        org.junit.Assert.assertNull(cSVRecordComparator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test195");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        boolean boolean8 = csvSortOptions6.isSkipHeader();
        boolean boolean9 = csvSortOptions6.isSkipHeader();
        long long10 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test196");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        boolean boolean8 = csvSortOptions7.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions7.getFormat();
        long long10 = csvSortOptions7.getMaxMemory();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions7.getComparator();
        int int12 = csvSortOptions7.getMaxTmpFiles();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray13 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList14 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList14, cSVRecordBufferArray13);
        java.util.List<org.apache.commons.csv.CSVRecord> cSVRecordList16 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList14, cSVRecordList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cSVFormat9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test197");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray18 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList19 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList19, cSVRecordArray18);
        java.io.File file21 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = csvSortOptions28.getComparator();
        java.io.File file30 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList19, file21, csvSortOptions28);
        java.util.List<java.io.File> fileList31 = com.google.code.externalsorting.ExternalSort.sortInBatch(file30);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        java.util.List<java.io.File> fileList45 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44);
        java.util.List<java.io.File> fileList46 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44);
        java.util.Comparator<java.lang.String> strComparator47 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long49 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList31, file44, strComparator47, true);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(file62);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray64 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList65 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList65, cSVRecordArray64);
        java.io.File file67 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList65, file67, csvSortOptions74);
        java.util.List<java.io.File> fileList77 = com.google.code.externalsorting.ExternalSort.sortInBatch(file76);
        java.util.List<java.io.File> fileList78 = com.google.code.externalsorting.ExternalSort.sortInBatch(file76);
        java.util.Comparator<java.lang.String> strComparator79 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long81 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList63, file76, strComparator79, true);
        java.util.Comparator<java.lang.String> strComparator82 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList83 = com.google.code.externalsorting.ExternalSort.sortInBatch(file76, strComparator82);
        com.google.code.externalsorting.ExternalSort.sort(file14, file44, strComparator82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList86 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 85L, strComparator82, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7998340523474009056flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(cSVRecordArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertNull(cSVRecordComparator29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8392341849850872705flatfile");
        org.junit.Assert.assertNotNull(fileList31);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7148410312422127690flatfile");
        org.junit.Assert.assertNotNull(fileList45);
        org.junit.Assert.assertNotNull(fileList46);
        org.junit.Assert.assertNotNull(strComparator47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4358544273241066167flatfile");
        org.junit.Assert.assertNotNull(fileList63);
        org.junit.Assert.assertNotNull(cSVRecordArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3089829126080737491flatfile");
        org.junit.Assert.assertNotNull(fileList77);
        org.junit.Assert.assertNotNull(fileList78);
        org.junit.Assert.assertNotNull(strComparator79);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertNotNull(strComparator82);
        org.junit.Assert.assertNotNull(fileList83);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test198");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, 512L);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        boolean boolean11 = csvSortOptions10.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat12 = csvSortOptions10.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat13 = csvSortOptions10.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder3.format(cSVFormat13);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(cSVFormat12);
        org.junit.Assert.assertNotNull(cSVFormat13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test199");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(66L, (int) (byte) -1, 85L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 42L + "'", long3 == 42L);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test200");
        java.io.BufferedReader bufferedReader1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray19 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList20 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList20, cSVRecordArray19);
        java.io.File file22 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator23 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator23, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = builder26.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions29 = builder28.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = csvSortOptions29.getComparator();
        java.io.File file31 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList20, file22, csvSortOptions29);
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file31);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file45, strComparator46, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator49, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = builder52.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions55 = builder54.build();
        boolean boolean56 = csvSortOptions55.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions55.getComparator();
        java.nio.charset.Charset charset58 = csvSortOptions55.getCharset();
        long long60 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList18, file31, strComparator46, charset58, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder68 = builder64.numHeader((int) (short) 0);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions69 = builder68.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray70 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList71 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList71, cSVRecordArray70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(42L, bufferedReader1, file31, csvSortOptions69, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reader");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6586578196305112873flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(cSVRecordArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(csvSortOptions29);
        org.junit.Assert.assertNull(cSVRecordComparator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1550871528389750131flatfile");
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch556679154738880799flatfile");
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(csvSortOptions55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(charset58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(csvSortOptions69);
        org.junit.Assert.assertNotNull(cSVRecordArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test201");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        int int11 = csvSortOptions10.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions10.getComparator();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(cSVRecordComparator12);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test202");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (byte) -1, 0, 42L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test203");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 50L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 64L + "'", long1 == 64L);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test204");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(512L, (int) (short) 100, (long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 6L + "'", long3 == 6L);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test205");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '#', 1L);
        org.apache.commons.csv.CSVFormat cSVFormat4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.format(cSVFormat4);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        boolean boolean13 = csvSortOptions12.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions12.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat15 = csvSortOptions12.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder3.format(cSVFormat15);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions17 = builder16.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(cSVFormat15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(csvSortOptions17);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test206");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        org.apache.commons.csv.CSVFormat cSVFormat10 = csvSortOptions6.getFormat();
        java.lang.Class<?> wildcardClass11 = csvSortOptions6.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(cSVFormat10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test207");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        boolean boolean13 = csvSortOptions12.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions12.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder3.format(cSVFormat14);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions16 = builder3.build();
        long long17 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) csvSortOptions16);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(csvSortOptions16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 178L + "'", long17 == 178L);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test208");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test209");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 97L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test210");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<java.lang.String> strComparator29 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long31 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file26, strComparator29, true);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray32 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList33 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList33, cSVRecordArray32);
        java.io.File file35 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator36 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator36, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder39.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions42 = builder41.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = csvSortOptions42.getComparator();
        java.io.File file44 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList33, file35, csvSortOptions42);
        java.util.List<java.io.File> fileList45 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44);
        java.util.List<java.io.File> fileList46 = com.google.code.externalsorting.ExternalSort.sortInBatch(file44);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        org.apache.commons.csv.CSVFormat cSVFormat54 = csvSortOptions53.getFormat();
        java.nio.charset.Charset charset55 = csvSortOptions53.getCharset();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray57 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList58 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList58, cSVRecordArray57);
        java.io.File file60 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = csvSortOptions67.getComparator();
        java.io.File file69 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58, file60, csvSortOptions67);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray70 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList71 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList71, cSVRecordArray70);
        java.io.File file73 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder77 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator74, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = builder77.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions80 = builder79.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = csvSortOptions80.getComparator();
        java.io.File file82 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71, file73, csvSortOptions80);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator83, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder88 = builder86.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions89 = builder88.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator90 = csvSortOptions89.getComparator();
        java.io.File file91 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58, file73, csvSortOptions89);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file44, csvSortOptions53, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6550134465814419471flatfile (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2860259059034160335flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6990388993884971866flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(strComparator29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(csvSortOptions42);
        org.junit.Assert.assertNull(cSVRecordComparator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5030309700691410913flatfile");
        org.junit.Assert.assertNotNull(fileList45);
        org.junit.Assert.assertNotNull(fileList46);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNotNull(cSVFormat54);
        org.junit.Assert.assertNotNull(charset55);
        org.junit.Assert.assertNotNull(cSVRecordArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertNull(cSVRecordComparator68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5709943244653238945flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(csvSortOptions80);
        org.junit.Assert.assertNull(cSVRecordComparator81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file82.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1214561422761079285flatfile");
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(csvSortOptions89);
        org.junit.Assert.assertNull(cSVRecordComparator90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file91.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2026484973040677154flatfile");
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test211");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getMaxTmpFiles();
        long long8 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test212");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions7.getComparator();
        java.nio.charset.Charset charset9 = csvSortOptions7.getCharset();
        int int10 = csvSortOptions7.getNumHeader();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray11 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList12 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList12, cSVRecordBufferArray11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList12, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertNotNull(charset9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test213");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(103L, (int) (short) 10, (long) '#');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 11L + "'", long3 == 11L);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test214");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        boolean boolean8 = csvSortOptions7.isSkipHeader();
        boolean boolean9 = csvSortOptions7.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator10 = csvSortOptions7.getComparator();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray11 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList12 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList12, cSVRecordBufferArray11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        java.util.List<java.io.File> fileList41 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        int int68 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList27, file40, csvSortOptions53, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList12, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(cSVRecordComparator10);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1220948334550607162flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2842536739629249759flatfile");
        org.junit.Assert.assertNotNull(fileList41);
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8206132130181006887flatfile");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test215");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.util.Comparator<java.lang.String> strComparator5 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator5;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator7, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = builder10.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions13 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator14 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator14, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = builder17.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions20 = builder19.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = csvSortOptions20.getComparator();
        java.nio.charset.Charset charset22 = csvSortOptions20.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder10.charset(charset22);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray24 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList25 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList25, cSVRecordArray24);
        java.io.File file27 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator28, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder31.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions34 = builder33.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions34.getComparator();
        java.io.File file36 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList25, file27, csvSortOptions34);
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray38 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList39 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList39, cSVRecordArray38);
        java.io.File file41 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file41, csvSortOptions48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray51 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList52 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList52, cSVRecordArray51);
        java.io.File file54 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions61 = builder60.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = csvSortOptions61.getComparator();
        java.io.File file63 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file54, csvSortOptions61);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator64 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator64, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder69 = builder67.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions70 = builder69.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator71 = csvSortOptions70.getComparator();
        java.io.File file72 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file54, csvSortOptions70);
        java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.ExternalSort.sortInBatch(file72);
        java.util.Comparator<java.lang.String> strComparator74 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file36, file72, strComparator74);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file76 = com.google.code.externalsorting.ExternalSort.sortAndSave((java.util.List<java.lang.String>) strList3, strComparator5, charset22, file36);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Not a directory");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strComparator5);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(csvSortOptions13);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(csvSortOptions20);
        org.junit.Assert.assertNull(cSVRecordComparator21);
        org.junit.Assert.assertNotNull(charset22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(cSVRecordArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(csvSortOptions34);
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1018689270397015723flatfile");
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(cSVRecordArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4575934942048688810flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(csvSortOptions61);
        org.junit.Assert.assertNull(cSVRecordComparator62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2548931958343137446flatfile");
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(csvSortOptions70);
        org.junit.Assert.assertNull(cSVRecordComparator71);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file72.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3171922045420703464flatfile");
        org.junit.Assert.assertNotNull(fileList73);
        org.junit.Assert.assertNotNull(strComparator74);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test216");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, false);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch337771178325558751flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(fileList17);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test217");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.nio.charset.Charset charset28 = csvSortOptions26.getCharset();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        java.util.List<java.io.File> fileList56 = com.google.code.externalsorting.ExternalSort.sortInBatch(file55);
        java.util.List<java.io.File> fileList57 = com.google.code.externalsorting.ExternalSort.sortInBatch(file55);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator58 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator58, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = builder61.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray70 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList71 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList71, cSVRecordArray70);
        java.io.File file73 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder77 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator74, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = builder77.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions80 = builder79.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = csvSortOptions80.getComparator();
        java.io.File file82 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71, file73, csvSortOptions80);
        int int83 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList42, file55, csvSortOptions68, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList88 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 68L, strComparator15, (-1), 50L, charset28, file55, false, (int) ' ', false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2342021977947439321flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(charset28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1635458174887050471flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8102681374062578922flatfile");
        org.junit.Assert.assertNotNull(fileList56);
        org.junit.Assert.assertNotNull(fileList57);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNotNull(cSVRecordArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(csvSortOptions80);
        org.junit.Assert.assertNull(cSVRecordComparator81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file82.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2043376098750931405flatfile");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test218");
        java.io.File file0 = null;
        java.util.Comparator<java.lang.String> strComparator1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator28, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder31.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions34 = builder33.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions34.getComparator();
        java.io.File file36 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file18, csvSortOptions34);
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList40 = com.google.code.externalsorting.ExternalSort.sortInBatch(file0, strComparator1, file36, true, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2184789156487398420flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch328295964408925430flatfile");
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(csvSortOptions34);
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8964259180940561181flatfile");
        org.junit.Assert.assertNotNull(fileList37);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test219");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions7.getComparator();
        java.nio.charset.Charset charset9 = csvSortOptions7.getCharset();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator10 = csvSortOptions7.getComparator();
        int int11 = csvSortOptions7.getMaxTmpFiles();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray12 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList13 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList13, cSVRecordBufferArray12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file27);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        java.util.List<java.io.File> fileList43 = com.google.code.externalsorting.ExternalSort.sortInBatch(file41);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator44, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = builder47.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = builder49.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = builder51.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions54 = builder53.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray56 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList57 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList57, cSVRecordArray56);
        java.io.File file59 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator60, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions66 = builder65.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = csvSortOptions66.getComparator();
        java.io.File file68 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57, file59, csvSortOptions66);
        int int69 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList28, file41, csvSortOptions54, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList13, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertNotNull(charset9);
        org.junit.Assert.assertNull(cSVRecordComparator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch775184779630444673flatfile");
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5555811253012494567flatfile");
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(fileList43);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(csvSortOptions54);
        org.junit.Assert.assertNotNull(cSVRecordArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(csvSortOptions66);
        org.junit.Assert.assertNull(cSVRecordComparator67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2511367227776454716flatfile");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test220");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        java.util.List<java.io.File> fileList62 = com.google.code.externalsorting.ExternalSort.sortInBatch(file61);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.List<java.io.File> fileList76 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75);
        java.util.List<java.io.File> fileList77 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75);
        java.util.Comparator<java.lang.String> strComparator78 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long80 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList62, file75, strComparator78, true);
        java.util.Comparator<java.lang.String> strComparator81 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList82 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75, strComparator81);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator83, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder88 = builder86.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions89 = builder88.build();
        boolean boolean90 = csvSortOptions89.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator91 = csvSortOptions89.getComparator();
        java.nio.charset.Charset charset92 = csvSortOptions89.getCharset();
        long long96 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, file48, strComparator81, charset92, true, false, false);
        java.util.Comparator<java.lang.String> strComparator97 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator97;
        java.util.List<java.io.File> fileList99 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48, strComparator97);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8144943654241739860flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6231745601191270884flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7750254421521407281flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1113216931805977012flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5980172442121463845flatfile");
        org.junit.Assert.assertNotNull(fileList62);
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2011701885020064216flatfile");
        org.junit.Assert.assertNotNull(fileList76);
        org.junit.Assert.assertNotNull(fileList77);
        org.junit.Assert.assertNotNull(strComparator78);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(strComparator81);
        org.junit.Assert.assertNotNull(fileList82);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(csvSortOptions89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(cSVRecordComparator91);
        org.junit.Assert.assertNotNull(charset92);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
        org.junit.Assert.assertNotNull(strComparator97);
        org.junit.Assert.assertNotNull(fileList99);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test221");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        java.lang.Class<?> wildcardClass8 = builder7.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test222");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.Comparator<java.lang.String> strComparator14 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13, strComparator14, false);
        java.util.List<com.google.code.externalsorting.IOStringStack> iOStringStackList18 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long19 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator14, true, iOStringStackList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8291356586882005355flatfile");
        org.junit.Assert.assertNotNull(strComparator14);
        org.junit.Assert.assertNotNull(fileList16);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test223");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) csvSortOptions7);
        boolean boolean9 = csvSortOptions7.isDistinct();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray10 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList11 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList11, cSVRecordBufferArray10);
        java.util.List<org.apache.commons.csv.CSVRecord> cSVRecordList13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList11, cSVRecordList13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 176L + "'", long8 == 176L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test224");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder3.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test225");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        long long8 = csvSortOptions6.getMaxMemory();
        boolean boolean9 = csvSortOptions6.isSkipHeader();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test226");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(97L, (int) (short) 0, 176L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test227");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.Comparator<java.lang.String> strComparator36 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator36);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray38 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList39 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList39, cSVRecordArray38);
        java.io.File file41 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList39, file41, csvSortOptions48);
        java.util.List<java.io.File> fileList51 = com.google.code.externalsorting.ExternalSort.sortInBatch(file50);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray52 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList53 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList53, cSVRecordArray52);
        java.io.File file55 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator56, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = builder59.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions62 = builder61.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = csvSortOptions62.getComparator();
        java.io.File file64 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList53, file55, csvSortOptions62);
        java.util.List<java.io.File> fileList65 = com.google.code.externalsorting.ExternalSort.sortInBatch(file64);
        java.util.List<java.io.File> fileList66 = com.google.code.externalsorting.ExternalSort.sortInBatch(file64);
        java.util.Comparator<java.lang.String> strComparator67 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long69 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList51, file64, strComparator67, true);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator67;
        java.util.List<java.io.File> fileList71 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator67);
        java.util.Comparator<java.lang.String> strComparator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1934771716109575892flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4002015716232283514flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch297905828204139261flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(strComparator36);
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(cSVRecordArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7590950238039121102flatfile");
        org.junit.Assert.assertNotNull(fileList51);
        org.junit.Assert.assertNotNull(cSVRecordArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(csvSortOptions62);
        org.junit.Assert.assertNull(cSVRecordComparator63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7458614984568305431flatfile");
        org.junit.Assert.assertNotNull(fileList65);
        org.junit.Assert.assertNotNull(fileList66);
        org.junit.Assert.assertNotNull(strComparator67);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertNotNull(fileList71);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test228");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        java.util.Comparator<java.lang.String> strComparator36 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34, strComparator36);
        java.util.List<java.io.File> fileList38 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray39 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList40 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList40, cSVRecordArray39);
        java.io.File file42 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator43 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator43, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = builder46.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions49 = builder48.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator50 = csvSortOptions49.getComparator();
        java.io.File file51 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList40, file42, csvSortOptions49);
        java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.ExternalSort.sortInBatch(file51);
        java.util.List<java.io.File> fileList53 = com.google.code.externalsorting.ExternalSort.sortInBatch(file51);
        java.util.List<java.io.File> fileList54 = com.google.code.externalsorting.ExternalSort.sortInBatch(file51);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, 1, (long) '#');
        java.nio.charset.Charset charset59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.charset(charset59);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        boolean boolean68 = csvSortOptions67.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat69 = csvSortOptions67.getFormat();
        java.nio.charset.Charset charset70 = csvSortOptions67.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = builder58.charset(charset70);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions72 = builder71.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray73 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList74 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList74, cSVRecordArray73);
        java.io.File file76 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator77, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder82 = builder80.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions83 = builder82.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator84 = csvSortOptions83.getComparator();
        java.io.File file85 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList74, file76, csvSortOptions83);
        java.util.List<java.io.File> fileList86 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file51, csvSortOptions72, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList74);
        java.util.List<java.io.File> fileList87 = com.google.code.externalsorting.ExternalSort.sortInBatch(file51);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3014565902414752657flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4578594433754392154flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9086348408235556463flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(strComparator36);
        org.junit.Assert.assertNotNull(fileList37);
        org.junit.Assert.assertNotNull(fileList38);
        org.junit.Assert.assertNotNull(cSVRecordArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(csvSortOptions49);
        org.junit.Assert.assertNull(cSVRecordComparator50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3209271022574954357flatfile");
        org.junit.Assert.assertNotNull(fileList52);
        org.junit.Assert.assertNotNull(fileList53);
        org.junit.Assert.assertNotNull(fileList54);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(cSVFormat69);
        org.junit.Assert.assertNotNull(charset70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(csvSortOptions72);
        org.junit.Assert.assertNotNull(cSVRecordArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(csvSortOptions83);
        org.junit.Assert.assertNull(cSVRecordComparator84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1018854781334869891flatfile");
        org.junit.Assert.assertNotNull(fileList86);
        org.junit.Assert.assertNotNull(fileList87);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test229");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder7.build();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder7.numHeader((int) (byte) 1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test230");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        long long8 = csvSortOptions6.getMaxMemory();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = csvSortOptions6.getComparator();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNull(cSVRecordComparator9);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test231");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '4', (long) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.distinct(false);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test232");
        java.io.BufferedWriter bufferedWriter0 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator1 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder4 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator1, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder6 = builder4.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions7 = builder6.build();
        boolean boolean8 = csvSortOptions7.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions7.getFormat();
        long long10 = csvSortOptions7.getMaxMemory();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions7.getComparator();
        boolean boolean12 = csvSortOptions7.isDistinct();
        com.google.code.externalsorting.csv.CSVRecordBuffer[] cSVRecordBufferArray13 = new com.google.code.externalsorting.csv.CSVRecordBuffer[] {};
        java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer> cSVRecordBufferList14 = new java.util.ArrayList<com.google.code.externalsorting.csv.CSVRecordBuffer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList14, cSVRecordBufferArray13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(bufferedWriter0, csvSortOptions7, (java.util.List<com.google.code.externalsorting.csv.CSVRecordBuffer>) cSVRecordBufferList14, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: appendable");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(csvSortOptions7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(cSVFormat9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(cSVRecordBufferArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test233");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator41, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder46 = builder44.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions47 = builder46.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = csvSortOptions47.getComparator();
        java.io.File file49 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file31, csvSortOptions47);
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file49);
        java.util.List<java.io.File> fileList51 = com.google.code.externalsorting.ExternalSort.sortInBatch(file49);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray52 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList53 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList53, cSVRecordArray52);
        java.io.File file55 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator56 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator56, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = builder59.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions62 = builder61.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator63 = csvSortOptions62.getComparator();
        java.io.File file64 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList53, file55, csvSortOptions62);
        java.util.List<java.io.File> fileList65 = com.google.code.externalsorting.ExternalSort.sortInBatch(file64);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray66 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList67 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList67, cSVRecordArray66);
        java.io.File file69 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator70 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator70, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder75 = builder73.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions76 = builder75.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = csvSortOptions76.getComparator();
        java.io.File file78 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList67, file69, csvSortOptions76);
        java.util.List<java.io.File> fileList79 = com.google.code.externalsorting.ExternalSort.sortInBatch(file78);
        java.util.List<java.io.File> fileList80 = com.google.code.externalsorting.ExternalSort.sortInBatch(file78);
        java.util.Comparator<java.lang.String> strComparator81 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long83 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList65, file78, strComparator81, true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator84 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder87 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator84, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder89 = builder87.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions90 = builder89.build();
        long long91 = csvSortOptions90.getMaxMemory();
        java.nio.charset.Charset charset92 = csvSortOptions90.getCharset();
        long long94 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList14, file49, strComparator81, charset92, false);
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray96 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList97 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean98 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList97, iOStringStackArray96);
        // The following exception was thrown during execution in test generation
        try {
            long long99 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator81, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7761520666489658349flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1950192830164382551flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6742975624706893285flatfile");
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(csvSortOptions47);
        org.junit.Assert.assertNull(cSVRecordComparator48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5076575676372397726flatfile");
        org.junit.Assert.assertNotNull(fileList50);
        org.junit.Assert.assertNotNull(fileList51);
        org.junit.Assert.assertNotNull(cSVRecordArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(csvSortOptions62);
        org.junit.Assert.assertNull(cSVRecordComparator63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7466676048470987998flatfile");
        org.junit.Assert.assertNotNull(fileList65);
        org.junit.Assert.assertNotNull(cSVRecordArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(csvSortOptions76);
        org.junit.Assert.assertNull(cSVRecordComparator77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file78.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3417539402287123542flatfile");
        org.junit.Assert.assertNotNull(fileList79);
        org.junit.Assert.assertNotNull(fileList80);
        org.junit.Assert.assertNotNull(strComparator81);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(csvSortOptions90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertNotNull(charset92);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertNotNull(iOStringStackArray96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test234");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray19 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList20 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList20, cSVRecordArray19);
        java.io.File file22 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator23 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator23, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = builder26.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions29 = builder28.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = csvSortOptions29.getComparator();
        java.io.File file31 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList20, file22, csvSortOptions29);
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file31);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file45, strComparator46, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator49, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = builder52.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions55 = builder54.build();
        boolean boolean56 = csvSortOptions55.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions55.getComparator();
        java.nio.charset.Charset charset58 = csvSortOptions55.getCharset();
        long long60 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList18, file31, strComparator46, charset58, false);
        long long61 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) strComparator46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 512L, strComparator46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8437724439140724188flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(cSVRecordArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(csvSortOptions29);
        org.junit.Assert.assertNull(cSVRecordComparator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2041690519105057178flatfile");
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3052940230906637403flatfile");
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(csvSortOptions55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(charset58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 168L + "'", long61 == 168L);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test235");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(50L, (int) (short) 1, (long) ' ');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 50L + "'", long3 == 50L);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test236");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.distinct(false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        boolean boolean15 = csvSortOptions14.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat16 = csvSortOptions14.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder3.format(cSVFormat16);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions18 = builder3.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = csvSortOptions18.getComparator();
        java.nio.charset.Charset charset20 = csvSortOptions18.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cSVFormat16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(csvSortOptions18);
        org.junit.Assert.assertNull(cSVRecordComparator19);
        org.junit.Assert.assertNotNull(charset20);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test237");
        java.io.BufferedWriter bufferedWriter0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator27, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder30.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions33 = builder32.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = csvSortOptions33.getComparator();
        java.io.File file35 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file17, csvSortOptions33);
        java.util.List<java.io.File> fileList36 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35);
        java.util.Comparator<java.lang.String> strComparator37 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList38 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35, strComparator37);
        java.util.List<java.io.File> fileList39 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray40 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList41 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList41, cSVRecordArray40);
        java.io.File file43 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator44, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = builder47.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions50 = builder49.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator51 = csvSortOptions50.getComparator();
        java.io.File file52 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList41, file43, csvSortOptions50);
        java.util.List<java.io.File> fileList53 = com.google.code.externalsorting.ExternalSort.sortInBatch(file52);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray54 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList55 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList55, cSVRecordArray54);
        java.io.File file57 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator58 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder61 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator58, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = builder61.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions64 = builder63.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator65 = csvSortOptions64.getComparator();
        java.io.File file66 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList55, file57, csvSortOptions64);
        java.util.List<java.io.File> fileList67 = com.google.code.externalsorting.ExternalSort.sortInBatch(file66);
        java.util.List<java.io.File> fileList68 = com.google.code.externalsorting.ExternalSort.sortInBatch(file66);
        java.util.Comparator<java.lang.String> strComparator69 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long71 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList53, file66, strComparator69, true);
        java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.ExternalSort.sortInBatch(file35, strComparator69, false);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator69;
        com.google.code.externalsorting.IOStringStack[] iOStringStackArray76 = new com.google.code.externalsorting.IOStringStack[] {};
        java.util.ArrayList<com.google.code.externalsorting.IOStringStack> iOStringStackList77 = new java.util.ArrayList<com.google.code.externalsorting.IOStringStack>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.code.externalsorting.IOStringStack>) iOStringStackList77, iOStringStackArray76);
        // The following exception was thrown during execution in test generation
        try {
            long long79 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(bufferedWriter0, strComparator69, true, (java.util.List<com.google.code.externalsorting.IOStringStack>) iOStringStackList77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7046456569840309578flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4228469779310191964flatfile");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(csvSortOptions33);
        org.junit.Assert.assertNull(cSVRecordComparator34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7874186533258492480flatfile");
        org.junit.Assert.assertNotNull(fileList36);
        org.junit.Assert.assertNotNull(strComparator37);
        org.junit.Assert.assertNotNull(fileList38);
        org.junit.Assert.assertNotNull(fileList39);
        org.junit.Assert.assertNotNull(cSVRecordArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(csvSortOptions50);
        org.junit.Assert.assertNull(cSVRecordComparator51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4361485846201312744flatfile");
        org.junit.Assert.assertNotNull(fileList53);
        org.junit.Assert.assertNotNull(cSVRecordArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(csvSortOptions64);
        org.junit.Assert.assertNull(cSVRecordComparator65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file66.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3736936229187593763flatfile");
        org.junit.Assert.assertNotNull(fileList67);
        org.junit.Assert.assertNotNull(fileList68);
        org.junit.Assert.assertNotNull(strComparator69);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(fileList73);
        org.junit.Assert.assertNotNull(iOStringStackArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test238");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.format(cSVFormat6);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        int int15 = csvSortOptions14.getNumHeader();
        boolean boolean16 = csvSortOptions14.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat17 = csvSortOptions14.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = builder7.format(cSVFormat17);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions19 = builder7.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(cSVFormat17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(csvSortOptions19);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test239");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '4', (long) (byte) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        int int11 = csvSortOptions10.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions10.getComparator();
        int int13 = csvSortOptions10.getMaxTmpFiles();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions10.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder3.format(cSVFormat14);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator16 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator16, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = builder19.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions22 = builder21.build();
        boolean boolean23 = csvSortOptions22.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions22.getComparator();
        org.apache.commons.csv.CSVFormat cSVFormat25 = csvSortOptions22.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder3.format(cSVFormat25);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(csvSortOptions22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(cSVFormat25);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test240");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder5.numHeader((int) (short) 10);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test241");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(100L, (int) (short) 100, 50L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 25L + "'", long3 == 25L);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test242");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat8 = csvSortOptions6.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions6.getFormat();
        int int10 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(cSVFormat8);
        org.junit.Assert.assertNotNull(cSVFormat9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test243");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (-1), (int) (short) 100, 70L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 35L + "'", long3 == 35L);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test244");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        int int11 = csvSortOptions10.getNumHeader();
        long long12 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) int11);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 62L + "'", long12 == 62L);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test245");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder7.build();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder7.skipHeader(false);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test246");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        long long11 = csvSortOptions10.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test247");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isSkipHeader();
        boolean boolean8 = csvSortOptions6.isDistinct();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test248");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) -1, 211603576L);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test249");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray19 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList20 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList20, cSVRecordArray19);
        java.io.File file22 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator23 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator23, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = builder26.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions29 = builder28.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = csvSortOptions29.getComparator();
        java.io.File file31 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList20, file22, csvSortOptions29);
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file31);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file45, strComparator46, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator49, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = builder52.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions55 = builder54.build();
        boolean boolean56 = csvSortOptions55.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions55.getComparator();
        java.nio.charset.Charset charset58 = csvSortOptions55.getCharset();
        long long60 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList18, file31, strComparator46, charset58, false);
        long long61 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) strComparator46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 176L, strComparator46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6261412093884992110flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(cSVRecordArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(csvSortOptions29);
        org.junit.Assert.assertNull(cSVRecordComparator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6280414811011342060flatfile");
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7368733543343944159flatfile");
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(csvSortOptions55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(charset58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 168L + "'", long61 == 168L);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test250");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        java.nio.charset.Charset charset8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.charset(charset8);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder7.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test251");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        java.util.List<java.io.File> fileList62 = com.google.code.externalsorting.ExternalSort.sortInBatch(file61);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.List<java.io.File> fileList76 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75);
        java.util.List<java.io.File> fileList77 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75);
        java.util.Comparator<java.lang.String> strComparator78 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long80 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList62, file75, strComparator78, true);
        java.util.Comparator<java.lang.String> strComparator81 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList82 = com.google.code.externalsorting.ExternalSort.sortInBatch(file75, strComparator81);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator83, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder88 = builder86.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions89 = builder88.build();
        boolean boolean90 = csvSortOptions89.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator91 = csvSortOptions89.getComparator();
        java.nio.charset.Charset charset92 = csvSortOptions89.getCharset();
        long long96 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, file48, strComparator81, charset92, true, false, false);
        java.util.List<java.io.File> fileList97 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7966599319764142889flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1734672034891676821flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6677639520709667116flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2146859422874058858flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4426783095425083239flatfile");
        org.junit.Assert.assertNotNull(fileList62);
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6425923804521216682flatfile");
        org.junit.Assert.assertNotNull(fileList76);
        org.junit.Assert.assertNotNull(fileList77);
        org.junit.Assert.assertNotNull(strComparator78);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(strComparator81);
        org.junit.Assert.assertNotNull(fileList82);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(csvSortOptions89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(cSVRecordComparator91);
        org.junit.Assert.assertNotNull(charset92);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
        org.junit.Assert.assertNotNull(fileList97);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test252");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) 1024, (int) (short) 10, (long) (-1));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 103L + "'", long3 == 103L);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test253");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        java.nio.charset.Charset charset10 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.charset(charset10);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder9.numHeader((int) (short) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator14 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator14, (int) '#', 1L);
        org.apache.commons.csv.CSVFormat cSVFormat18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = builder17.format(cSVFormat18);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        boolean boolean27 = csvSortOptions26.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat28 = csvSortOptions26.getFormat();
        org.apache.commons.csv.CSVFormat cSVFormat29 = csvSortOptions26.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = builder17.format(cSVFormat29);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder13.format(cSVFormat29);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder3.format(cSVFormat29);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(cSVFormat28);
        org.junit.Assert.assertNotNull(cSVFormat29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test254");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(false);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder3.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test255");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) 0, (int) '#', (long) '4');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 26L + "'", long3 == 26L);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test256");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator15, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = builder18.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions21 = builder20.build();
        boolean boolean22 = csvSortOptions21.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat23 = csvSortOptions21.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder12.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder7.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder7.skipHeader(false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator28, 1, (long) '#');
        java.nio.charset.Charset charset32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder31.charset(charset32);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        boolean boolean41 = csvSortOptions40.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat42 = csvSortOptions40.getFormat();
        java.nio.charset.Charset charset43 = csvSortOptions40.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder44 = builder31.charset(charset43);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder7.charset(charset43);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 194L + "'", long8 == 194L);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(csvSortOptions21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cSVFormat23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(cSVFormat42);
        org.junit.Assert.assertNotNull(charset43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test257");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getNumHeader();
        boolean boolean8 = csvSortOptions6.isSkipHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = csvSortOptions6.getComparator();
        java.nio.charset.Charset charset10 = csvSortOptions6.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(cSVRecordComparator9);
        org.junit.Assert.assertNotNull(charset10);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test258");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.format(cSVFormat6);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (byte) 1);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator10 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator10, (int) (short) -1, (long) (-1));
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder13.numHeader(1024);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator16 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator16, (int) '4', (long) (byte) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        int int27 = csvSortOptions26.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions26.getComparator();
        int int29 = csvSortOptions26.getMaxTmpFiles();
        org.apache.commons.csv.CSVFormat cSVFormat30 = csvSortOptions26.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder19.format(cSVFormat30);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder15.format(cSVFormat30);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder9.format(cSVFormat30);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(cSVFormat30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test259");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<java.lang.String> strComparator68 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file67, strComparator68, false);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray71 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList72 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList72, cSVRecordArray71);
        java.io.File file74 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder78 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator75, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = builder78.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions81 = builder80.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator82 = csvSortOptions81.getComparator();
        java.io.File file83 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList72, file74, csvSortOptions81);
        java.util.Comparator<java.lang.String> strComparator84 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList86 = com.google.code.externalsorting.ExternalSort.sortInBatch(file83, strComparator84, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator87 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder90 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator87, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder92 = builder90.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions93 = builder92.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator94 = csvSortOptions93.getComparator();
        java.nio.charset.Charset charset95 = csvSortOptions93.getCharset();
        // The following exception was thrown during execution in test generation
        try {
            long long99 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file67, strComparator84, charset95, false, false, true);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1741214878125385183flatfile (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1543169428663712625flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8586739788347996561flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3029916923220061680flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8295378528496836383flatfile");
        org.junit.Assert.assertNotNull(strComparator68);
        org.junit.Assert.assertNotNull(fileList70);
        org.junit.Assert.assertNotNull(cSVRecordArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(csvSortOptions81);
        org.junit.Assert.assertNull(cSVRecordComparator82);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file83.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch586812940570203558flatfile");
        org.junit.Assert.assertNotNull(strComparator84);
        org.junit.Assert.assertNotNull(fileList86);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(csvSortOptions93);
        org.junit.Assert.assertNull(cSVRecordComparator94);
        org.junit.Assert.assertNotNull(charset95);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test260");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions32.getComparator();
        int int36 = csvSortOptions32.getNumHeader();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7070449862500853653flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8308126997141307005flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7880576626869929756flatfile");
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test261");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        java.nio.charset.Charset charset8 = csvSortOptions6.getCharset();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = csvSortOptions6.getComparator();
        int int10 = csvSortOptions6.getMaxTmpFiles();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions6.getComparator();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
        org.junit.Assert.assertNotNull(charset8);
        org.junit.Assert.assertNull(cSVRecordComparator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(cSVRecordComparator11);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test262");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        long long8 = csvSortOptions6.getMaxMemory();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions6.getFormat();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(cSVFormat9);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test263");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, false);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray30 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList31 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList31, cSVRecordArray30);
        java.io.File file33 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = csvSortOptions40.getComparator();
        java.io.File file42 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList31, file33, csvSortOptions40);
        java.util.List<java.io.File> fileList43 = com.google.code.externalsorting.ExternalSort.sortInBatch(file42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray44 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList45 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList45, cSVRecordArray44);
        java.io.File file47 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator48 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator48, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder53 = builder51.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions54 = builder53.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = csvSortOptions54.getComparator();
        java.io.File file56 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList45, file47, csvSortOptions54);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray57 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList58 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList58, cSVRecordArray57);
        java.io.File file60 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = csvSortOptions67.getComparator();
        java.io.File file69 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58, file60, csvSortOptions67);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator70 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator70, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder75 = builder73.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions76 = builder75.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = csvSortOptions76.getComparator();
        java.io.File file78 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList45, file60, csvSortOptions76);
        java.util.List<java.io.File> fileList79 = com.google.code.externalsorting.ExternalSort.sortInBatch(file78);
        java.util.Comparator<java.lang.String> strComparator80 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file42, file78, strComparator80);
        java.util.List<java.io.File> fileList83 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28, strComparator80, false);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator80, true);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5321803701719787827flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3174946267858746816flatfile");
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(cSVRecordArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertNull(cSVRecordComparator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch231054931983744083flatfile");
        org.junit.Assert.assertNotNull(fileList43);
        org.junit.Assert.assertNotNull(cSVRecordArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(csvSortOptions54);
        org.junit.Assert.assertNull(cSVRecordComparator55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file56.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1649423400503449787flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertNull(cSVRecordComparator68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3047681326216864937flatfile");
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(csvSortOptions76);
        org.junit.Assert.assertNull(cSVRecordComparator77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file78.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6468724024196903050flatfile");
        org.junit.Assert.assertNotNull(fileList79);
        org.junit.Assert.assertNotNull(strComparator80);
        org.junit.Assert.assertNotNull(fileList83);
        org.junit.Assert.assertNotNull(fileList85);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test264");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        // The following exception was thrown during execution in test generation
        try {
            com.google.code.externalsorting.ExternalSort.sort(file34, file39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3866945100254427207flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7147332044110325540flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7363828806449585078flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1993266854547836549flatfile");
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test265");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        boolean boolean8 = csvSortOptions6.isSkipHeader();
        int int9 = csvSortOptions6.getMaxTmpFiles();
        java.nio.charset.Charset charset10 = csvSortOptions6.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charset10);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test266");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.distinct(false);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.distinct(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator10 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator10, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder13.skipHeader(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator16 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator16, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = builder19.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator22 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator22, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder25.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions28 = builder27.build();
        boolean boolean29 = csvSortOptions28.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat30 = csvSortOptions28.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder19.format(cSVFormat30);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = builder13.format(cSVFormat30);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder33 = builder9.format(cSVFormat30);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(csvSortOptions28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(cSVFormat30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test267");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isSkipHeader();
        int int8 = csvSortOptions6.getNumHeader();
        org.apache.commons.csv.CSVFormat cSVFormat9 = csvSortOptions6.getFormat();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(cSVFormat9);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test268");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        boolean boolean13 = csvSortOptions12.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions12.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder3.format(cSVFormat14);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder15.skipHeader(true);
        long long18 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 68L + "'", long18 == 68L);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test269");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(192L, 10, 10L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 20L + "'", long3 == 20L);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test270");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray49 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList50 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList50, cSVRecordArray49);
        java.io.File file52 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder56 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator53, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = builder56.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions59 = builder58.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = csvSortOptions59.getComparator();
        java.io.File file61 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList50, file52, csvSortOptions59);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator62, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder67 = builder65.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions68 = builder67.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = csvSortOptions68.getComparator();
        java.io.File file70 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file52, csvSortOptions68);
        com.google.code.externalsorting.ExternalSort.sort(file34, file70);
        java.util.List<java.io.File> fileList72 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70);
        java.util.List<java.io.File> fileList73 = com.google.code.externalsorting.ExternalSort.sortInBatch(file70);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1902839729215960910flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1679588084868066976flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7289815565008744250flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4686929124310202891flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(csvSortOptions59);
        org.junit.Assert.assertNull(cSVRecordComparator60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2031209895949021382flatfile");
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(csvSortOptions68);
        org.junit.Assert.assertNull(cSVRecordComparator69);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file70.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8592776232324445533flatfile");
        org.junit.Assert.assertNotNull(fileList72);
        org.junit.Assert.assertNotNull(fileList73);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test271");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 0, (long) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat10 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder7.format(cSVFormat10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator12, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder15.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions18 = builder17.build();
        int int19 = csvSortOptions18.getNumHeader();
        boolean boolean20 = csvSortOptions18.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat21 = csvSortOptions18.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder11.format(cSVFormat21);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder3.format(cSVFormat21);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(csvSortOptions18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(cSVFormat21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test272");
        java.util.List<java.io.File> fileList0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray1 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList2 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList2, cSVRecordArray1);
        java.io.File file4 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator5 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator5, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder8.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions11 = builder10.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = csvSortOptions11.getComparator();
        java.io.File file13 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList2, file4, csvSortOptions11);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file13);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray31 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList32 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList32, cSVRecordArray31);
        java.io.File file34 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator35, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = csvSortOptions41.getComparator();
        java.io.File file43 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList32, file34, csvSortOptions41);
        java.util.List<java.io.File> fileList44 = com.google.code.externalsorting.ExternalSort.sortInBatch(file43);
        java.util.List<java.io.File> fileList45 = com.google.code.externalsorting.ExternalSort.sortInBatch(file43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long48 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList30, file43, strComparator46, true);
        java.util.Comparator<java.lang.String> strComparator49 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file43, strComparator49);
        // The following exception was thrown during execution in test generation
        try {
            long long52 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList0, file13, strComparator49, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(csvSortOptions11);
        org.junit.Assert.assertNull(cSVRecordComparator12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4195313131046015553flatfile");
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2490876515020981921flatfile");
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(cSVRecordArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNull(cSVRecordComparator42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4357110841528508833flatfile");
        org.junit.Assert.assertNotNull(fileList44);
        org.junit.Assert.assertNotNull(fileList45);
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(strComparator49);
        org.junit.Assert.assertNotNull(fileList50);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test273");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, false);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray30 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList31 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList31, cSVRecordArray30);
        java.io.File file33 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator34 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator34, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder39 = builder37.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions40 = builder39.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator41 = csvSortOptions40.getComparator();
        java.io.File file42 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList31, file33, csvSortOptions40);
        java.util.List<java.io.File> fileList43 = com.google.code.externalsorting.ExternalSort.sortInBatch(file42);
        java.util.List<java.io.File> fileList44 = com.google.code.externalsorting.ExternalSort.sortInBatch(file42);
        java.util.Comparator<java.lang.String> strComparator45 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long47 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList29, file42, strComparator45, true);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray48 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList49 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList49, cSVRecordArray48);
        java.io.File file51 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder55 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator52, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = builder55.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions58 = builder57.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = csvSortOptions58.getComparator();
        java.io.File file60 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList49, file51, csvSortOptions58);
        java.util.List<java.io.File> fileList61 = com.google.code.externalsorting.ExternalSort.sortInBatch(file60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray62 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList63 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList63, cSVRecordArray62);
        java.io.File file65 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder69 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator66, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = builder69.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions72 = builder71.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator73 = csvSortOptions72.getComparator();
        java.io.File file74 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList63, file65, csvSortOptions72);
        java.util.List<java.io.File> fileList75 = com.google.code.externalsorting.ExternalSort.sortInBatch(file74);
        java.util.List<java.io.File> fileList76 = com.google.code.externalsorting.ExternalSort.sortInBatch(file74);
        java.util.Comparator<java.lang.String> strComparator77 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long79 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList61, file74, strComparator77, true);
        java.util.Comparator<java.lang.String> strComparator80 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList81 = com.google.code.externalsorting.ExternalSort.sortInBatch(file74, strComparator80);
        com.google.code.externalsorting.ExternalSort.sort(file12, file42, strComparator80);
        java.lang.Class<?> wildcardClass83 = strComparator80.getClass();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1564133684768588349flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3261730340860719811flatfile");
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(cSVRecordArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(csvSortOptions40);
        org.junit.Assert.assertNull(cSVRecordComparator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2075783410940558733flatfile");
        org.junit.Assert.assertNotNull(fileList43);
        org.junit.Assert.assertNotNull(fileList44);
        org.junit.Assert.assertNotNull(strComparator45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(cSVRecordArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(csvSortOptions58);
        org.junit.Assert.assertNull(cSVRecordComparator59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file60.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5463893311909263961flatfile");
        org.junit.Assert.assertNotNull(fileList61);
        org.junit.Assert.assertNotNull(cSVRecordArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(csvSortOptions72);
        org.junit.Assert.assertNull(cSVRecordComparator73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file74.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7519299601674177539flatfile");
        org.junit.Assert.assertNotNull(fileList75);
        org.junit.Assert.assertNotNull(fileList76);
        org.junit.Assert.assertNotNull(strComparator77);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNotNull(strComparator80);
        org.junit.Assert.assertNotNull(fileList81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test274");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks((long) (short) 0, (int) (byte) 100, 176L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 29L + "'", long3 == 29L);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test275");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file58, csvSortOptions74);
        boolean boolean77 = csvSortOptions74.isSkipHeader();
        boolean boolean78 = csvSortOptions74.isDistinct();
        int int79 = csvSortOptions74.getMaxTmpFiles();
        boolean boolean80 = csvSortOptions74.isDistinct();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3028365608960764396flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7905480307081023101flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5817635086219228371flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1497049221525875765flatfile");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6829719514407080628flatfile");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test276");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        java.nio.charset.Charset charset8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.charset(charset8);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.distinct(false);
        long long12 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder11);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 194L + "'", long12 == 194L);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test277");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        java.util.Comparator<java.lang.String> strComparator31 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long33 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList15, file28, strComparator31, true);
        java.util.Comparator<java.lang.String> strComparator34 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28, strComparator34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList37 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 11L, strComparator34, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5096215253584099950flatfile");
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2309192146010126640flatfile");
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(strComparator31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strComparator34);
        org.junit.Assert.assertNotNull(fileList35);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test278");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test279");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        java.nio.charset.Charset charset8 = csvSortOptions6.getCharset();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = csvSortOptions6.getComparator();
        int int10 = csvSortOptions6.getNumHeader();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
        org.junit.Assert.assertNotNull(charset8);
        org.junit.Assert.assertNull(cSVRecordComparator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test280");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 10.0d);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 68L + "'", long1 == 68L);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test281");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getMaxTmpFiles();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        boolean boolean9 = csvSortOptions6.isSkipHeader();
        boolean boolean10 = csvSortOptions6.isDistinct();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test282");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = csvSortOptions32.getComparator();
        int int36 = csvSortOptions32.getMaxTmpFiles();
        long long37 = csvSortOptions32.getMaxMemory();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1013912943066483310flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1433147655919762480flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1498862666956773305flatfile");
        org.junit.Assert.assertNull(cSVRecordComparator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test283");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.Comparator<java.lang.String> strComparator13 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator13, false);
        java.util.List<java.io.File> fileList16 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray17 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList18 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList18, cSVRecordArray17);
        java.io.File file20 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator21 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator21, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder24.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions27 = builder26.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions27.getComparator();
        java.io.File file29 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList18, file20, csvSortOptions27);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file29);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray31 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList32 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList32, cSVRecordArray31);
        java.io.File file34 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator35 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator35, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = csvSortOptions41.getComparator();
        java.io.File file43 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList32, file34, csvSortOptions41);
        java.util.Comparator<java.lang.String> strComparator44 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList46 = com.google.code.externalsorting.ExternalSort.sortInBatch(file43, strComparator44, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        boolean boolean54 = csvSortOptions53.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = csvSortOptions53.getComparator();
        java.nio.charset.Charset charset56 = csvSortOptions53.getCharset();
        long long58 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList16, file29, strComparator44, charset56, false);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator44;
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7634648515502732002flatfile");
        org.junit.Assert.assertNotNull(strComparator13);
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(fileList16);
        org.junit.Assert.assertNotNull(cSVRecordArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(csvSortOptions27);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5370307870896307869flatfile");
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(cSVRecordArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNull(cSVRecordComparator42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3831180853209920340flatfile");
        org.junit.Assert.assertNotNull(strComparator44);
        org.junit.Assert.assertNotNull(fileList46);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(cSVRecordComparator55);
        org.junit.Assert.assertNotNull(charset56);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test284");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) (short) -1, 1024, 42L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 21L + "'", long3 == 21L);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test285");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator9 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder12 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator9, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder14 = builder12.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator15 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator15, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = builder18.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions21 = builder20.build();
        boolean boolean22 = csvSortOptions21.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat23 = csvSortOptions21.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder12.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder7.format(cSVFormat23);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder27 = builder7.distinct(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = builder7.skipHeader(false);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 192L + "'", long8 == 192L);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(csvSortOptions21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(cSVFormat23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test286");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 194L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test287");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder5.build();
        int int9 = csvSortOptions8.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test288");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        int int7 = csvSortOptions6.getMaxTmpFiles();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        boolean boolean9 = csvSortOptions6.isSkipHeader();
        java.nio.charset.Charset charset10 = csvSortOptions6.getCharset();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charset10);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test289");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file58, csvSortOptions74);
        boolean boolean77 = csvSortOptions74.isDistinct();
        java.nio.charset.Charset charset78 = csvSortOptions74.getCharset();
        boolean boolean79 = csvSortOptions74.isDistinct();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1231149078457872064flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5386822978425758873flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4232130729768758456flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3313580281240921243flatfile");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3592947226953873339flatfile");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charset78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test290");
        java.io.BufferedReader bufferedReader1 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        java.util.List<java.io.File> fileList29 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        java.util.List<java.io.File> fileList30 = com.google.code.externalsorting.ExternalSort.sortInBatch(file28);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder38.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions41 = builder40.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray43 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList44 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList44, cSVRecordArray43);
        java.io.File file46 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator47, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = builder50.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions53 = builder52.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = csvSortOptions53.getComparator();
        java.io.File file55 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file46, csvSortOptions53);
        int int56 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList15, file28, csvSortOptions41, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray57 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList58 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList58, cSVRecordArray57);
        java.io.File file60 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator61, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder66 = builder64.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions67 = builder66.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = csvSortOptions67.getComparator();
        java.io.File file69 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList58, file60, csvSortOptions67);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator70 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator70, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder75 = builder73.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions76 = builder75.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator77 = csvSortOptions76.getComparator();
        java.io.File file78 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList44, file60, csvSortOptions76);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator79 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder82 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator79, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder84 = builder82.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions85 = builder84.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray86 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList87 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList87, cSVRecordArray86);
        java.io.File file89 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator90 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator90, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder95 = builder93.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions96 = builder95.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator97 = csvSortOptions96.getComparator();
        java.io.File file98 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList87, file89, csvSortOptions96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList99 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(176L, bufferedReader1, file60, csvSortOptions85, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reader");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6863539663898908058flatfile");
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch669154076142991125flatfile");
        org.junit.Assert.assertNotNull(fileList29);
        org.junit.Assert.assertNotNull(fileList30);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(csvSortOptions41);
        org.junit.Assert.assertNotNull(cSVRecordArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(csvSortOptions53);
        org.junit.Assert.assertNull(cSVRecordComparator54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4503572510711525107flatfile");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(csvSortOptions67);
        org.junit.Assert.assertNull(cSVRecordComparator68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3858185061781079970flatfile");
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(csvSortOptions76);
        org.junit.Assert.assertNull(cSVRecordComparator77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file78.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9163797971343744214flatfile");
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(csvSortOptions85);
        org.junit.Assert.assertNotNull(cSVRecordArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(csvSortOptions96);
        org.junit.Assert.assertNull(cSVRecordComparator97);
        org.junit.Assert.assertNotNull(file98);
        org.junit.Assert.assertEquals(file98.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file98.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3768530882476139257flatfile");
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test291");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file44, csvSortOptions60);
        java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(file62);
        java.util.Comparator<java.lang.String> strComparator64 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file26, file62, strComparator64);
        java.util.List<java.io.File> fileList67 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator64, false);
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator64;
        com.google.code.externalsorting.ExternalSort.defaultcomparator = strComparator64;
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3775988807635916434flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3971586120907390122flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4112934874319303879flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5083450341300724534flatfile");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8694695209354043952flatfile");
        org.junit.Assert.assertNotNull(fileList63);
        org.junit.Assert.assertNotNull(strComparator64);
        org.junit.Assert.assertNotNull(fileList67);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test292");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        long long8 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder7);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder10 = builder7.skipHeader(true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 194L + "'", long8 == 194L);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test293");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = csvSortOptions6.getComparator();
        int int9 = csvSortOptions6.getNumHeader();
        boolean boolean10 = csvSortOptions6.isDistinct();
        long long11 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cSVRecordComparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test294");
        // The following exception was thrown during execution in test generation
        try {
            long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(21L, 0, 62L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test295");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) -1, (long) (-1));
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader(1024);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) '4', (long) (byte) 10);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator10 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator10, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = builder13.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions16 = builder15.build();
        int int17 = csvSortOptions16.getNumHeader();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = csvSortOptions16.getComparator();
        int int19 = csvSortOptions16.getMaxTmpFiles();
        org.apache.commons.csv.CSVFormat cSVFormat20 = csvSortOptions16.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = builder9.format(cSVFormat20);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder5.format(cSVFormat20);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder5.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(csvSortOptions16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(cSVRecordComparator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(cSVFormat20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test296");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(false);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder9.build();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test297");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions8 = builder5.build();
        long long9 = csvSortOptions8.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(csvSortOptions8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test298");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator68 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder71 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator68, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder73 = builder71.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions74 = builder73.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator75 = csvSortOptions74.getComparator();
        java.io.File file76 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file58, csvSortOptions74);
        boolean boolean77 = csvSortOptions74.isSkipHeader();
        java.nio.charset.Charset charset78 = csvSortOptions74.getCharset();
        int int79 = csvSortOptions74.getNumHeader();
        int int80 = csvSortOptions74.getNumHeader();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2741629352905190398flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch322647489057084989flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5163869864638940674flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9098457642542710153flatfile");
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(csvSortOptions74);
        org.junit.Assert.assertNull(cSVRecordComparator75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5487870421149775275flatfile");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charset78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test299");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks(11L, (int) (byte) 1, 1L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 11L + "'", long3 == 11L);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test300");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        org.apache.commons.csv.CSVFormat cSVFormat6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.format(cSVFormat6);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (byte) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test301");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        java.util.List<java.io.File> fileList41 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40);
        java.util.List<java.io.File> fileList42 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40);
        java.util.Comparator<java.lang.String> strComparator43 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long45 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList27, file40, strComparator43, true);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList47 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40, strComparator46);
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file40);
        long long49 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file40);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3869205454806167595flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2616458518420854224flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2495131282758185059flatfile");
        org.junit.Assert.assertNotNull(fileList41);
        org.junit.Assert.assertNotNull(fileList42);
        org.junit.Assert.assertNotNull(strComparator43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList47);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test302");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.util.List<java.io.File> fileList14 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray15 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList16 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList16, cSVRecordArray15);
        java.io.File file18 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions25 = builder24.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = csvSortOptions25.getComparator();
        java.io.File file27 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList16, file18, csvSortOptions25);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray42 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList43 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList43, cSVRecordArray42);
        java.io.File file45 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator46 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder49 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator46, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder51 = builder49.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions52 = builder51.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator53 = csvSortOptions52.getComparator();
        java.io.File file54 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList43, file45, csvSortOptions52);
        java.util.List<java.io.File> fileList55 = com.google.code.externalsorting.ExternalSort.sortInBatch(file54);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray56 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList57 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList57, cSVRecordArray56);
        java.io.File file59 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator60 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder63 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator60, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder65 = builder63.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions66 = builder65.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = csvSortOptions66.getComparator();
        java.io.File file68 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList57, file59, csvSortOptions66);
        java.util.List<java.io.File> fileList69 = com.google.code.externalsorting.ExternalSort.sortInBatch(file68);
        java.util.List<java.io.File> fileList70 = com.google.code.externalsorting.ExternalSort.sortInBatch(file68);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator71 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator71, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = builder74.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder78 = builder76.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder80 = builder78.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions81 = builder80.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray83 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList84 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList84, cSVRecordArray83);
        java.io.File file86 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator87 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder90 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator87, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder92 = builder90.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions93 = builder92.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator94 = csvSortOptions93.getComparator();
        java.io.File file95 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList84, file86, csvSortOptions93);
        int int96 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList55, file68, csvSortOptions81, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList84);
        int int97 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList14, file27, csvSortOptions38, true, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList84);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8945932654306811061flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(fileList14);
        org.junit.Assert.assertNotNull(cSVRecordArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(csvSortOptions25);
        org.junit.Assert.assertNull(cSVRecordComparator26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4663037205439017939flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6906708290450826620flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(csvSortOptions52);
        org.junit.Assert.assertNull(cSVRecordComparator53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6136859262414593805flatfile");
        org.junit.Assert.assertNotNull(fileList55);
        org.junit.Assert.assertNotNull(cSVRecordArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(csvSortOptions66);
        org.junit.Assert.assertNull(cSVRecordComparator67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5840006531140733868flatfile");
        org.junit.Assert.assertNotNull(fileList69);
        org.junit.Assert.assertNotNull(fileList70);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(csvSortOptions81);
        org.junit.Assert.assertNotNull(cSVRecordArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(csvSortOptions93);
        org.junit.Assert.assertNull(cSVRecordComparator94);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file95.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2658379182426623542flatfile");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test303");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '#', 1L);
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.skipHeader(false);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder7.build();
        int int11 = csvSortOptions10.getMaxTmpFiles();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test304");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader((int) (short) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.skipHeader(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        boolean boolean15 = csvSortOptions14.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat16 = csvSortOptions14.getFormat();
        long long17 = csvSortOptions14.getMaxMemory();
        java.nio.charset.Charset charset18 = csvSortOptions14.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = builder3.charset(charset18);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        boolean boolean27 = csvSortOptions26.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator28 = csvSortOptions26.getComparator();
        org.apache.commons.csv.CSVFormat cSVFormat29 = csvSortOptions26.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = builder19.format(cSVFormat29);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cSVFormat16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(charset18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(cSVRecordComparator28);
        org.junit.Assert.assertNotNull(cSVFormat29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test305");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray28 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList29 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList29, cSVRecordArray28);
        java.io.File file31 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator32 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder35 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator32, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder37 = builder35.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions38 = builder37.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator39 = csvSortOptions38.getComparator();
        java.io.File file40 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file31, csvSortOptions38);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList29, file44, csvSortOptions60);
        java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(file62);
        java.util.Comparator<java.lang.String> strComparator64 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file26, file62, strComparator64);
        java.util.List<java.io.File> fileList67 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12, strComparator64, false);
        java.util.List<java.io.File> fileList68 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        java.util.List<java.io.File> fileList69 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7375463681370261473flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1559847609172375321flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(cSVRecordArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(csvSortOptions38);
        org.junit.Assert.assertNull(cSVRecordComparator39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4078199140754596575flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5274725843718367623flatfile");
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1935232616478346788flatfile");
        org.junit.Assert.assertNotNull(fileList63);
        org.junit.Assert.assertNotNull(strComparator64);
        org.junit.Assert.assertNotNull(fileList67);
        org.junit.Assert.assertNotNull(fileList68);
        org.junit.Assert.assertNotNull(fileList69);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test306");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        java.util.List<java.io.File> fileList27 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.List<java.io.File> fileList28 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator29 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder32 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator29, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = builder32.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray41 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList42 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList42, cSVRecordArray41);
        java.io.File file44 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator45 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder48 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator45, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder50 = builder48.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions51 = builder50.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator52 = csvSortOptions51.getComparator();
        java.io.File file53 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42, file44, csvSortOptions51);
        int int54 = com.google.code.externalsorting.csv.CsvExternalSort.mergeSortedFiles(fileList13, file26, csvSortOptions39, false, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList42);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray55 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList56 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList56, cSVRecordArray55);
        java.io.File file58 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator59 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator59, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder64 = builder62.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions65 = builder64.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator66 = csvSortOptions65.getComparator();
        java.io.File file67 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file58, csvSortOptions65);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray68 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList69 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList69, cSVRecordArray68);
        java.io.File file71 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator72 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder75 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator72, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder77 = builder75.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions78 = builder77.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator79 = csvSortOptions78.getComparator();
        java.io.File file80 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList69, file71, csvSortOptions78);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator81 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder84 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator81, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = builder84.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions87 = builder86.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = csvSortOptions87.getComparator();
        java.io.File file89 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList56, file71, csvSortOptions87);
        java.util.List<java.io.File> fileList90 = com.google.code.externalsorting.ExternalSort.sortInBatch(file89);
        java.util.Comparator<java.lang.String> strComparator91 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList92 = com.google.code.externalsorting.ExternalSort.sortInBatch(file89, strComparator91);
        java.util.List<java.io.File> fileList94 = com.google.code.externalsorting.ExternalSort.sortInBatch(file26, strComparator91, true);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9122473988408869100flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8263328344806936109flatfile");
        org.junit.Assert.assertNotNull(fileList27);
        org.junit.Assert.assertNotNull(fileList28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNotNull(cSVRecordArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(csvSortOptions51);
        org.junit.Assert.assertNull(cSVRecordComparator52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5654527254959370427flatfile");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(cSVRecordArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(csvSortOptions65);
        org.junit.Assert.assertNull(cSVRecordComparator66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2992497084416369277flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(csvSortOptions78);
        org.junit.Assert.assertNull(cSVRecordComparator79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file80.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6660685912355212695flatfile");
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(csvSortOptions87);
        org.junit.Assert.assertNull(cSVRecordComparator88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file89.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8334178551333556966flatfile");
        org.junit.Assert.assertNotNull(fileList90);
        org.junit.Assert.assertNotNull(strComparator91);
        org.junit.Assert.assertNotNull(fileList92);
        org.junit.Assert.assertNotNull(fileList94);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test307");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator88 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder91 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator88, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder93 = builder91.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions94 = builder93.build();
        org.apache.commons.csv.CSVRecord[] cSVRecordArray95 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList96 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList96, cSVRecordArray95);
        java.util.List<java.io.File> fileList98 = com.google.code.externalsorting.csv.CsvExternalSort.sortInBatch(file34, file48, csvSortOptions94, (java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList96);
        org.apache.commons.csv.CSVFormat cSVFormat99 = csvSortOptions94.getFormat();
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1904007968535673914flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6386718874553773615flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7217604161578481397flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1977091073203910841flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch9138421184762609425flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7135777977657681448flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7391272854960102547flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(csvSortOptions94);
        org.junit.Assert.assertNotNull(cSVRecordArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(fileList98);
        org.junit.Assert.assertNotNull(cSVFormat99);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test308");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test309");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        org.apache.commons.csv.CSVFormat cSVFormat7 = csvSortOptions6.getFormat();
        int int8 = csvSortOptions6.getNumHeader();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNotNull(cSVFormat7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test310");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) '4', (long) 100);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.numHeader(35);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test311");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder3.distinct(false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        boolean boolean15 = csvSortOptions14.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat16 = csvSortOptions14.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder3.format(cSVFormat16);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder19 = builder3.distinct(true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(cSVFormat16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test312");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator7 = csvSortOptions6.getComparator();
        boolean boolean8 = csvSortOptions6.isSkipHeader();
        boolean boolean9 = csvSortOptions6.isDistinct();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNull(cSVRecordComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test313");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray13 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList14 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList14, cSVRecordArray13);
        java.io.File file16 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator17 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder20 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator17, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder20.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions23 = builder22.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator24 = csvSortOptions23.getComparator();
        java.io.File file25 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList14, file16, csvSortOptions23);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator26 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder29 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator26, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder31 = builder29.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions32 = builder31.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = csvSortOptions32.getComparator();
        java.io.File file34 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file16, csvSortOptions32);
        java.util.List<java.io.File> fileList35 = com.google.code.externalsorting.ExternalSort.sortInBatch(file34);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray36 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList37 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList37, cSVRecordArray36);
        java.io.File file39 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList37, file39, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray50 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList51 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList51, cSVRecordArray50);
        java.io.File file53 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator54 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder57 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator54, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder59 = builder57.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions60 = builder59.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator61 = csvSortOptions60.getComparator();
        java.io.File file62 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file53, csvSortOptions60);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray63 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList64 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList64, cSVRecordArray63);
        java.io.File file66 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator67 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder70 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator67, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = builder70.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions73 = builder72.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator74 = csvSortOptions73.getComparator();
        java.io.File file75 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList64, file66, csvSortOptions73);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder79 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator76, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder81 = builder79.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions82 = builder81.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = csvSortOptions82.getComparator();
        java.io.File file84 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList51, file66, csvSortOptions82);
        java.util.List<java.io.File> fileList85 = com.google.code.externalsorting.ExternalSort.sortInBatch(file84);
        java.util.Comparator<java.lang.String> strComparator86 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        com.google.code.externalsorting.ExternalSort.sort(file48, file84, strComparator86);
        java.util.Comparator<java.lang.String> strComparator88 = null;
        long long89 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList35, file48, strComparator88);
        java.util.List<java.io.File> fileList90 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        java.util.List<java.io.File> fileList91 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch8432544883378419847flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(csvSortOptions23);
        org.junit.Assert.assertNull(cSVRecordComparator24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3644277273690883483flatfile");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(csvSortOptions32);
        org.junit.Assert.assertNull(cSVRecordComparator33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6744180625512518910flatfile");
        org.junit.Assert.assertNotNull(fileList35);
        org.junit.Assert.assertNotNull(cSVRecordArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6216108579530121418flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(cSVRecordArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(csvSortOptions60);
        org.junit.Assert.assertNull(cSVRecordComparator61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch444676165765965141flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(csvSortOptions73);
        org.junit.Assert.assertNull(cSVRecordComparator74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4588420631164889250flatfile");
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(csvSortOptions82);
        org.junit.Assert.assertNull(cSVRecordComparator83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file84.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch448598710579794657flatfile");
        org.junit.Assert.assertNotNull(fileList85);
        org.junit.Assert.assertNotNull(strComparator86);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertNotNull(fileList90);
        org.junit.Assert.assertNotNull(fileList91);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test314");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        org.apache.commons.csv.CSVFormat cSVFormat7 = csvSortOptions6.getFormat();
        java.nio.charset.Charset charset8 = csvSortOptions6.getCharset();
        long long9 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNotNull(cSVFormat7);
        org.junit.Assert.assertNotNull(charset8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test315");
        java.io.BufferedReader bufferedReader0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList2 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test316");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder3.build();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder8 = builder3.skipHeader(false);
        java.lang.Class<?> wildcardClass9 = builder3.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test317");
        long long1 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 62L + "'", long1 == 62L);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test318");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator12 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder15 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator12, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder15.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions18 = builder17.build();
        boolean boolean19 = csvSortOptions18.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat20 = csvSortOptions18.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = builder9.format(cSVFormat20);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = builder3.format(cSVFormat20);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder3.distinct(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = builder3.distinct(true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(csvSortOptions18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(cSVFormat20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test319");
        long long3 = com.google.code.externalsorting.csv.CsvExternalSort.estimateBestSizeOfBlocks(178L, (int) '4', 20L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 4L + "'", long3 == 4L);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test320");
        long long3 = com.google.code.externalsorting.ExternalSort.estimateBestSizeOfBlocks((long) '#', (int) '#', (long) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test321");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 1, (long) '#');
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder3.build();
        long long7 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 194L + "'", long7 == 194L);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test322");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        java.nio.charset.Charset charset6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.charset(charset6);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator8 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator8, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder13 = builder11.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions14 = builder13.build();
        org.apache.commons.csv.CSVFormat cSVFormat15 = csvSortOptions14.getFormat();
        java.nio.charset.Charset charset16 = csvSortOptions14.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder17 = builder7.charset(charset16);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(csvSortOptions14);
        org.junit.Assert.assertNotNull(cSVFormat15);
        org.junit.Assert.assertNotNull(charset16);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test323");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = builder5.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.numHeader((int) (short) 1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(false);
        java.lang.Class<?> wildcardClass12 = builder9.getClass();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test324");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions6 = builder5.build();
        boolean boolean7 = csvSortOptions6.isSkipHeader();
        int int8 = csvSortOptions6.getNumHeader();
        long long9 = csvSortOptions6.getMaxMemory();
        long long10 = csvSortOptions6.getMaxMemory();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(csvSortOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test325");
        org.apache.commons.csv.CSVRecord[] cSVRecordArray0 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList1 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList1, cSVRecordArray0);
        java.io.File file3 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder7 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator4, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = builder7.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions10 = builder9.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator11 = csvSortOptions10.getComparator();
        java.io.File file12 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList1, file3, csvSortOptions10);
        java.util.List<java.io.File> fileList13 = com.google.code.externalsorting.ExternalSort.sortInBatch(file12);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray14 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList15 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList15, cSVRecordArray14);
        java.io.File file17 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator18 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder21 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator18, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = builder21.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions24 = builder23.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = csvSortOptions24.getComparator();
        java.io.File file26 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file17, csvSortOptions24);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray27 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList28 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList28, cSVRecordArray27);
        java.io.File file30 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions37 = builder36.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator38 = csvSortOptions37.getComparator();
        java.io.File file39 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList28, file30, csvSortOptions37);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder43 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator40, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = builder43.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions46 = builder45.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator47 = csvSortOptions46.getComparator();
        java.io.File file48 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList15, file30, csvSortOptions46);
        java.util.List<java.io.File> fileList49 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        java.util.List<java.io.File> fileList50 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray51 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList52 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList52, cSVRecordArray51);
        java.io.File file54 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator55 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder58 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator55, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = builder58.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions61 = builder60.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator62 = csvSortOptions61.getComparator();
        java.io.File file63 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList52, file54, csvSortOptions61);
        java.util.List<java.io.File> fileList64 = com.google.code.externalsorting.ExternalSort.sortInBatch(file63);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray65 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList66 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList66, cSVRecordArray65);
        java.io.File file68 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator69 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder72 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator69, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = builder72.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions75 = builder74.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator76 = csvSortOptions75.getComparator();
        java.io.File file77 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList66, file68, csvSortOptions75);
        java.util.List<java.io.File> fileList78 = com.google.code.externalsorting.ExternalSort.sortInBatch(file77);
        java.util.List<java.io.File> fileList79 = com.google.code.externalsorting.ExternalSort.sortInBatch(file77);
        java.util.Comparator<java.lang.String> strComparator80 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long82 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList64, file77, strComparator80, true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator83 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder86 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator83, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder88 = builder86.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions89 = builder88.build();
        long long90 = csvSortOptions89.getMaxMemory();
        java.nio.charset.Charset charset91 = csvSortOptions89.getCharset();
        long long93 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList13, file48, strComparator80, charset91, false);
        java.util.List<java.io.File> fileList94 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        java.util.List<java.io.File> fileList95 = com.google.code.externalsorting.ExternalSort.sortInBatch(file48);
        org.junit.Assert.assertNotNull(cSVRecordArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(csvSortOptions10);
        org.junit.Assert.assertNull(cSVRecordComparator11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4250566379891531168flatfile");
        org.junit.Assert.assertNotNull(fileList13);
        org.junit.Assert.assertNotNull(cSVRecordArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(csvSortOptions24);
        org.junit.Assert.assertNull(cSVRecordComparator25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch7599967393243236189flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(csvSortOptions37);
        org.junit.Assert.assertNull(cSVRecordComparator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6487007596881245332flatfile");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(csvSortOptions46);
        org.junit.Assert.assertNull(cSVRecordComparator47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2353386549928033755flatfile");
        org.junit.Assert.assertNotNull(fileList49);
        org.junit.Assert.assertNotNull(fileList50);
        org.junit.Assert.assertNotNull(cSVRecordArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(csvSortOptions61);
        org.junit.Assert.assertNull(cSVRecordComparator62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6957714523618742238flatfile");
        org.junit.Assert.assertNotNull(fileList64);
        org.junit.Assert.assertNotNull(cSVRecordArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(csvSortOptions75);
        org.junit.Assert.assertNull(cSVRecordComparator76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file77.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch5083577269795514745flatfile");
        org.junit.Assert.assertNotNull(fileList78);
        org.junit.Assert.assertNotNull(fileList79);
        org.junit.Assert.assertNotNull(strComparator80);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(csvSortOptions89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-1L) + "'", long90 == (-1L));
        org.junit.Assert.assertNotNull(charset91);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertNotNull(fileList94);
        org.junit.Assert.assertNotNull(fileList95);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test326");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.Comparator<java.lang.String> strComparator15 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList17 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14, strComparator15, false);
        java.util.List<java.io.File> fileList18 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray19 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList20 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList20, cSVRecordArray19);
        java.io.File file22 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator23 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder26 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator23, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = builder26.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions29 = builder28.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator30 = csvSortOptions29.getComparator();
        java.io.File file31 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList20, file22, csvSortOptions29);
        java.util.List<java.io.File> fileList32 = com.google.code.externalsorting.ExternalSort.sortInBatch(file31);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray33 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList34 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList34, cSVRecordArray33);
        java.io.File file36 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator37 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator37, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder40.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions43 = builder42.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator44 = csvSortOptions43.getComparator();
        java.io.File file45 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList34, file36, csvSortOptions43);
        java.util.Comparator<java.lang.String> strComparator46 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        java.util.List<java.io.File> fileList48 = com.google.code.externalsorting.ExternalSort.sortInBatch(file45, strComparator46, false);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder52 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator49, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder54 = builder52.numHeader((int) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions55 = builder54.build();
        boolean boolean56 = csvSortOptions55.isDistinct();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = csvSortOptions55.getComparator();
        java.nio.charset.Charset charset58 = csvSortOptions55.getCharset();
        long long60 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList18, file31, strComparator46, charset58, false);
        long long61 = com.google.code.externalsorting.csv.SizeEstimator.estimatedSizeOf((java.lang.Object) strComparator46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList63 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, (long) (short) 100, strComparator46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6069469251421462134flatfile");
        org.junit.Assert.assertNotNull(strComparator15);
        org.junit.Assert.assertNotNull(fileList17);
        org.junit.Assert.assertNotNull(fileList18);
        org.junit.Assert.assertNotNull(cSVRecordArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(csvSortOptions29);
        org.junit.Assert.assertNull(cSVRecordComparator30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch2582869440404385445flatfile");
        org.junit.Assert.assertNotNull(fileList32);
        org.junit.Assert.assertNotNull(cSVRecordArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(csvSortOptions43);
        org.junit.Assert.assertNull(cSVRecordComparator44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch6616568887620337484flatfile");
        org.junit.Assert.assertNotNull(strComparator46);
        org.junit.Assert.assertNotNull(fileList48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(csvSortOptions55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(cSVRecordComparator57);
        org.junit.Assert.assertNotNull(charset58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 168L + "'", long61 == 168L);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test327");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, 1, (long) '#');
        java.nio.charset.Charset charset4 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.charset(charset4);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        boolean boolean13 = csvSortOptions12.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat14 = csvSortOptions12.getFormat();
        java.nio.charset.Charset charset15 = csvSortOptions12.getCharset();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder16 = builder3.charset(charset15);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder18 = builder16.skipHeader(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator19 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder22 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator19, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder24 = builder22.skipHeader(true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator25 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder28 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator25, (int) (byte) 0, (long) 0);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder30 = builder28.numHeader((int) (short) 0);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator31 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder34 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator31, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = builder34.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions37 = builder36.build();
        boolean boolean38 = csvSortOptions37.isDistinct();
        org.apache.commons.csv.CSVFormat cSVFormat39 = csvSortOptions37.getFormat();
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder40 = builder28.format(cSVFormat39);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder41 = builder22.format(cSVFormat39);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder42 = builder18.format(cSVFormat39);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(cSVFormat14);
        org.junit.Assert.assertNotNull(charset15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(csvSortOptions37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(cSVFormat39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test328");
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator0 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder3 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator0, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder5 = builder3.distinct(false);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TestGroup100Case0.test329");
        java.io.BufferedReader bufferedReader0 = null;
        org.apache.commons.csv.CSVRecord[] cSVRecordArray2 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList3 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList3, cSVRecordArray2);
        java.io.File file5 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator6 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder9 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator6, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder11 = builder9.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions12 = builder11.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator13 = csvSortOptions12.getComparator();
        java.io.File file14 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList3, file5, csvSortOptions12);
        java.util.List<java.io.File> fileList15 = com.google.code.externalsorting.ExternalSort.sortInBatch(file14);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray16 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList17 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList17, cSVRecordArray16);
        java.io.File file19 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator20 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder23 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator20, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder25 = builder23.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions26 = builder25.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator27 = csvSortOptions26.getComparator();
        java.io.File file28 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file19, csvSortOptions26);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray29 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList30 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList30, cSVRecordArray29);
        java.io.File file32 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator33 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder36 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator33, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder38 = builder36.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions39 = builder38.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator40 = csvSortOptions39.getComparator();
        java.io.File file41 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList30, file32, csvSortOptions39);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator42 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder45 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator42, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder47 = builder45.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions48 = builder47.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator49 = csvSortOptions48.getComparator();
        java.io.File file50 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList17, file32, csvSortOptions48);
        java.util.List<java.io.File> fileList51 = com.google.code.externalsorting.ExternalSort.sortInBatch(file50);
        java.util.List<java.io.File> fileList52 = com.google.code.externalsorting.ExternalSort.sortInBatch(file50);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray53 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList54 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList54, cSVRecordArray53);
        java.io.File file56 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator57 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder60 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator57, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder62 = builder60.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions63 = builder62.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator64 = csvSortOptions63.getComparator();
        java.io.File file65 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList54, file56, csvSortOptions63);
        java.util.List<java.io.File> fileList66 = com.google.code.externalsorting.ExternalSort.sortInBatch(file65);
        org.apache.commons.csv.CSVRecord[] cSVRecordArray67 = new org.apache.commons.csv.CSVRecord[] {};
        java.util.ArrayList<org.apache.commons.csv.CSVRecord> cSVRecordList68 = new java.util.ArrayList<org.apache.commons.csv.CSVRecord>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.csv.CSVRecord>) cSVRecordList68, cSVRecordArray67);
        java.io.File file70 = null;
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator71 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder74 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator71, (int) (short) 1, 0L);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder76 = builder74.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions77 = builder76.build();
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator78 = csvSortOptions77.getComparator();
        java.io.File file79 = com.google.code.externalsorting.csv.CsvExternalSort.sortAndSave((java.util.List<org.apache.commons.csv.CSVRecord>) cSVRecordList68, file70, csvSortOptions77);
        java.util.List<java.io.File> fileList80 = com.google.code.externalsorting.ExternalSort.sortInBatch(file79);
        java.util.List<java.io.File> fileList81 = com.google.code.externalsorting.ExternalSort.sortInBatch(file79);
        java.util.Comparator<java.lang.String> strComparator82 = com.google.code.externalsorting.ExternalSort.defaultcomparator;
        long long84 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList66, file79, strComparator82, true);
        java.util.Comparator<org.apache.commons.csv.CSVRecord> cSVRecordComparator85 = null;
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder88 = new com.google.code.externalsorting.csv.CsvSortOptions.Builder(cSVRecordComparator85, (int) (byte) 1, (long) (byte) -1);
        com.google.code.externalsorting.csv.CsvSortOptions.Builder builder90 = builder88.skipHeader(true);
        com.google.code.externalsorting.csv.CsvSortOptions csvSortOptions91 = builder90.build();
        long long92 = csvSortOptions91.getMaxMemory();
        java.nio.charset.Charset charset93 = csvSortOptions91.getCharset();
        long long95 = com.google.code.externalsorting.ExternalSort.mergeSortedFiles(fileList15, file50, strComparator82, charset93, false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.File> fileList97 = com.google.code.externalsorting.ExternalSort.sortInBatch(bufferedReader0, 66L, strComparator82, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(cSVRecordArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(csvSortOptions12);
        org.junit.Assert.assertNull(cSVRecordComparator13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch1296609240852895737flatfile");
        org.junit.Assert.assertNotNull(fileList15);
        org.junit.Assert.assertNotNull(cSVRecordArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(csvSortOptions26);
        org.junit.Assert.assertNull(cSVRecordComparator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3958667164869686527flatfile");
        org.junit.Assert.assertNotNull(cSVRecordArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(csvSortOptions39);
        org.junit.Assert.assertNull(cSVRecordComparator40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch4118981211510092631flatfile");
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(csvSortOptions48);
        org.junit.Assert.assertNull(cSVRecordComparator49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3992562516625699073flatfile");
        org.junit.Assert.assertNotNull(fileList51);
        org.junit.Assert.assertNotNull(fileList52);
        org.junit.Assert.assertNotNull(cSVRecordArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(csvSortOptions63);
        org.junit.Assert.assertNull(cSVRecordComparator64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file65.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch3978645256723015147flatfile");
        org.junit.Assert.assertNotNull(fileList66);
        org.junit.Assert.assertNotNull(cSVRecordArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(csvSortOptions77);
        org.junit.Assert.assertNull(cSVRecordComparator78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T");
// flaky:         org.junit.Assert.assertEquals(file79.toString(), "/var/folders/6v/t_t9cghd03nfq9mmw9_1tb6r0000gn/T/sortInBatch729156047445640188flatfile");
        org.junit.Assert.assertNotNull(fileList80);
        org.junit.Assert.assertNotNull(fileList81);
        org.junit.Assert.assertNotNull(strComparator82);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(csvSortOptions91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertNotNull(charset93);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
    }
}
