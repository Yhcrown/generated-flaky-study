[TIME]: 0:00:42.108941
Randoop for Java version "4.3.2, local changes, branch master, commit df17bc8, 2023-01-08".

Will try to generate tests for 102 classes.
PUBLIC MEMBERS=663
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    sideEffectFreeMethods: 1115, runtimePrimitivesSeen: 38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2023-10-31T23:51:25.314Z     52.9M used)
Progress update: steps=1000, test inputs generated=474, failing inputs=0      (2023-10-31T23:51:42.109Z     603M used)
Progress update: steps=1077, test inputs generated=527, failing inputs=0      (2023-10-31T23:51:43.903Z     978M used)
Normal method executions: 201259
Exceptional method executions: 21

Average method execution time (normal termination):      0.0609
Average method execution time (exceptional termination): 0.450
Approximate memory usage 978M
Explorer = ForwardGenerator(steps: 1077, null steps: 550, num_sequences_generated: 527;
    allSequences: 527, regresson seqs: 500, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 27;
    sideEffectFreeMethods: 1115, runtimePrimitivesSeen: 526)

No error-revealing tests to output.

About to look for failing assertions in 273 regression sequences.

Regression test output:
Regression test count: 273
Writing regression JUnit tests...
Created file /Users/yhcrown/Documents/GitHub/generated-flaky-study/randoop_tests/DiUS-java-faker/a8b8ff0acc6fcc629d08a3a9952f83be56a9a3c3/alltests/TestGroup100Case0.java
Created file /Users/yhcrown/Documents/GitHub/generated-flaky-study/randoop_tests/DiUS-java-faker/a8b8ff0acc6fcc629d08a3a9952f83be56a9a3c3/alltests/TestGroup100Case.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  java.lang.String.valueOf(long)
  Possibly flaky:  java.lang.String.valueOf(char)
  Possibly flaky:  java.lang.String.valueOf(double)
  Possibly flaky:  java.lang.String.valueOf(int)
  Possibly flaky:  java.lang.String.valueOf(boolean)
  Possibly flaky:  java.lang.Long.valueOf(long)
  Possibly flaky:  java.lang.Long.toString(long)
  Possibly flaky:  java.lang.Long.toOctalString(long)
  Possibly flaky:  java.lang.Long.toHexString(long)
  Possibly flaky:  java.lang.Long.toBinaryString(long)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0

Uncompilable sequences generated (count: 21).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
