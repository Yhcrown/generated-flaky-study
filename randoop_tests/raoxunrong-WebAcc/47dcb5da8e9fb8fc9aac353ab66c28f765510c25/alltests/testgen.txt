[TIME]: 0:00:01.465514
Randoop for Java version "4.3.2, local changes, branch master, commit df17bc8, 2023-01-08".

Will try to generate tests for 0 classes.
You provided no methods to test, so no tests for them can be generated.

Additional diagnostis appear below.
Model with hashcode 770189387:
  classTypes = [java.lang.Object]
  inputTypes = []
  coveredClassesGoal = []
  classLiteralMap = {}
  annotatedTestValues = []
  contracts = ContractSet[size=12]
    arity 1: [randoop.contract.EqualsReflexive@396e2f39, randoop.contract.EqualsToNullRetFalse@a74868d, randoop.contract.EqualsReturnsNormally@12c8a2c0, randoop.contract.CompareToReflexive@7e0e6aa2, randoop.contract.SizeToArrayLength@365185bd]
    arity 2: [randoop.contract.EqualsSymmetric@18bf3d14, randoop.contract.EqualsHashcode@4fb64261, randoop.contract.CompareToAntiSymmetric@42607a4f, randoop.contract.CompareToEquals@782663d3]
    arity 3: [randoop.contract.EqualsTransitive@1990a65e, randoop.contract.CompareToSubs@64485a47, randoop.contract.CompareToTransitive@25bbf683]
  omitMethods = [
    \bensuresCapacity\b
    ^\Qcom.google.common.collect.Iterators.cycle(
    ^\Qorg.apache.commons.math4.genetics.GeneticAlgorithm.getRandomGenerator()\E$
    ^\Qorg.apache.commons.math4.util.FastMath.random()\E$
    ^\Qjava.util.Date.<init>()\E$
    ^\Qorg.joda.time.DateTime.now()\E$
    ^\Qorg.joda.time.LocalDate.<init>\E$
    ^\Qnew org.joda.time.Partial.<init>()\E$
    ^\Qjava.io.File.list()\E$
    ^\Qjava.io.File.list(java.io.FilenameFilter)\E$
    ^\Qjava.io.File.listFiles()\E$
    ^\Qjava.io.File.listFiles(java.io.FileFilter)\E$
    ^\Qjava.io.File.listFiles(java.io.FilenameFilter)\E$
    ^\Qjava.io.File.listRoots()\E$
    ^\Qjava.lang.Class.getSigners()\E$
    ^\Qjava.lang.Object.hashCode()\E$
    ^\Qjava.lang.String.hashCode()\E$
    ^\Qjava.lang.System.clearProperty(java.lang.String)\E$
    ^\Qjava.lang.System.console()\E$
    ^\Qjava.lang.System.currentTimeMillis()\E$
    ^\Qjava.lang.System.getProperties()\E$
    ^\Qjava.lang.System.getProperty(java.lang.String)\E$
    ^\Qjava.lang.System.getProperty(java.lang.String, java.lang.String)\E$
    ^\Qjava.lang.System.getSecurityManager()\E$
    ^\Qjava.lang.System.getenv()\E$
    ^\Qjava.lang.System.getenv(java.lang.String)\E$
    ^\Qjava.lang.System.identityHashCode(java.lang.Object)\E$
    ^\Qjava.lang.System.inheritedChannel()\E$
    ^\Qjava.lang.System.mapLibraryName(java.lang.String)\E$
    ^\Qjava.lang.System.nanoTime()\E$
    ^\Qjava.lang.System.setProperty(java.lang.String, java.lang.String)\E$
    ^\Qjava.lang.reflect.Method.hashCode()\E$
    ^\Qjava.text.BreakIterator.getAvailableLocales()\E$
    ^\Qjava.util.AbstractList.hashCode()\E$
    ^\Qjava.util.AbstractSet.hashCode()\E$
    ^\Qjava.util.Arrays.deepHashCode(java.lang.Object[])\E$
    ^\Qjava.util.Arrays.hashCode(boolean[])\E$
    ^\Qjava.util.Arrays.hashCode(byte[])\E$
    ^\Qjava.util.Arrays.hashCode(char[])\E$
    ^\Qjava.util.Arrays.hashCode(double[])\E$
    ^\Qjava.util.Arrays.hashCode(float[])\E$
    ^\Qjava.util.Arrays.hashCode(int[])\E$
    ^\Qjava.util.Arrays.hashCode(java.lang.Object[])\E$
    ^\Qjava.util.Arrays.hashCode(long[])\E$
    ^\Qjava.util.Arrays.hashCode(short[])\E$
    ^\Qjava.util.Collection.hashCode()\E$
    ^\Qjava.util.Collections.shuffle(java.util.List)\E$
    ^\Qjava.util.Comparator.compare(java.lang.Object, java.lang.Object)\E$
    ^\Qjava.util.List.hashCode()\E$
    ^\Qjava.util.Random.<init>()\E$
    ^\Qjava.util.Set.hashCode()\E$
  ]
Operations: (1)
  java.lang.Object.<init> : () -> java.lang.Object

There are no methods for Randoop to test.  See diagnostics above.  Exiting.
